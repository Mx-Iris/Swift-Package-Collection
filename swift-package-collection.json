{"formatVersion":"1.0","generatedAt":"2023-01-27T18:20:45Z","generatedBy":{"name":"JH"},"keywords":["favorite"],"name":"JH's favorite packages","overview":"This collection contains my favorite Swift packages.","packages":[{"keywords":["barcode","barcode-generator","barcode-scanner","barcodes","generator","hacktoberfest","ios","macos","qrcode","qrcode-generator","qrcode-reader","qrcode-scanner","qrcodes","recognizer","swift","tvos","watchos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/EFPrefix/EFQRCode/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/EFPrefix/EFQRCode/main/README.md","summary":"A better way to operate QR Code in Swift, support iOS, macOS, watchOS and tvOS.","url":"https://github.com/EFPrefix/EFQRCode","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"EFQRCode","products":[{"name":"EFQRCode","targets":["EFQRCode"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"EFQRCode","name":"EFQRCode"}],"toolsVersion":"5.3"}},"summary":"6.2.1","version":"6.2.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"EFQRCode","products":[{"name":"EFQRCode","targets":["EFQRCode"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"EFQRCode","name":"EFQRCode"}],"toolsVersion":"5.3"}},"summary":"6.2.0","version":"6.2.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"EFQRCode","products":[{"name":"EFQRCode","targets":["EFQRCode"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"EFQRCode","name":"EFQRCode"}],"toolsVersion":"5.3"}},"version":"6.1.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"EFQRCode","products":[{"name":"EFQRCode","targets":["EFQRCode"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"EFQRCode","name":"EFQRCode"}],"toolsVersion":"5.0"}},"version":"5.1.9"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"EFQRCode","products":[{"name":"EFQRCode","targets":["EFQRCode"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"EFQRCode","name":"EFQRCode"}],"toolsVersion":"5.0"}},"summary":"5.1.8","version":"5.1.8"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"},{"name":"macos","version":"10.11"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"EFQRCode","products":[{"name":"EFQRCode","targets":["EFQRCode"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"EFQRCode","name":"EFQRCode"}],"toolsVersion":"5.0"}},"summary":"5.1.7","version":"5.1.7"}]},{"keywords":[],"license":{"name":"GPL-3.0","url":"https://raw.githubusercontent.com/QMUI/LookinServer/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/QMUI/LookinServer/develop/README.md","summary":"Free macOS app for iOS view debugging.","url":"https://github.com/QMUI/LookinServer","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"LookinServer","products":[{"name":"LookinServer","targets":["LookinServer"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LookinServer","name":"LookinServer"}],"toolsVersion":"5.3"}},"version":"1.1.5"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"LookinServer","products":[{"name":"LookinServer","targets":["LookinServer"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LookinServer","name":"LookinServer"}],"toolsVersion":"5.3"}},"version":"1.1.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"LookinServer","products":[{"name":"LookinServer","targets":["LookinServer"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LookinServer","name":"LookinServer"}],"toolsVersion":"5.3"}},"version":"1.1.3"}]},{"keywords":["ios","keychain","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/evgenyneu/keychain-swift/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/evgenyneu/keychain-swift/master/README.md","summary":"Helper functions for saving text in Keychain securely for iOS, OS X, tvOS and watchOS.","url":"https://github.com/evgenyneu/keychain-swift","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"packageName":"KeychainSwift","products":[{"name":"KeychainSwift","targets":["KeychainSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeychainSwift","name":"KeychainSwift"}],"toolsVersion":"5.5"}},"version":"20.0.0"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"KeychainSwift","products":[{"name":"KeychainSwift","targets":["KeychainSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeychainSwift","name":"KeychainSwift"}],"toolsVersion":"4.2"}},"version":"19.0.0"}]},{"keywords":["dom","extract","html","html-document","parse","selector","swift","swiftsoup"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/scinfu/SwiftSoup/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/scinfu/SwiftSoup/master/README.md","summary":"SwiftSoup: Pure Swift HTML Parser, with best of DOM, CSS, and jquery (Supports Linux, iOS, Mac, tvOS, watchOS)","url":"https://github.com/scinfu/SwiftSoup","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"SwiftSoup","products":[{"name":"SwiftSoup","targets":["SwiftSoup"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftSoup","name":"SwiftSoup"}],"toolsVersion":"5.0"}},"summary":"","version":"2.5.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"SwiftSoup","products":[{"name":"SwiftSoup","targets":["SwiftSoup"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftSoup","name":"SwiftSoup"}],"toolsVersion":"5.0"}},"summary":"2.4.3","version":"2.4.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"SwiftSoup","products":[{"name":"SwiftSoup","targets":["SwiftSoup"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftSoup","name":"SwiftSoup"}],"toolsVersion":"5.0"}},"summary":"","version":"2.4.2"},{"defaultToolsVersion":"4.1","manifests":{"4.1":{"packageName":"SwiftSoup","products":[{"name":"SwiftSoup","targets":["SwiftSoup"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftSoup","name":"SwiftSoup"}],"toolsVersion":"4.1"}},"summary":"","version":"1.7.5"},{"defaultToolsVersion":"4.1","manifests":{"4.1":{"packageName":"SwiftSoup","products":[{"name":"SwiftSoup","targets":["SwiftSoup"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftSoup","name":"SwiftSoup"}],"toolsVersion":"4.1"}},"summary":"","version":"1.7.4"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"SwiftSoup","products":[{"name":"SwiftSoup","targets":["SwiftSoup"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftSoup","name":"SwiftSoup"}],"toolsVersion":"4.0"}},"summary":"","version":"1.7.3"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/sakiyamaK/DeclarativeUIKit/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/sakiyamaK/DeclarativeUIKit/develop/README.md","summary":"DeclarativeUIKit","url":"https://github.com/sakiyamaK/DeclarativeUIKit","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"DeclarativeUIKit","products":[{"name":"DeclarativeUIKit","targets":["DeclarativeUIKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DeclarativeUIKit","name":"DeclarativeUIKit"}],"toolsVersion":"5.5"}},"summary":"","version":"1.12.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"DeclarativeUIKit","products":[{"name":"DeclarativeUIKit","targets":["DeclarativeUIKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DeclarativeUIKit","name":"DeclarativeUIKit"}],"toolsVersion":"5.5"}},"summary":"","version":"1.11.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"DeclarativeUIKit","products":[{"name":"DeclarativeUIKit","targets":["DeclarativeUIKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DeclarativeUIKit","name":"DeclarativeUIKit"}],"toolsVersion":"5.5"}},"summary":"","version":"1.11.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"DeclarativeUIKit","products":[{"name":"DeclarativeUIKit","targets":["DeclarativeUIKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DeclarativeUIKit","name":"DeclarativeUIKit"}],"toolsVersion":"5.5"}},"summary":"","version":"0.26.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"DeclarativeUIKit","products":[{"name":"DeclarativeUIKit","targets":["DeclarativeUIKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DeclarativeUIKit","name":"DeclarativeUIKit"}],"toolsVersion":"5.5"}},"summary":"","version":"0.25.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"DeclarativeUIKit","products":[{"name":"DeclarativeUIKit","targets":["DeclarativeUIKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DeclarativeUIKit","name":"DeclarativeUIKit"}],"toolsVersion":"5.5"}},"summary":"","version":"0.24.0"}]},{"keywords":["architecture","design-patterns","ios-lib","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/radianttap/Coordinator/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/radianttap/Coordinator/master/README.md","summary":"Implementation of Coordinators app design pattern.","url":"https://github.com/radianttap/Coordinator","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"Coordinator","products":[{"name":"Coordinator","targets":["Coordinator"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Coordinator","name":"Coordinator"}],"toolsVersion":"5.1"}},"summary":"","version":"6.4.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"Coordinator","products":[{"name":"Coordinator","targets":["Coordinator"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Coordinator","name":"Coordinator"}],"toolsVersion":"5.1"}},"summary":"","version":"6.4.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"Coordinator","products":[{"name":"Coordinator","targets":["Coordinator"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Coordinator","name":"Coordinator"}],"toolsVersion":"5.1"}},"summary":"","version":"6.4.1"}]},{"keywords":["calendar","calendar-api","calendars","date","date-formatting","date-time","dates","datetime","swift","swift-library","time","timezone"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/davedelong/time/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/davedelong/time/master/README.md","summary":"Building a better date/time library for Swift","url":"https://github.com/davedelong/time","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"packageName":"Time","products":[{"name":"Time","targets":["Time"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Time","name":"Time"}],"toolsVersion":"5.5"}},"summary":"Tagging for documentation","version":"0.9.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"Time","products":[{"name":"Time","targets":["Time"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Time","name":"Time"}],"toolsVersion":"5.0"}},"summary":"","version":"0.9.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"Time","products":[{"name":"Time","targets":["Time"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Time","name":"Time"}],"toolsVersion":"5.0"}},"version":"0.9.1"}]},{"keywords":[],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/fatbobman/SwipeCell/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/fatbobman/SwipeCell/main/README.md","summary":"SwipeCell is a SwiftUI library, used to achieve the left and right sliding menu effect similar to the iOS mail app.","url":"https://github.com/fatbobman/SwipeCell","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"10.13"}],"packageName":"SwipeCell","products":[{"name":"SwipeCell","targets":["SwipeCell"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwipeCell","name":"SwipeCell"}],"toolsVersion":"5.3"}},"summary":"By @twodayslate : Improvements to initial offset Switch to offset based approach to cell status based approach Replaces AnyView with ViewBuilder","version":"0.9.5"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"10.13"}],"packageName":"SwipeCell","products":[{"name":"SwipeCell","targets":["SwipeCell"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwipeCell","name":"SwipeCell"}],"toolsVersion":"5.3"}},"summary":"Add support for an initial offset This helps for user onboarding and adds some discoverability.","version":"0.9.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"10.13"}],"packageName":"SwipeCell","products":[{"name":"SwipeCell","targets":["SwipeCell"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwipeCell","name":"SwipeCell"}],"toolsVersion":"5.3"}},"summary":"","version":"0.9.3"}]},{"keywords":["activity","apple","circle","conical-gradient","gradient","ios","progress","progress-bar","progress-circle","progress-ring","progress-view","ring","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/maxkonovalov/MKRingProgressView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/maxkonovalov/MKRingProgressView/master/README.md","summary":"⭕️ Ring progress view similar to Activity app on Apple Watch","url":"https://github.com/maxkonovalov/MKRingProgressView","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"MKRingProgressView","products":[{"name":"MKRingProgressView","targets":["MKRingProgressView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MKRingProgressView","name":"MKRingProgressView"}],"toolsVersion":"5.0"}},"summary":"","version":"2.3.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"}],"packageName":"MKRingProgressView","products":[{"name":"MKRingProgressView","targets":["MKRingProgressView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MKRingProgressView","name":"MKRingProgressView"}],"toolsVersion":"5.0"}},"summary":"","version":"2.2.3"}]},{"keywords":["ios","ios-animation","ios-swift","swift","swift3"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Daltron/NotificationBanner/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Daltron/NotificationBanner/master/README.md","summary":"The easiest way to display highly customizable in app notification banners in iOS","url":"https://github.com/Daltron/NotificationBanner","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"NotificationBannerSwift","products":[{"name":"NotificationBannerSwift","targets":["NotificationBannerSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NotificationBannerSwift","name":"NotificationBannerSwift"}],"toolsVersion":"5.0"}},"version":"3.2.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"NotificationBannerSwift","products":[{"name":"NotificationBannerSwift","targets":["NotificationBannerSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NotificationBannerSwift","name":"NotificationBannerSwift"}],"toolsVersion":"5.0"}},"version":"3.1.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"NotificationBannerSwift","products":[{"name":"NotificationBannerSwift","targets":["NotificationBannerSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NotificationBannerSwift","name":"NotificationBannerSwift"}],"toolsVersion":"5.0"}},"version":"3.0.6"}]},{"keywords":["diff","swift","xcode","xcodeproj","xcodeproject"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/bloomberg/xcdiff/main/LICENSE.txt"},"readmeURL":"https://raw.githubusercontent.com/bloomberg/xcdiff/main/README.md","summary":"A tool which helps you diff xcodeproj files.","url":"https://github.com/bloomberg/xcdiff","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"xcdiff","products":[{"name":"XCDiffCommand","targets":["XCDiffCommand"],"type":{"library":["automatic"]}},{"name":"XCDiffCore","targets":["XCDiffCore"],"type":{"library":["automatic"]}},{"name":"xcdiff","targets":["XCDiff"],"type":{"executable":null}}],"targets":[{"moduleName":"XCDiff","name":"XCDiff"},{"moduleName":"XCDiffCommand","name":"XCDiffCommand"},{"moduleName":"XCDiffCore","name":"XCDiffCore"}],"toolsVersion":"5.5"}},"version":"0.10.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"xcdiff","products":[{"name":"XCDiffCommand","targets":["XCDiffCommand"],"type":{"library":["automatic"]}},{"name":"XCDiffCore","targets":["XCDiffCore"],"type":{"library":["automatic"]}},{"name":"xcdiff","targets":["XCDiff"],"type":{"executable":null}}],"targets":[{"moduleName":"XCDiff","name":"XCDiff"},{"moduleName":"XCDiffCommand","name":"XCDiffCommand"},{"moduleName":"XCDiffCore","name":"XCDiffCore"}],"toolsVersion":"5.5"}},"version":"0.9.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"xcdiff","products":[{"name":"XCDiffCommand","targets":["XCDiffCommand"],"type":{"library":["automatic"]}},{"name":"XCDiffCore","targets":["XCDiffCore"],"type":{"library":["automatic"]}},{"name":"xcdiff","targets":["XCDiff"],"type":{"executable":null}}],"targets":[{"moduleName":"XCDiff","name":"XCDiff"},{"moduleName":"XCDiffCommand","name":"XCDiffCommand"},{"moduleName":"XCDiffCore","name":"XCDiffCore"}],"toolsVersion":"5.0"}},"version":"0.8.0"}]},{"keywords":["ios","macos","objective-c","swift","swift-5","xcode","xcodeproj"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/tuist/XcodeProj/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/tuist/XcodeProj/main/README.md","summary":" 📝 Read, update and write your Xcode projects","url":"https://github.com/tuist/XcodeProj","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"XcodeProj","products":[{"name":"XcodeProj","targets":["XcodeProj"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"XcodeProj","name":"XcodeProj"}],"toolsVersion":"5.2"}},"version":"8.8.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"XcodeProj","products":[{"name":"XcodeProj","targets":["XcodeProj"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"XcodeProj","name":"XcodeProj"}],"toolsVersion":"5.2"}},"version":"8.7.1"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"XcodeProj","products":[{"name":"XcodeProj","targets":["XcodeProj"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"XcodeProj","name":"XcodeProj"}],"toolsVersion":"5.2"}},"version":"8.7.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"XcodeProj","products":[{"name":"XcodeProj","targets":["XcodeProj"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"XcodeProj","name":"XcodeProj"}],"toolsVersion":"5.0"}},"version":"7.23.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"XcodeProj","products":[{"name":"XcodeProj","targets":["XcodeProj"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"XcodeProj","name":"XcodeProj"}],"toolsVersion":"5.0"}},"version":"7.22.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"XcodeProj","products":[{"name":"XcodeProj","targets":["XcodeProj"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"XcodeProj","name":"XcodeProj"}],"toolsVersion":"5.0"}},"version":"7.21.0"}]},{"keywords":["backport","ios","macos","modal","photopicker","presentation","propertywrapper","sharesheet","swift","swiftui","textview","tvos","watchos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/shaps80/SwiftUIBackports/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/shaps80/SwiftUIBackports/main/README.md","summary":"A collection of SwiftUI backports for iOS, macOS, tvOS and watchOS","url":"https://github.com/shaps80/SwiftUIBackports","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"macos","version":"10.15"}],"packageName":"SwiftUIBackports","products":[{"name":"SwiftUIBackports","targets":["SwiftUIBackports"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIBackports","name":"SwiftUIBackports"}],"toolsVersion":"5.6"}},"version":"1.10.0"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"macos","version":"10.15"}],"packageName":"SwiftUIBackports","products":[{"name":"SwiftUIBackports","targets":["SwiftUIBackports"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIBackports","name":"SwiftUIBackports"}],"toolsVersion":"5.6"}},"version":"1.9.1"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"macos","version":"10.15"}],"packageName":"SwiftUIBackports","products":[{"name":"SwiftUIBackports","targets":["SwiftUIBackports"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIBackports","name":"SwiftUIBackports"}],"toolsVersion":"5.6"}},"version":"1.9.0"}]},{"keywords":["swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/tmandry/AXSwift/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/tmandry/AXSwift/main/README.md","summary":"Swift wrapper for accessibility clients","url":"https://github.com/tmandry/AXSwift","versions":[{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"AXSwift","products":[{"name":"AXSwift","targets":["AXSwift"],"type":{"library":["automatic"]}},{"name":"AXSwiftExample","targets":["AXSwiftExample"],"type":{"executable":null}},{"name":"AXSwiftObserverExample","targets":["AXSwiftObserverExample"],"type":{"executable":null}}],"targets":[{"moduleName":"AXSwift","name":"AXSwift"},{"moduleName":"AXSwiftExample","name":"AXSwiftExample"},{"moduleName":"AXSwiftObserverExample","name":"AXSwiftObserverExample"}],"toolsVersion":"4.0"}},"version":"0.3.2"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"AXSwift","products":[{"name":"AXSwift","targets":["AXSwift"],"type":{"library":["automatic"]}},{"name":"AXSwiftExample","targets":["AXSwiftExample"],"type":{"executable":null}},{"name":"AXSwiftObserverExample","targets":["AXSwiftObserverExample"],"type":{"executable":null}}],"targets":[{"moduleName":"AXSwift","name":"AXSwift"},{"moduleName":"AXSwiftExample","name":"AXSwiftExample"},{"moduleName":"AXSwiftObserverExample","name":"AXSwiftObserverExample"}],"toolsVersion":"4.0"}},"version":"0.3.1"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"AXSwift","products":[{"name":"AXSwift","targets":["AXSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AXSwift","name":"AXSwift"}],"toolsVersion":"4.0"}},"version":"0.3.0"}]},{"keywords":[],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/FLEXTool/FLEX/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/FLEXTool/FLEX/master/README.md","summary":"An in-app debugging and exploration tool for iOS","url":"https://github.com/FLEXTool/FLEX","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"FLEX","products":[{"name":"FLEX","targets":["FLEX"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FLEX","name":"FLEX"}],"toolsVersion":"5.3"}},"version":"5.22.10"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"FLEX","products":[{"name":"FLEX","targets":["FLEX"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FLEX","name":"FLEX"}],"toolsVersion":"5.3"}},"version":"4.7.0"}]},{"keywords":["animation","appkit","gestures","interaction-design","ios","motion","swift","swiftui","ui","uikit"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/jtrivedi/Wave/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/jtrivedi/Wave/main/README.md","summary":"Wave is a spring-based animation engine for iOS and macOS that makes it easy to create fluid, interruptible animations that feel great.","url":"https://github.com/jtrivedi/Wave","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.12"}],"packageName":"Wave","products":[{"name":"Wave","targets":["Wave"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Wave","name":"Wave"}],"toolsVersion":"5.6"}},"summary":"Fixes an issue with animating affine scale and translation.","version":"0.3.1"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.12"}],"packageName":"Wave","products":[{"name":"Wave","targets":["Wave"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Wave","name":"Wave"}],"toolsVersion":"5.6"}},"summary":"Version `0.3.0` adds macOS as a supported platform for Wave, and enables first-class animation support for AppKit.","version":"0.3.0"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Wave","products":[{"name":"Wave","targets":["Wave"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Wave","name":"Wave"}],"toolsVersion":"5.6"}},"summary":"Support 120 fps animation on ProMotion devices.","version":"0.2.1"}]},{"keywords":["actors","appkit","cache","database","ios","macos","offline-first","persistence","swift","swiftui","uikit"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/mergesort/Boutique/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/mergesort/Boutique/main/README.md","summary":"✨ A magical persistence library (and so much more) for state-driven iOS and Mac apps ✨","url":"https://github.com/mergesort/Boutique","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"}],"packageName":"Boutique","products":[{"name":"Boutique","targets":["Boutique"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Boutique","name":"Boutique"}],"toolsVersion":"5.6"}},"version":"2.1.1"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"}],"packageName":"Boutique","products":[{"name":"Boutique","targets":["Boutique"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Boutique","name":"Boutique"}],"toolsVersion":"5.6"}},"version":"2.1.0"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"}],"packageName":"Boutique","products":[{"name":"Boutique","targets":["Boutique"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Boutique","name":"Boutique"}],"toolsVersion":"5.6"}},"version":"2.0.4"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"}],"packageName":"Boutique","products":[{"name":"Boutique","targets":["Boutique"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Boutique","name":"Boutique"}],"toolsVersion":"5.6"}},"version":"1.1.0"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"}],"packageName":"Boutique","products":[{"name":"Boutique","targets":["Boutique"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Boutique","name":"Boutique"}],"toolsVersion":"5.6"}},"version":"1.0.3"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"}],"packageName":"Boutique","products":[{"name":"Boutique","targets":["Boutique"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Boutique","name":"Boutique"}],"toolsVersion":"5.6"}},"version":"1.0.2"}]},{"keywords":["macos","quickaction","spotlight","swift","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/dagronf/DSFQuickActionBar/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/dagronf/DSFQuickActionBar/main/README.md","summary":"A spotlight-inspired quick action bar for macOS. AppKit/SwiftUI","url":"https://github.com/dagronf/DSFQuickActionBar","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"DSFQuickActionBar","products":[{"name":"DSFQuickActionBar","targets":["DSFQuickActionBar"],"type":{"library":["automatic"]}},{"name":"DSFQuickActionBar-shared","targets":["DSFQuickActionBar"],"type":{"library":["dynamic"]}},{"name":"DSFQuickActionBar-static","targets":["DSFQuickActionBar"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFQuickActionBar","name":"DSFQuickActionBar"}],"toolsVersion":"5.4"}},"version":"6.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"DSFQuickActionBar","products":[{"name":"DSFQuickActionBar","targets":["DSFQuickActionBar"],"type":{"library":["automatic"]}},{"name":"DSFQuickActionBar-shared","targets":["DSFQuickActionBar"],"type":{"library":["dynamic"]}},{"name":"DSFQuickActionBar-static","targets":["DSFQuickActionBar"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFQuickActionBar","name":"DSFQuickActionBar"}],"toolsVersion":"5.3"}},"version":"5.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"DSFQuickActionBar","products":[{"name":"DSFQuickActionBar","targets":["DSFQuickActionBar"],"type":{"library":["automatic"]}},{"name":"DSFQuickActionBar-shared","targets":["DSFQuickActionBar"],"type":{"library":["dynamic"]}},{"name":"DSFQuickActionBar-static","targets":["DSFQuickActionBar"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFQuickActionBar","name":"DSFQuickActionBar"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["appkit","macos","swift","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/dagronf/DSFAppKitBuilder/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/dagronf/DSFAppKitBuilder/main/README.md","summary":"A SwiftUI-style DSL for AppKit (macOS)","url":"https://github.com/dagronf/DSFAppKitBuilder","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"DSFAppKitBuilder","products":[{"name":"DSFAppKitBuilder","targets":["DSFAppKitBuilder"],"type":{"library":["automatic"]}},{"name":"DSFAppKitBuilder-shared","targets":["DSFAppKitBuilder"],"type":{"library":["dynamic"]}},{"name":"DSFAppKitBuilder-static","targets":["DSFAppKitBuilder"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFAppKitBuilder","name":"DSFAppKitBuilder"}],"toolsVersion":"5.4"}},"version":"9.4.1"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"DSFAppKitBuilder","products":[{"name":"DSFAppKitBuilder","targets":["DSFAppKitBuilder"],"type":{"library":["automatic"]}},{"name":"DSFAppKitBuilder-shared","targets":["DSFAppKitBuilder"],"type":{"library":["dynamic"]}},{"name":"DSFAppKitBuilder-static","targets":["DSFAppKitBuilder"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFAppKitBuilder","name":"DSFAppKitBuilder"}],"toolsVersion":"5.4"}},"version":"9.4.0"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"DSFAppKitBuilder","products":[{"name":"DSFAppKitBuilder","targets":["DSFAppKitBuilder"],"type":{"library":["automatic"]}},{"name":"DSFAppKitBuilder-shared","targets":["DSFAppKitBuilder"],"type":{"library":["dynamic"]}},{"name":"DSFAppKitBuilder-static","targets":["DSFAppKitBuilder"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFAppKitBuilder","name":"DSFAppKitBuilder"}],"toolsVersion":"5.4"}},"version":"9.3.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"DSFAppKitBuilder","products":[{"name":"DSFAppKitBuilder","targets":["DSFAppKitBuilder"],"type":{"library":["automatic"]}},{"name":"DSFAppKitBuilder-shared","targets":["DSFAppKitBuilder"],"type":{"library":["dynamic"]}},{"name":"DSFAppKitBuilder-static","targets":["DSFAppKitBuilder"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFAppKitBuilder","name":"DSFAppKitBuilder"}],"toolsVersion":"5.3"}},"version":"8.9.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"DSFAppKitBuilder","products":[{"name":"DSFAppKitBuilder","targets":["DSFAppKitBuilder"],"type":{"library":["automatic"]}},{"name":"DSFAppKitBuilder-shared","targets":["DSFAppKitBuilder"],"type":{"library":["dynamic"]}},{"name":"DSFAppKitBuilder-static","targets":["DSFAppKitBuilder"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFAppKitBuilder","name":"DSFAppKitBuilder"}],"toolsVersion":"5.3"}},"version":"8.8.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"DSFAppKitBuilder","products":[{"name":"DSFAppKitBuilder","targets":["DSFAppKitBuilder"],"type":{"library":["automatic"]}},{"name":"DSFAppKitBuilder-shared","targets":["DSFAppKitBuilder"],"type":{"library":["dynamic"]}},{"name":"DSFAppKitBuilder-static","targets":["DSFAppKitBuilder"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFAppKitBuilder","name":"DSFAppKitBuilder"}],"toolsVersion":"5.3"}},"version":"8.8.1"}]},{"keywords":["appkit","focus","focus-management","macos","objective-c","swift","tab"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/dagronf/AppKitFocusOverlay/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/dagronf/AppKitFocusOverlay/main/README.md","summary":"Add hotkey(s) to display the key focus path for any window in your AppKit application.","url":"https://github.com/dagronf/AppKitFocusOverlay","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"AppKitFocusOverlay","products":[{"name":"AppKitFocusOverlay","targets":["AppKitFocusOverlay"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AppKitFocusOverlay","name":"AppKitFocusOverlay"}],"toolsVersion":"5.3"}},"version":"0.7.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"AppKitFocusOverlay","products":[{"name":"AppKitFocusOverlay","targets":["AppKitFocusOverlay"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AppKitFocusOverlay","name":"AppKitFocusOverlay"}],"toolsVersion":"5.3"}},"version":"0.6.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"AppKitFocusOverlay","products":[{"name":"AppKitFocusOverlay","targets":["AppKitFocusOverlay"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AppKitFocusOverlay","name":"AppKitFocusOverlay"}],"toolsVersion":"5.3"}},"version":"0.5.0"}]},{"keywords":["appkit","chart","graph","ios","mac-catalyst","macos","objective-c","sparkline","swift","tvos","uikit"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/dagronf/DSFSparkline/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/dagronf/DSFSparkline/master/README.md","summary":"A lightweight sparkline component for macOS, iOS and tvOS","url":"https://github.com/dagronf/DSFSparkline","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"}],"packageName":"DSFSparkline","products":[{"name":"DSFSparkline","targets":["DSFSparkline"],"type":{"library":["automatic"]}},{"name":"DSFSparkline-shared","targets":["DSFSparkline"],"type":{"library":["dynamic"]}},{"name":"DSFSparkline-static","targets":["DSFSparkline"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFSparkline","name":"DSFSparkline"}],"toolsVersion":"5.3"}},"version":"4.6.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"}],"packageName":"DSFSparkline","products":[{"name":"DSFSparkline","targets":["DSFSparkline"],"type":{"library":["automatic"]}},{"name":"DSFSparkline-shared","targets":["DSFSparkline"],"type":{"library":["dynamic"]}},{"name":"DSFSparkline-static","targets":["DSFSparkline"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFSparkline","name":"DSFSparkline"}],"toolsVersion":"5.3"}},"version":"4.6.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"}],"packageName":"DSFSparkline","products":[{"name":"DSFSparkline","targets":["DSFSparkline"],"type":{"library":["automatic"]}},{"name":"DSFSparkline-shared","targets":["DSFSparkline"],"type":{"library":["dynamic"]}},{"name":"DSFSparkline-static","targets":["DSFSparkline"],"type":{"library":["static"]}}],"targets":[{"moduleName":"DSFSparkline","name":"DSFSparkline"}],"toolsVersion":"5.3"}},"version":"4.6.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"DSFSparkline","products":[{"name":"DSFSparkline","targets":["DSFSparkline"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DSFSparkline","name":"DSFSparkline"}],"toolsVersion":"5.1"}},"version":"3.7.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"DSFSparkline","products":[{"name":"DSFSparkline","targets":["DSFSparkline"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DSFSparkline","name":"DSFSparkline"}],"toolsVersion":"5.1"}},"summary":"","version":"3.6.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"DSFSparkline","products":[{"name":"DSFSparkline","targets":["DSFSparkline"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DSFSparkline","name":"DSFSparkline"}],"toolsVersion":"5.1"}},"summary":"","version":"3.6.0"}]},{"keywords":["appkit","invalidating","ios","macos","property-wrapper","tvos","uikit"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/theblixguy/Invalidating/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/theblixguy/Invalidating/main/README.md","summary":"Backports the new @Invalidating property wrapper to older platforms","url":"https://github.com/theblixguy/Invalidating","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"macos","version":"10.11"}],"packageName":"Invalidating","products":[{"name":"Invalidating","targets":["Invalidating"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Invalidating","name":"Invalidating"}],"toolsVersion":"5.1"}},"version":"0.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"macos","version":"10.11"}],"packageName":"Invalidating","products":[{"name":"Invalidating","targets":["Invalidating"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Invalidating","name":"Invalidating"}],"toolsVersion":"5.3"}},"version":"0.0.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"10.15"}],"packageName":"Invalidating","products":[{"name":"Invalidating","targets":["Invalidating"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Invalidating","name":"Invalidating"}],"toolsVersion":"5.3"}},"version":"0.0.3"}]},{"keywords":["appkit","cocoapods","extension","nssearchfield","nstextfield","nstokenfield","nstokenfieldcell","objective-c","osx","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/akhilcb/ACBTokenField/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/akhilcb/ACBTokenField/master/README.md","summary":"A swift extension on NSTokenField which makes it highly customizable and removes a lot of boilerplate code from implementation","url":"https://github.com/akhilcb/ACBTokenField","versions":[{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"ACBTokenField","products":[{"name":"ACBTokenField","targets":["ACBTokenField"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ACBTokenField","name":"ACBTokenField"}],"toolsVersion":"4.0"}},"summary":"","version":"2.3.0"}]},{"keywords":["appkit","macos","nswindow","swift","swiftui"],"license":{"name":"BSD-3-Clause","url":"https://raw.githubusercontent.com/ChimeHQ/WindowTreatment/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ChimeHQ/WindowTreatment/main/README.md","summary":"Tools for happier work with NSWindow","url":"https://github.com/ChimeHQ/WindowTreatment","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"WindowTreatment","products":[{"name":"WindowTreatment","targets":["WindowTreatment"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WindowTreatment","name":"WindowTreatment"}],"toolsVersion":"5.0"}},"version":"2.2.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"WindowTreatment","products":[{"name":"WindowTreatment","targets":["WindowTreatment"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WindowTreatment","name":"WindowTreatment"}],"toolsVersion":"5.0"}},"version":"2.1.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"WindowTreatment","products":[{"name":"WindowTreatment","targets":["WindowTreatment"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WindowTreatment","name":"WindowTreatment"}],"toolsVersion":"5.0"}},"version":"2.1.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"WindowTreatment","products":[{"name":"WindowTreatment","targets":["WindowTreatment"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WindowTreatment","name":"WindowTreatment"}],"toolsVersion":"5.0"}},"version":"1.2.5"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"WindowTreatment","products":[{"name":"WindowTreatment","targets":["WindowTreatment"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WindowTreatment","name":"WindowTreatment"}],"toolsVersion":"5.0"}},"version":"1.2.4"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"WindowTreatment","products":[{"name":"WindowTreatment","targets":["WindowTreatment"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WindowTreatment","name":"WindowTreatment"}],"toolsVersion":"5.0"}},"version":"1.2.3"}]},{"keywords":["appkit","dsl","ios","macos","swift","tvos","uikit"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/faberNovel/CompositionalLayoutDSL/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/faberNovel/CompositionalLayoutDSL/main/README.md","summary":"CompositionalLayoutDSL, library to simplify the creation of UICollectionViewCompositionalLayout. It wraps the UIKit API and makes the code shorter and easier to read.","url":"https://github.com/faberNovel/CompositionalLayoutDSL","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"10.15"}],"packageName":"CompositionalLayoutDSL","products":[{"name":"CompositionalLayoutDSL","targets":["CompositionalLayoutDSL"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CompositionalLayoutDSL","name":"CompositionalLayoutDSL"}],"toolsVersion":"5.2"}},"version":"v0.1.0"}]},{"keywords":["appkit","commonmark","markdown","swift","swiftui","uikit"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/andyfinnell/NativeMarkKit/master/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/andyfinnell/NativeMarkKit/master/README.md","summary":"NativeMark is a flavor of Markdown designed to be rendered by native apps.","url":"https://github.com/andyfinnell/NativeMarkKit","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"NativeMarkKit","products":[{"name":"NativeMarkKit","targets":["NativeMarkKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NativeMarkKit","name":"NativeMarkKit"}],"toolsVersion":"5.1"}},"version":"2.1.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"NativeMarkKit","products":[{"name":"NativeMarkKit","targets":["NativeMarkKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NativeMarkKit","name":"NativeMarkKit"}],"toolsVersion":"5.1"}},"version":"2.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"NativeMarkKit","products":[{"name":"NativeMarkKit","targets":["NativeMarkKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NativeMarkKit","name":"NativeMarkKit"}],"toolsVersion":"5.1"}},"version":"2.0.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"NativeMarkKit","products":[{"name":"NativeMarkKit","targets":["NativeMarkKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NativeMarkKit","name":"NativeMarkKit"}],"toolsVersion":"5.1"}},"version":"1.1.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"NativeMarkKit","products":[{"name":"NativeMarkKit","targets":["NativeMarkKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NativeMarkKit","name":"NativeMarkKit"}],"toolsVersion":"5.1"}},"version":"1.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"NativeMarkKit","products":[{"name":"NativeMarkKit","targets":["NativeMarkKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NativeMarkKit","name":"NativeMarkKit"}],"toolsVersion":"5.1"}},"version":"1.0.1"}]},{"keywords":["appkit","cocoa","dsl","functionbuilder","nsmenu","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/j-f1/MenuBuilder/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/j-f1/MenuBuilder/main/README.md","summary":"Swift Function Builder for creating NSMenuItems","url":"https://github.com/j-f1/MenuBuilder","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"}],"packageName":"MenuBuilder","products":[{"name":"MenuBuilder","targets":["MenuBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MenuBuilder","name":"MenuBuilder"}],"toolsVersion":"5.3"}},"summary":"","version":"v2.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"}],"packageName":"MenuBuilder","products":[{"name":"MenuBuilder","targets":["MenuBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MenuBuilder","name":"MenuBuilder"}],"toolsVersion":"5.3"}},"summary":"","version":"v1.3.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"}],"packageName":"MenuBuilder","products":[{"name":"MenuBuilder","targets":["MenuBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MenuBuilder","name":"MenuBuilder"}],"toolsVersion":"5.3"}},"summary":"","version":"v1.2.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"}],"packageName":"MenuBuilder","products":[{"name":"MenuBuilder","targets":["MenuBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MenuBuilder","name":"MenuBuilder"}],"toolsVersion":"5.3"}},"summary":"","version":"v1.1.0"}]},{"keywords":["appkit","keyboard","nsevent","swift"],"license":{"name":"BSD-3-Clause","url":"https://raw.githubusercontent.com/ChimeHQ/KeyCodes/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ChimeHQ/KeyCodes/main/README.md","summary":"AppKit Carbon key codes to UIKey-compatible enums","url":"https://github.com/ChimeHQ/KeyCodes","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"KeyCodes","products":[{"name":"KeyCodes","targets":["KeyCodes"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeyCodes","name":"KeyCodes"}],"toolsVersion":"5.0"}},"version":"0.1.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"KeyCodes","products":[{"name":"KeyCodes","targets":["KeyCodes"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeyCodes","name":"KeyCodes"}],"toolsVersion":"5.0"}},"version":"0.1.0"}]},{"keywords":["appkit","macos","nsdocument","swift"],"license":{"name":"BSD-3-Clause","url":"https://raw.githubusercontent.com/ChimeHQ/ContainedDocument/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ChimeHQ/ContainedDocument/main/README.md","summary":"Nested NSDocuments","url":"https://github.com/ChimeHQ/ContainedDocument","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"ContainedDocument","products":[{"name":"ContainedDocument","targets":["ContainedDocument"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ContainedDocument","name":"ContainedDocument"}],"toolsVersion":"5.0"}},"version":"0.2.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"ContainedDocument","products":[{"name":"ContainedDocument","targets":["ContainedDocument"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ContainedDocument","name":"ContainedDocument"}],"toolsVersion":"5.0"}},"version":"0.2.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"ContainedDocument","products":[{"name":"ContainedDocument","targets":["ContainedDocument"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ContainedDocument","name":"ContainedDocument"}],"toolsVersion":"5.0"}},"version":"0.1.0"}]},{"keywords":["appkit","macos","nssearchfield","swift","swiftui","user-interface"],"readmeURL":"https://raw.githubusercontent.com/dagronf/DSFSearchField/main/README.md","summary":"A simple NSSearchField with a localizable, managed recent searches menu.","url":"https://github.com/dagronf/DSFSearchField","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"DSFSearchField","products":[{"name":"DSFSearchField","targets":["DSFSearchField"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DSFSearchField","name":"DSFSearchField"}],"toolsVersion":"5.4"}},"version":"2.0.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"DSFSearchField","products":[{"name":"DSFSearchField","targets":["DSFSearchField"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DSFSearchField","name":"DSFSearchField"}],"toolsVersion":"5.1"}},"summary":"","version":"1.1.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"DSFSearchField","products":[{"name":"DSFSearchField","targets":["DSFSearchField"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DSFSearchField","name":"DSFSearchField"}],"toolsVersion":"5.1"}},"summary":"","version":"1.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"DSFSearchField","products":[{"name":"DSFSearchField","targets":["DSFSearchField"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DSFSearchField","name":"DSFSearchField"}],"toolsVersion":"5.1"}},"summary":"","version":"1.0.1"}]},{"keywords":["ios","propertywrapper","swift","swift-package","swiftui","validated","validation"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/SvenTiigi/ValidatedPropertyKit/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SvenTiigi/ValidatedPropertyKit/main/README.md","summary":"Easily validate your Properties with Property Wrappers 👮","url":"https://github.com/SvenTiigi/ValidatedPropertyKit","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"macos","version":"10.15"}],"packageName":"ValidatedPropertyKit","products":[{"name":"ValidatedPropertyKit","targets":["ValidatedPropertyKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ValidatedPropertyKit","name":"ValidatedPropertyKit"}],"toolsVersion":"5.3"}},"version":"0.0.7"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"macos","version":"10.15"}],"packageName":"ValidatedPropertyKit","products":[{"name":"ValidatedPropertyKit","targets":["ValidatedPropertyKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ValidatedPropertyKit","name":"ValidatedPropertyKit"}],"toolsVersion":"5.3"}},"version":"0.0.6"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"tvos","version":"14.0"},{"name":"watchos","version":"7.0"},{"name":"macos","version":"11.0"}],"packageName":"ValidatedPropertyKit","products":[{"name":"ValidatedPropertyKit","targets":["ValidatedPropertyKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ValidatedPropertyKit","name":"ValidatedPropertyKit"}],"toolsVersion":"5.3"}},"summary":"0.0.5 (fastlane)","version":"0.0.5"}]},{"keywords":["codable","deserialization","handyjson","json","mapping","propertywrapper","serialization","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/winddpan/CodableWrapper/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/winddpan/CodableWrapper/master/README.md","summary":"@Codec(\"encoder\", \"decoder\") var cool: Bool = true","url":"https://github.com/winddpan/CodableWrapper","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"CodableWrapper","products":[{"name":"CodableWrapper","targets":["CodableWrapper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CodableWrapper","name":"CodableWrapper"}],"toolsVersion":"5.2"}},"summary":"","version":"0.3.2"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"CodableWrapper","products":[{"name":"CodableWrapper","targets":["CodableWrapper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CodableWrapper","name":"CodableWrapper"}],"toolsVersion":"5.2"}},"summary":"","version":"0.3.1"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"CodableWrapper","products":[{"name":"CodableWrapper","targets":["CodableWrapper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CodableWrapper","name":"CodableWrapper"}],"toolsVersion":"5.2"}},"summary":"","version":"0.3.0"}]},{"keywords":[],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/apple/swift-syntax/main/LICENSE.txt"},"readmeURL":"https://raw.githubusercontent.com/apple/swift-syntax/main/README.md","summary":"A set of Swift libraries for parsing, inspecting, generating, and transforming Swift source code.","url":"https://github.com/apple/swift-syntax","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"maccatalyst","version":"13.0"}],"packageName":"SwiftSyntax","products":[{"name":"IDEUtils","targets":["IDEUtils"],"type":{"library":["static"]}},{"name":"SwiftDiagnostics","targets":["SwiftDiagnostics"],"type":{"library":["static"]}},{"name":"SwiftOperators","targets":["SwiftOperators"],"type":{"library":["static"]}},{"name":"SwiftParser","targets":["SwiftParser"],"type":{"library":["static"]}},{"name":"SwiftParserDiagnostics","targets":["SwiftParserDiagnostics"],"type":{"library":["static"]}},{"name":"SwiftRefactor","targets":["SwiftRefactor"],"type":{"library":["static"]}},{"name":"SwiftSyntax","targets":["SwiftSyntax"],"type":{"library":["static"]}},{"name":"SwiftSyntaxBuilder","targets":["SwiftSyntaxBuilder"],"type":{"library":["static"]}},{"name":"SwiftSyntaxParser","targets":["SwiftSyntaxParser"],"type":{"library":["static"]}},{"name":"_SwiftSyntaxMacros","targets":["_SwiftSyntaxMacros"],"type":{"library":["static"]}},{"name":"lit-test-helper","targets":["lit-test-helper"],"type":{"executable":null}},{"name":"swift-parser-cli","targets":["swift-parser-cli"],"type":{"executable":null}}],"targets":[{"moduleName":"IDEUtils","name":"IDEUtils"},{"moduleName":"SwiftDiagnostics","name":"SwiftDiagnostics"},{"moduleName":"SwiftOperators","name":"SwiftOperators"},{"moduleName":"SwiftParser","name":"SwiftParser"},{"moduleName":"SwiftParserDiagnostics","name":"SwiftParserDiagnostics"},{"moduleName":"SwiftRefactor","name":"SwiftRefactor"},{"moduleName":"SwiftSyntax","name":"SwiftSyntax"},{"moduleName":"SwiftSyntaxBuilder","name":"SwiftSyntaxBuilder"},{"moduleName":"SwiftSyntaxParser","name":"SwiftSyntaxParser"},{"moduleName":"_SwiftSyntaxMacros","name":"_SwiftSyntaxMacros"},{"moduleName":"lit_test_helper","name":"lit-test-helper"},{"moduleName":"swift_parser_cli","name":"swift-parser-cli"}],"toolsVersion":"5.5"}},"version":"0.50800.0-SNAPSHOT-2022-12-29-a"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"maccatalyst","version":"13.0"}],"packageName":"SwiftSyntax","products":[{"name":"IDEUtils","targets":["IDEUtils"],"type":{"library":["static"]}},{"name":"SwiftDiagnostics","targets":["SwiftDiagnostics"],"type":{"library":["static"]}},{"name":"SwiftOperators","targets":["SwiftOperators"],"type":{"library":["static"]}},{"name":"SwiftParser","targets":["SwiftParser"],"type":{"library":["static"]}},{"name":"SwiftParserDiagnostics","targets":["SwiftParserDiagnostics"],"type":{"library":["static"]}},{"name":"SwiftRefactor","targets":["SwiftRefactor"],"type":{"library":["static"]}},{"name":"SwiftSyntax","targets":["SwiftSyntax"],"type":{"library":["static"]}},{"name":"SwiftSyntaxBuilder","targets":["SwiftSyntaxBuilder"],"type":{"library":["static"]}},{"name":"SwiftSyntaxParser","targets":["SwiftSyntaxParser"],"type":{"library":["static"]}},{"name":"_SwiftSyntaxMacros","targets":["_SwiftSyntaxMacros"],"type":{"library":["static"]}},{"name":"lit-test-helper","targets":["lit-test-helper"],"type":{"executable":null}},{"name":"swift-parser-cli","targets":["swift-parser-cli"],"type":{"executable":null}}],"targets":[{"moduleName":"IDEUtils","name":"IDEUtils"},{"moduleName":"SwiftDiagnostics","name":"SwiftDiagnostics"},{"moduleName":"SwiftOperators","name":"SwiftOperators"},{"moduleName":"SwiftParser","name":"SwiftParser"},{"moduleName":"SwiftParserDiagnostics","name":"SwiftParserDiagnostics"},{"moduleName":"SwiftRefactor","name":"SwiftRefactor"},{"moduleName":"SwiftSyntax","name":"SwiftSyntax"},{"moduleName":"SwiftSyntaxBuilder","name":"SwiftSyntaxBuilder"},{"moduleName":"SwiftSyntaxParser","name":"SwiftSyntaxParser"},{"moduleName":"_SwiftSyntaxMacros","name":"_SwiftSyntaxMacros"},{"moduleName":"lit_test_helper","name":"lit-test-helper"},{"moduleName":"swift_parser_cli","name":"swift-parser-cli"}],"toolsVersion":"5.5"}},"version":"0.50800.0-SNAPSHOT-2022-12-20-a"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"SwiftSyntax","products":[{"name":"SwiftSyntax","targets":["SwiftSyntax"],"type":{"library":["static"]}},{"name":"SwiftSyntaxBuilder","targets":["SwiftSyntaxBuilder"],"type":{"library":["static"]}},{"name":"SwiftSyntaxParser","targets":["SwiftSyntaxParser"],"type":{"library":["static"]}},{"name":"lit-test-helper","targets":["lit-test-helper"],"type":{"executable":null}}],"targets":[{"moduleName":"SwiftSyntax","name":"SwiftSyntax"},{"moduleName":"SwiftSyntaxBuilder","name":"SwiftSyntaxBuilder"},{"moduleName":"SwiftSyntaxParser","name":"SwiftSyntaxParser"},{"moduleName":"lit_test_helper","name":"lit-test-helper"}],"toolsVersion":"5.3"}},"version":"0.50700.1"}]},{"keywords":["dsl","parser-combinators","parsing","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/nerdsupremacist/Syntax/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/nerdsupremacist/Syntax/develop/README.md","summary":"Write value-driven parsers quickly in Swift with an intuitive SwiftUI-like DSL","url":"https://github.com/nerdsupremacist/Syntax","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"packageName":"Syntax","products":[{"name":"Syntax","targets":["Syntax"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Syntax","name":"Syntax"}],"toolsVersion":"5.4"}},"version":"2.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"Syntax","products":[{"name":"Syntax","targets":["Syntax"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Syntax","name":"Syntax"}],"toolsVersion":"5.3"}},"version":"1.0.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"Syntax","products":[{"name":"Syntax","targets":["Syntax"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Syntax","name":"Syntax"}],"toolsVersion":"5.3"}},"version":"1.0.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"Syntax","products":[{"name":"Syntax","targets":["Syntax"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Syntax","name":"Syntax"}],"toolsVersion":"5.3"}},"version":"1.0.2"}]},{"keywords":["command-line-tool","swift","swift-package","syntax-highlighting"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/JohnSundell/Splash/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/JohnSundell/Splash/master/README.md","summary":"A fast, lightweight and flexible Swift syntax highlighter for blogs, tools and fun!","url":"https://github.com/JohnSundell/Splash","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"packageName":"Splash","products":[{"name":"Splash","targets":["Splash"],"type":{"library":["automatic"]}},{"name":"SplashHTMLGen","targets":["SplashHTMLGen"],"type":{"executable":null}},{"name":"SplashImageGen","targets":["SplashImageGen"],"type":{"executable":null}},{"name":"SplashMarkdown","targets":["SplashMarkdown"],"type":{"executable":null}},{"name":"SplashTokenizer","targets":["SplashTokenizer"],"type":{"executable":null}}],"targets":[{"moduleName":"Splash","name":"Splash"},{"moduleName":"SplashHTMLGen","name":"SplashHTMLGen"},{"moduleName":"SplashImageGen","name":"SplashImageGen"},{"moduleName":"SplashMarkdown","name":"SplashMarkdown"},{"moduleName":"SplashTokenizer","name":"SplashTokenizer"}],"toolsVersion":"5.4"}},"version":"0.16.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"Splash","products":[{"name":"Splash","targets":["Splash"],"type":{"library":["automatic"]}},{"name":"SplashHTMLGen","targets":["SplashHTMLGen"],"type":{"executable":null}},{"name":"SplashImageGen","targets":["SplashImageGen"],"type":{"executable":null}},{"name":"SplashMarkdown","targets":["SplashMarkdown"],"type":{"executable":null}},{"name":"SplashTokenizer","targets":["SplashTokenizer"],"type":{"executable":null}}],"targets":[{"moduleName":"Splash","name":"Splash"},{"moduleName":"SplashHTMLGen","name":"SplashHTMLGen"},{"moduleName":"SplashImageGen","name":"SplashImageGen"},{"moduleName":"SplashMarkdown","name":"SplashMarkdown"},{"moduleName":"SplashTokenizer","name":"SplashTokenizer"}],"toolsVersion":"5.2"}},"version":"0.15.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"Splash","products":[{"name":"Splash","targets":["Splash"],"type":{"library":["automatic"]}},{"name":"SplashHTMLGen","targets":["SplashHTMLGen"],"type":{"executable":null}},{"name":"SplashImageGen","targets":["SplashImageGen"],"type":{"executable":null}},{"name":"SplashMarkdown","targets":["SplashMarkdown"],"type":{"executable":null}},{"name":"SplashTokenizer","targets":["SplashTokenizer"],"type":{"executable":null}}],"targets":[{"moduleName":"Splash","name":"Splash"},{"moduleName":"SplashHTMLGen","name":"SplashHTMLGen"},{"moduleName":"SplashImageGen","name":"SplashImageGen"},{"moduleName":"SplashMarkdown","name":"SplashMarkdown"},{"moduleName":"SplashTokenizer","name":"SplashTokenizer"}],"toolsVersion":"5.2"}},"version":"0.14.0"}]},{"url":"https://github.com/terhechte/SourceKittenDaemon","versions":[{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"SourceKittenDaemon","products":[{"name":"sourcekittend","targets":["sourcekittend"],"type":{"executable":null}}],"targets":[{"moduleName":"sourcekittend","name":"sourcekittend"}],"toolsVersion":"4.2"}},"version":"0.1.9"}]},{"keywords":["circle","circular","clock","ios","progress","progress-bar","progress-circle","slider","slider-range","swift","timer"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/HamzaGhazouani/HGCircularSlider/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/HamzaGhazouani/HGCircularSlider/master/README.md","summary":"A custom reusable circular / progress slider control for iOS application.","url":"https://github.com/HamzaGhazouani/HGCircularSlider","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"HGCircularSlider","products":[{"name":"HGCircularSlider","targets":["HGCircularSlider"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"HGCircularSlider","name":"HGCircularSlider"}],"toolsVersion":"5.0"}},"version":"2.2.1"}]},{"keywords":["carousel","image","image-scroll","ios","scroll","swift","swift5","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/JWAutumn/ACarousel/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/JWAutumn/ACarousel/main/README.md","summary":"A carousel view for SwiftUI | SwiftUI 旋转木马效果","url":"https://github.com/JWAutumn/ACarousel","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"11.0"}],"packageName":"ACarousel","products":[{"name":"ACarousel","targets":["ACarousel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ACarousel","name":"ACarousel"}],"toolsVersion":"5.1"}},"version":"0.2.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"11.0"}],"packageName":"ACarousel","products":[{"name":"ACarousel","targets":["ACarousel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ACarousel","name":"ACarousel"}],"toolsVersion":"5.1"}},"version":"0.1.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"11.0"}],"packageName":"ACarousel","products":[{"name":"ACarousel","targets":["ACarousel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ACarousel","name":"ACarousel"}],"toolsVersion":"5.1"}},"version":"0.1.2"}]},{"keywords":["calendar","ios","jtapplecalendar","swift","weekview","year-calendar","year-view"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/patchthecode/JTAppleCalendar/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/patchthecode/JTAppleCalendar/master/README.md","summary":"The Unofficial Apple iOS Swift Calendar View. Swift calendar Library. iOS calendar Control. 100% Customizable","url":"https://github.com/patchthecode/JTAppleCalendar","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"JTAppleCalendar","products":[{"name":"JTAppleCalendar","targets":["JTAppleCalendar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JTAppleCalendar","name":"JTAppleCalendar"}],"toolsVersion":"5.1"}},"summary":"","version":"8.0.4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"JTAppleCalendar","products":[{"name":"JTAppleCalendar","targets":["JTAppleCalendar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JTAppleCalendar","name":"JTAppleCalendar"}],"toolsVersion":"5.1"}},"version":"8.0.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"JTAppleCalendar","products":[{"name":"JTAppleCalendar","targets":["JTAppleCalendar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JTAppleCalendar","name":"JTAppleCalendar"}],"toolsVersion":"5.1"}},"version":"8.0.2"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"JTAppleCalendar","products":[{"name":"JTAppleCalendar","targets":["JTAppleCalendar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JTAppleCalendar","name":"JTAppleCalendar"}],"toolsVersion":"4.0"}},"version":"7.1.8"}]},{"keywords":["card","configuration","ios","onboarding","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/alexisakers/BulletinBoard/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/alexisakers/BulletinBoard/develop/README.md","summary":"General-purpose contextual cards for iOS","url":"https://github.com/alexisakers/BulletinBoard","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"BLTNBoard","products":[{"name":"BLTNBoard","targets":["BLTNBoard"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BLTNBoard","name":"BLTNBoard"}],"toolsVersion":"5.0"}},"summary":"","version":"5.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"BLTNBoard","products":[{"name":"BLTNBoard","targets":["BLTNBoard"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BLTNBoard","name":"BLTNBoard"}],"toolsVersion":"5.0"}},"summary":"","version":"5.0.0-rc.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"BLTNBoard","products":[{"name":"BLTNBoard","targets":["BLTNBoard"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BLTNBoard","name":"BLTNBoard"}],"toolsVersion":"5.0"}},"summary":"","version":"5.0.0-rc.1"}]},{"keywords":["crop","cropping","ios","swift","thumbnail","trim","trimmer","video"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/HHK1/PryntTrimmerView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/HHK1/PryntTrimmerView/master/README.md","summary":"A set of tools to trim, crop and select frames inside a video","url":"https://github.com/HHK1/PryntTrimmerView","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"PryntTrimmerView","products":[{"name":"PryntTrimmerView","targets":["PryntTrimmerView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PryntTrimmerView","name":"PryntTrimmerView"}],"toolsVersion":"5.0"}},"version":"4.0.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"PryntTrimmerView","products":[{"name":"PryntTrimmerView","targets":["PryntTrimmerView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PryntTrimmerView","name":"PryntTrimmerView"}],"toolsVersion":"5.0"}},"version":"4.0.1"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ElaWorkshop/TagListView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ElaWorkshop/TagListView/master/README.md","summary":"Simple and highly customizable iOS tag list view, in Swift.","url":"https://github.com/ElaWorkshop/TagListView","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"TagListView","products":[{"name":"TagListView","targets":["TagListView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TagListView","name":"TagListView"}],"toolsVersion":"5.1"}},"version":"1.4.1"}]},{"keywords":["in-app-purchases","ios","ios15","ios16","macos","macos12","macos13","storekit","swift","swift5","swiftui","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/russell-archer/StoreHelper/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/russell-archer/StoreHelper/main/README.md","summary":"Implementing In-App Purchases with StoreKit2 in Xcode 14 using SwiftUI, Swift 5.7, iOS 16 and macOS 13.","url":"https://github.com/russell-archer/StoreHelper","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"12.0"}],"packageName":"StoreHelper","products":[{"name":"StoreHelper","targets":["StoreHelper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StoreHelper","name":"StoreHelper"}],"toolsVersion":"5.5"}},"version":"v2.1.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"12.0"}],"packageName":"StoreHelper","products":[{"name":"StoreHelper","targets":["StoreHelper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StoreHelper","name":"StoreHelper"}],"toolsVersion":"5.5"}},"version":"v2.0.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"},{"name":"ios","version":"15.0"}],"packageName":"StoreHelper","products":[{"name":"StoreHelper","targets":["StoreHelper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StoreHelper","name":"StoreHelper"}],"toolsVersion":"5.5"}},"summary":"Release v1.0.0","version":"v1.0.0"}]},{"keywords":["cocoapods","gradient","ios","swift","uiprogressview"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/fxm90/GradientProgressBar/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/fxm90/GradientProgressBar/main/readme.md","summary":"📊 A customizable gradient progress bar (UIProgressView).","url":"https://github.com/fxm90/GradientProgressBar","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"GradientProgressBar","products":[{"name":"GradientProgressBar","targets":["GradientProgressBar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"GradientProgressBar","name":"GradientProgressBar"}],"toolsVersion":"5.5"}},"summary":"","version":"3.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"GradientProgressBar","products":[{"name":"GradientProgressBar","targets":["GradientProgressBar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"GradientProgressBar","name":"GradientProgressBar"}],"toolsVersion":"5.0"}},"summary":"","version":"2.0.3"}]},{"keywords":["animatedtabbar","customtabbar","fluidtabbar","swiftui","swiftui-animations","tabbar"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/SimformSolutionsPvtLtd/SSCustomTabbar/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SimformSolutionsPvtLtd/SSCustomTabbar/master/README.md","summary":"Simple Animated tabbar with native control","url":"https://github.com/SimformSolutionsPvtLtd/SSCustomTabbar","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"SSCustomTabbar","products":[{"name":"SSCustomTabbar","targets":["SSCustomTabbar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SSCustomTabbar","name":"SSCustomTabbar"}],"toolsVersion":"5.0"}},"version":"2.0.7"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"SSCustomTabbar","products":[{"name":"SSCustomTabbar","targets":["SSCustomTabbar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SSCustomTabbar","name":"SSCustomTabbar"}],"toolsVersion":"5.0"}},"version":"2.0.6"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"SSCustomTabbar","products":[{"name":"SSCustomTabbar","targets":["SSCustomTabbar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SSCustomTabbar","name":"SSCustomTabbar"}],"toolsVersion":"5.0"}},"version":"2.0.5"}]},{"keywords":["combine-framework","testing"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/pointfreeco/combine-schedulers/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/pointfreeco/combine-schedulers/main/README.md","summary":"⏰ A few schedulers that make working with Combine more testable and more versatile.","url":"https://github.com/pointfreeco/combine-schedulers","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"combine-schedulers","products":[{"name":"CombineSchedulers","targets":["CombineSchedulers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineSchedulers","name":"CombineSchedulers"}],"toolsVersion":"5.5"}},"version":"0.9.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"combine-schedulers","products":[{"name":"CombineSchedulers","targets":["CombineSchedulers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineSchedulers","name":"CombineSchedulers"}],"toolsVersion":"5.5"}},"version":"0.9.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"combine-schedulers","products":[{"name":"CombineSchedulers","targets":["CombineSchedulers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineSchedulers","name":"CombineSchedulers"}],"toolsVersion":"5.5"}},"version":"0.8.0"}]},{"keywords":["animation","card","drag","ios","sheet","swift","swiftpackage","swiftpackagemanager","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/weitieda/bottom-sheet/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/weitieda/bottom-sheet/master/README.md","summary":"⬆️ A SwiftUI view component sliding in from bottom","url":"https://github.com/weitieda/bottom-sheet","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"BottomSheet","products":[{"name":"BottomSheet","targets":["BottomSheet"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BottomSheet","name":"BottomSheet"}],"toolsVersion":"5.1"}},"version":"1.0.12"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"BottomSheet","products":[{"name":"BottomSheet","targets":["BottomSheet"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BottomSheet","name":"BottomSheet"}],"toolsVersion":"5.1"}},"version":"1.0.11"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"BottomSheet","products":[{"name":"BottomSheet","targets":["BottomSheet"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BottomSheet","name":"BottomSheet"}],"toolsVersion":"5.1"}},"version":"1.0.10"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ergunemr/BottomPopup/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ergunemr/BottomPopup/master/README.md","summary":"BottomPopup provides a popup-like presentation style to any view controller","url":"https://github.com/ergunemr/BottomPopup","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"}],"packageName":"BottomPopup","products":[{"name":"BottomPopup","targets":["BottomPopup"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BottomPopup","name":"BottomPopup"}],"toolsVersion":"5.1"}},"version":"0.7.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"}],"packageName":"BottomPopup","products":[{"name":"BottomPopup","targets":["BottomPopup"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BottomPopup","name":"BottomPopup"}],"toolsVersion":"5.1"}},"version":"0.7.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"}],"packageName":"BottomPopup","products":[{"name":"BottomPopup","targets":["BottomPopup"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BottomPopup","name":"BottomPopup"}],"toolsVersion":"5.1"}},"version":"0.6.0"}]},{"keywords":["animation","carthage","cocoapods","gif","swift"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/kaishin/Gifu/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/kaishin/Gifu/master/README.md","summary":"High-performance animated GIF support for iOS in Swift","url":"https://github.com/kaishin/Gifu","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"11.0"}],"packageName":"Gifu","products":[{"name":"Gifu","targets":["Gifu"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Gifu","name":"Gifu"}],"toolsVersion":"5.0"}},"summary":"","version":"v3.3.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"11.0"}],"packageName":"Gifu","products":[{"name":"Gifu","targets":["Gifu"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Gifu","name":"Gifu"}],"toolsVersion":"5.0"}},"summary":"","version":"v3.3.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"11.0"}],"packageName":"Gifu","products":[{"name":"Gifu","targets":["Gifu"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Gifu","name":"Gifu"}],"toolsVersion":"5.0"}},"version":"v3.2.2"}]},{"keywords":["accessibility","alert","carthage","cocoapods","ios","swift","swift-package","swiftui","ui-framework","uikit","voiceover","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/omaralbeik/Drops/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/omaralbeik/Drops/main/README.md","summary":"A µFramework for showing alerts like the one used when copying from pasteboard or connecting Apple pencil","url":"https://github.com/omaralbeik/Drops","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Drops","products":[{"name":"Drops","targets":["Drops"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Drops","name":"Drops"}],"toolsVersion":"5.3"}},"version":"1.6.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Drops","products":[{"name":"Drops","targets":["Drops"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Drops","name":"Drops"}],"toolsVersion":"5.3"}},"version":"1.6.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Drops","products":[{"name":"Drops","targets":["Drops"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Drops","name":"Drops"}],"toolsVersion":"5.3"}},"version":"1.5.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"Drops","products":[{"name":"Drops","targets":["Drops"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Drops","name":"Drops"}],"toolsVersion":"5.3"}},"version":"0.6.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"Drops","products":[{"name":"Drops","targets":["Drops"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Drops","name":"Drops"}],"toolsVersion":"5.3"}},"version":"0.5.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"Drops","products":[{"name":"Drops","targets":["Drops"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Drops","name":"Drops"}],"toolsVersion":"5.3"}},"version":"0.4.0"}]},{"keywords":["conditional-conformance","swift","tagged-types","type-safety"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/pointfreeco/swift-tagged/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/pointfreeco/swift-tagged/main/README.md","summary":"🏷 A wrapper type for safer, expressive code.","url":"https://github.com/pointfreeco/swift-tagged","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"swift-tagged","products":[{"name":"Tagged","targets":["Tagged"],"type":{"library":["automatic"]}},{"name":"TaggedMoney","targets":["TaggedMoney"],"type":{"library":["automatic"]}},{"name":"TaggedTime","targets":["TaggedTime"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tagged","name":"Tagged"},{"moduleName":"TaggedMoney","name":"TaggedMoney"},{"moduleName":"TaggedTime","name":"TaggedTime"}],"toolsVersion":"5.1"}},"version":"0.9.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"swift-tagged","products":[{"name":"Tagged","targets":["Tagged"],"type":{"library":["automatic"]}},{"name":"TaggedMoney","targets":["TaggedMoney"],"type":{"library":["automatic"]}},{"name":"TaggedTime","targets":["TaggedTime"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tagged","name":"Tagged"},{"moduleName":"TaggedMoney","name":"TaggedMoney"},{"moduleName":"TaggedTime","name":"TaggedTime"}],"toolsVersion":"5.1"}},"version":"0.8.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"swift-tagged","products":[{"name":"Tagged","targets":["Tagged"],"type":{"library":["automatic"]}},{"name":"TaggedMoney","targets":["TaggedMoney"],"type":{"library":["automatic"]}},{"name":"TaggedTime","targets":["TaggedTime"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tagged","name":"Tagged"},{"moduleName":"TaggedMoney","name":"TaggedMoney"},{"moduleName":"TaggedTime","name":"TaggedTime"}],"toolsVersion":"5.1"}},"version":"0.7.0"}]},{"keywords":["coordinator","coordinator-pattern","ios","ios-swift","mvvm","mvvm-architecture","mvvm-c","mvvm-coordinator","rxswift","rxswift-extensions","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/QuickBirdEng/XCoordinator/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/QuickBirdEng/XCoordinator/master/README.md","summary":"🎌 Powerful navigation library for iOS based on the coordinator pattern","url":"https://github.com/QuickBirdEng/XCoordinator","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"XCoordinator","products":[{"name":"XCoordinator","targets":["XCoordinator"],"type":{"library":["automatic"]}},{"name":"XCoordinatorCombine","targets":["XCoordinatorCombine"],"type":{"library":["automatic"]}},{"name":"XCoordinatorRx","targets":["XCoordinatorRx"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"XCoordinator","name":"XCoordinator"},{"moduleName":"XCoordinatorCombine","name":"XCoordinatorCombine"},{"moduleName":"XCoordinatorRx","name":"XCoordinatorRx"}],"toolsVersion":"5.1"}},"version":"2.2.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"XCoordinator","products":[{"name":"XCoordinator","targets":["XCoordinator"],"type":{"library":["automatic"]}},{"name":"XCoordinatorCombine","targets":["XCoordinatorCombine"],"type":{"library":["automatic"]}},{"name":"XCoordinatorRx","targets":["XCoordinatorRx"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"XCoordinator","name":"XCoordinator"},{"moduleName":"XCoordinatorCombine","name":"XCoordinatorCombine"},{"moduleName":"XCoordinatorRx","name":"XCoordinatorRx"}],"toolsVersion":"5.1"}},"version":"2.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"XCoordinator","products":[{"name":"XCoordinator","targets":["XCoordinator"],"type":{"library":["automatic"]}},{"name":"XCoordinatorCombine","targets":["XCoordinatorCombine"],"type":{"library":["automatic"]}},{"name":"XCoordinatorRx","targets":["XCoordinatorRx"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"XCoordinator","name":"XCoordinator"},{"moduleName":"XCoordinatorCombine","name":"XCoordinatorCombine"},{"moduleName":"XCoordinatorRx","name":"XCoordinatorRx"}],"toolsVersion":"5.1"}},"version":"2.0.7"}]},{"keywords":["filter","gpuimage","image","image-editor","image-processor","ios","jpeg","metal","png","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Silence-GitHub/BBMetalImage/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Silence-GitHub/BBMetalImage/master/README.md","summary":"A high performance Swift library for GPU-accelerated image/video processing based on Metal.","url":"https://github.com/Silence-GitHub/BBMetalImage","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"BBMetalImage","products":[{"name":"BBMetalImage","targets":["BBMetalImage"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BBMetalImage","name":"BBMetalImage"}],"toolsVersion":"5.1"}},"summary":"Add BBMetalMultipleCamera","version":"1.1.12"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"BBMetalImage","products":[{"name":"BBMetalImage","targets":["BBMetalImage"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BBMetalImage","name":"BBMetalImage"}],"toolsVersion":"5.1"}},"summary":"BBMetalTransformFilter adds anchor point","version":"1.1.11"}]},{"keywords":["actionsheet","carthage","cocoapods","context-menu","ios","popover","spm","swift","uialertcontroller"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/danielsaidi/Sheeeeeeeeet/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/danielsaidi/Sheeeeeeeeet/master/README.md","summary":"Sheeeeeeeeet is a Swift library for creating menus, custom action sheets, context menus etc.","url":"https://github.com/danielsaidi/Sheeeeeeeeet","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Sheeeeeeeeet","products":[{"name":"Sheeeeeeeeet","targets":["Sheeeeeeeeet"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sheeeeeeeeet","name":"Sheeeeeeeeet"}],"toolsVersion":"5.2"}},"summary":"3.2.2 (fastlane)","version":"3.2.2"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Sheeeeeeeeet","products":[{"name":"Sheeeeeeeeet","targets":["Sheeeeeeeeet"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sheeeeeeeeet","name":"Sheeeeeeeeet"}],"toolsVersion":"5.2"}},"summary":"3.2.1 (fastlane)","version":"3.2.1"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Sheeeeeeeeet","products":[{"name":"Sheeeeeeeeet","targets":["Sheeeeeeeeet"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sheeeeeeeeet","name":"Sheeeeeeeeet"}],"toolsVersion":"5.2"}},"summary":"3.2.0 (fastlane)","version":"3.2.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Sheeeeeeeeet","products":[{"name":"Sheeeeeeeeet","targets":["Sheeeeeeeeet"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sheeeeeeeeet","name":"Sheeeeeeeeet"}],"toolsVersion":"5.1"}},"summary":"2.1.4 (fastlane)","version":"2.1.4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Sheeeeeeeeet","products":[{"name":"Sheeeeeeeeet","targets":["Sheeeeeeeeet"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sheeeeeeeeet","name":"Sheeeeeeeeet"}],"toolsVersion":"5.1"}},"summary":"2.1.3 (fastlane)","version":"2.1.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Sheeeeeeeeet","products":[{"name":"Sheeeeeeeeet","targets":["Sheeeeeeeeet"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sheeeeeeeeet","name":"Sheeeeeeeeet"}],"toolsVersion":"5.1"}},"summary":"2.1.2 (fastlane)","version":"2.1.2"}]},{"keywords":["bounce","bounces","cocoapods","hierarchy","image","instagram","instazoom","swift","swift4","uiimageview","uiscrollview","zoom","zooming","zoomy"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/lvnkmn/Zoomy/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/lvnkmn/Zoomy/develop/README.md","summary":"Adds seamless scrollView and instagram like zooming to UIImageViews in any view hierarchy.","url":"https://github.com/lvnkmn/Zoomy","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Zoomy","products":[{"name":"Zoomy","targets":["Zoomy"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Zoomy","name":"Zoomy"}],"toolsVersion":"5.0"}},"summary":"no message","version":"4.2.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Zoomy","products":[{"name":"Zoomy","targets":["Zoomy"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Zoomy","name":"Zoomy"}],"toolsVersion":"5.0"}},"summary":"no message","version":"4.1.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Zoomy","products":[{"name":"Zoomy","targets":["Zoomy"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Zoomy","name":"Zoomy"}],"toolsVersion":"5.0"}},"summary":"no message","version":"4.0.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Zoomy","products":[{"name":"Zoomy","targets":["Zoomy"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Zoomy","name":"Zoomy"}],"toolsVersion":"5.0"}},"version":"3.1.0"}]},{"keywords":[],"license":{"name":"Zlib","url":"https://raw.githubusercontent.com/swhitty/SwiftDraw/main/LICENSE.txt"},"readmeURL":"https://raw.githubusercontent.com/swhitty/SwiftDraw/main/README.md","summary":"A Swift library and command-line tool for drawing and converting SVG images.","url":"https://github.com/swhitty/SwiftDraw","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.12"}],"packageName":"SwiftDraw","products":[{"name":"SwiftDraw","targets":["SwiftDraw"],"type":{"library":["automatic"]}},{"name":"swiftdraw","targets":["CommandLine"],"type":{"executable":null}}],"targets":[{"moduleName":"CommandLine","name":"CommandLine"},{"moduleName":"SwiftDraw","name":"SwiftDraw"}],"toolsVersion":"5.4"}},"summary":"","version":"0.13.3"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.12"}],"packageName":"SwiftDraw","products":[{"name":"SwiftDraw","targets":["SwiftDraw"],"type":{"library":["automatic"]}},{"name":"swiftdraw","targets":["CommandLine"],"type":{"executable":null}}],"targets":[{"moduleName":"CommandLine","name":"CommandLine"},{"moduleName":"SwiftDraw","name":"SwiftDraw"}],"toolsVersion":"5.4"}},"summary":"","version":"0.13.2"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"}],"packageName":"SwiftDraw","products":[{"name":"SwiftDraw","targets":["SwiftDraw"],"type":{"library":["automatic"]}},{"name":"swiftdraw","targets":["CommandLine"],"type":{"executable":null}}],"targets":[{"moduleName":"CommandLine","name":"CommandLine"},{"moduleName":"SwiftDraw","name":"SwiftDraw"}],"toolsVersion":"5.4"}},"summary":"","version":"0.13.1"}]},{"keywords":["carthage","cocoapods","image","image-viewer","ios","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/JanGorman/Agrume/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/JanGorman/Agrume/master/README.md","summary":"🍋 A lemony fresh iOS image viewer written in Swift.","url":"https://github.com/JanGorman/Agrume","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Agrume","products":[{"name":"Agrume","targets":["Agrume"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Agrume","name":"Agrume"}],"toolsVersion":"5.1"}},"version":"5.8.6"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Agrume","products":[{"name":"Agrume","targets":["Agrume"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Agrume","name":"Agrume"}],"toolsVersion":"5.1"}},"version":"5.8.5"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Agrume","products":[{"name":"Agrume","targets":["Agrume"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Agrume","name":"Agrume"}],"toolsVersion":"5.1"}},"version":"5.8.4"}]},{"keywords":["async","await","concurrency","counting","semaphore"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/groue/Semaphore/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/groue/Semaphore/main/README.md","summary":"A Synchronization Primitive for Swift Concurrency","url":"https://github.com/groue/Semaphore","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Semaphore","products":[{"name":"Semaphore","targets":["Semaphore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Semaphore","name":"Semaphore"}],"toolsVersion":"5.7"}},"version":"0.0.6"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Semaphore","products":[{"name":"Semaphore","targets":["Semaphore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Semaphore","name":"Semaphore"}],"toolsVersion":"5.7"}},"version":"0.0.5"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Semaphore","products":[{"name":"Semaphore","targets":["Semaphore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Semaphore","name":"Semaphore"}],"toolsVersion":"5.7"}},"version":"0.0.4"}]},{"keywords":["async","concurrency","ios","macos","swift"],"license":{"name":"BSD-3-Clause","url":"https://raw.githubusercontent.com/ChimeHQ/ConcurrencyPlus/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ChimeHQ/ConcurrencyPlus/main/README.md","summary":"Utilities for working with Swift Concurrency","url":"https://github.com/ChimeHQ/ConcurrencyPlus","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"ConcurrencyPlus","products":[{"name":"ConcurrencyPlus","targets":["ConcurrencyPlus"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ConcurrencyPlus","name":"ConcurrencyPlus"}],"toolsVersion":"5.5"}},"version":"0.4.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"ConcurrencyPlus","products":[{"name":"ConcurrencyPlus","targets":["ConcurrencyPlus"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ConcurrencyPlus","name":"ConcurrencyPlus"}],"toolsVersion":"5.5"}},"version":"0.4.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"ConcurrencyPlus","products":[{"name":"ConcurrencyPlus","targets":["ConcurrencyPlus"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ConcurrencyPlus","name":"ConcurrencyPlus"}],"toolsVersion":"5.5"}},"version":"0.3.3"}]},{"keywords":["chat","growing","growingtextview","messaging","placeholder","swift","uitextview"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/KennethTsang/GrowingTextView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/KennethTsang/GrowingTextView/master/README.md","summary":"An UITextView in Swift. Support auto growing, placeholder and length limit.","url":"https://github.com/KennethTsang/GrowingTextView","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"GrowingTextView","products":[{"name":"GrowingTextView","targets":["GrowingTextView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"GrowingTextView","name":"GrowingTextView"}],"toolsVersion":"5.1"}},"version":"0.7.2"}]},{"keywords":["ios","macos","swift","swift-package-manager","swiftui","swiftui-grid","tvos","watchos","waterfall-layout"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/paololeonardi/WaterfallGrid/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/paololeonardi/WaterfallGrid/master/README.md","summary":"A waterfall grid layout view for SwiftUI.","url":"https://github.com/paololeonardi/WaterfallGrid","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"WaterfallGrid","products":[{"name":"WaterfallGrid","targets":["WaterfallGrid"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WaterfallGrid","name":"WaterfallGrid"}],"toolsVersion":"5.1"}},"version":"1.0.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"WaterfallGrid","products":[{"name":"WaterfallGrid","targets":["WaterfallGrid"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WaterfallGrid","name":"WaterfallGrid"}],"toolsVersion":"5.1"}},"version":"1.0.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"WaterfallGrid","products":[{"name":"WaterfallGrid","targets":["WaterfallGrid"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WaterfallGrid","name":"WaterfallGrid"}],"toolsVersion":"5.1"}},"version":"0.4.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"WaterfallGrid","products":[{"name":"WaterfallGrid","targets":["WaterfallGrid"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WaterfallGrid","name":"WaterfallGrid"}],"toolsVersion":"5.1"}},"version":"0.3.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"WaterfallGrid","products":[{"name":"WaterfallGrid","targets":["WaterfallGrid"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WaterfallGrid","name":"WaterfallGrid"}],"toolsVersion":"5.1"}},"version":"0.3.1"}]},{"keywords":["cmark","commonmark","github-markdown","markdown","swift","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/gonzalezreal/swift-markdown-ui/main/README.md","summary":"Display and customize Markdown text in SwiftUI","url":"https://github.com/gonzalezreal/swift-markdown-ui","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"},{"name":"ios","version":"15.0"},{"name":"tvos","version":"15.0"},{"name":"watchos","version":"8.0"}],"packageName":"swift-markdown-ui","products":[{"name":"MarkdownUI","targets":["MarkdownUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MarkdownUI","name":"MarkdownUI"}],"toolsVersion":"5.6"}},"version":"2.0.0"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"11.0"},{"name":"ios","version":"14.0"},{"name":"tvos","version":"14.0"}],"packageName":"MarkdownUI","products":[{"name":"MarkdownUI","targets":["MarkdownUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MarkdownUI","name":"MarkdownUI"}],"toolsVersion":"5.4"}},"version":"1.1.1"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"11.0"},{"name":"ios","version":"14.0"},{"name":"tvos","version":"14.0"}],"packageName":"MarkdownUI","products":[{"name":"MarkdownUI","targets":["MarkdownUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MarkdownUI","name":"MarkdownUI"}],"toolsVersion":"5.4"}},"version":"1.1.0"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"11.0"},{"name":"ios","version":"14.0"},{"name":"tvos","version":"14.0"}],"packageName":"MarkdownUI","products":[{"name":"MarkdownUI","targets":["MarkdownUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MarkdownUI","name":"MarkdownUI"}],"toolsVersion":"5.4"}},"version":"1.0.0"}]},{"keywords":["chart","charts","ios","swift","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/AppPear/ChartView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/AppPear/ChartView/master/README.md","summary":"ChartView made in SwiftUI","url":"https://github.com/AppPear/ChartView","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"macos","version":"10.15"}],"packageName":"SwiftUICharts","products":[{"name":"SwiftUICharts","targets":["SwiftUICharts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUICharts","name":"SwiftUICharts"}],"toolsVersion":"5.1"}},"version":"2.0.0-beta.8"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"macos","version":"10.15"}],"packageName":"SwiftUICharts","products":[{"name":"SwiftUICharts","targets":["SwiftUICharts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUICharts","name":"SwiftUICharts"}],"toolsVersion":"5.1"}},"version":"2.0.0-beta.7"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"macos","version":"10.15"}],"packageName":"SwiftUICharts","products":[{"name":"SwiftUICharts","targets":["SwiftUICharts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUICharts","name":"SwiftUICharts"}],"toolsVersion":"5.1"}},"version":"2.0.0-beta.6"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"macos","version":"11.0"}],"packageName":"SwiftUICharts","products":[{"name":"SwiftUICharts","targets":["SwiftUICharts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUICharts","name":"SwiftUICharts"}],"toolsVersion":"5.3"}},"version":"1.5.5"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"macos","version":"10.15"}],"packageName":"SwiftUICharts","products":[{"name":"SwiftUICharts","targets":["SwiftUICharts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUICharts","name":"SwiftUICharts"}],"toolsVersion":"5.1"}},"version":"1.5.4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"macos","version":"10.15"}],"packageName":"SwiftUICharts","products":[{"name":"SwiftUICharts","targets":["SwiftUICharts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUICharts","name":"SwiftUICharts"}],"toolsVersion":"5.1"}},"version":"1.5.3"}]},{"keywords":["codable","property-wrappers","swift-package-manager","swift5-1"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/marksands/BetterCodable/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/marksands/BetterCodable/master/README.md","summary":"Better Codable through Property Wrappers","url":"https://github.com/marksands/BetterCodable","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.12"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"BetterCodable","products":[{"name":"BetterCodable","targets":["BetterCodable"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BetterCodable","name":"BetterCodable"}],"toolsVersion":"5.2"}},"version":"0.4.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.12"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"BetterCodable","products":[{"name":"BetterCodable","targets":["BetterCodable"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BetterCodable","name":"BetterCodable"}],"toolsVersion":"5.2"}},"version":"0.3.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.12"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"BetterCodable","products":[{"name":"BetterCodable","targets":["BetterCodable"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BetterCodable","name":"BetterCodable"}],"toolsVersion":"5.2"}},"version":"0.2.0"}]},{"keywords":["countdown","countdown-timer","countup-timer","ios","stopwatch","swift","timer","timer-label"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/MagicTimerFW/MagicTimer/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/MagicTimerFW/MagicTimer/master/README.md","summary":"MagicTimer is a UIView based timer that displays a countdown or count-up timer.","url":"https://github.com/MagicTimerFW/MagicTimer","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"MagicTimer","products":[{"name":"MagicTimer","targets":["MagicTimer"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MagicTimer","name":"MagicTimer"}],"toolsVersion":"5.5"}},"version":"1.0.4"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"MagicTimer","products":[{"name":"MagicTimer","targets":["MagicTimer"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MagicTimer","name":"MagicTimer"}],"toolsVersion":"5.5"}},"version":"1.0.3"}]},{"keywords":["cache","filters","image","image-processor","ios","kingfisher","macos","swift","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/onevcat/Kingfisher/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/onevcat/Kingfisher/master/README.md","summary":"A lightweight, pure-Swift library for downloading and caching images from the web.","url":"https://github.com/onevcat/Kingfisher","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"macos","version":"10.14"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"Kingfisher","products":[{"name":"Kingfisher","targets":["Kingfisher"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Kingfisher","name":"Kingfisher"}],"toolsVersion":"5.1"}},"summary":"","version":"7.5.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"macos","version":"10.14"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"Kingfisher","products":[{"name":"Kingfisher","targets":["Kingfisher"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Kingfisher","name":"Kingfisher"}],"toolsVersion":"5.1"}},"summary":"","version":"7.4.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"macos","version":"10.14"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"Kingfisher","products":[{"name":"Kingfisher","targets":["Kingfisher"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Kingfisher","name":"Kingfisher"}],"toolsVersion":"5.1"}},"summary":"","version":"7.4.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.12"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Kingfisher","products":[{"name":"Kingfisher","targets":["Kingfisher"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Kingfisher","name":"Kingfisher"}],"toolsVersion":"5.1"}},"summary":"","version":"6.3.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.12"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Kingfisher","products":[{"name":"Kingfisher","targets":["Kingfisher"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Kingfisher","name":"Kingfisher"}],"toolsVersion":"5.1"}},"summary":"","version":"6.3.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.12"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Kingfisher","products":[{"name":"Kingfisher","targets":["Kingfisher"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Kingfisher","name":"Kingfisher"}],"toolsVersion":"5.1"}},"summary":"","version":"6.2.1"}]},{"keywords":["alamofire","carthage","certificate-pinning","cocoapods","httpurlresponse","networking","parameter-encoding","public-key-pinning","request","response","swift","swift-package-manager","urlrequest","urlsession","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Alamofire/Alamofire/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Alamofire/Alamofire/master/README.md","summary":"Elegant HTTP Networking in Swift","url":"https://github.com/Alamofire/Alamofire","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"}],"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"5.7"}},"version":"5.6.4"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"5.7"}},"version":"5.6.3"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"5.6"}},"version":"5.6.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"5.0"}},"version":"4.9.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"5.0"}},"version":"4.9.0"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"4.2"}},"version":"4.8.2"}]},{"keywords":["alamofire","hacktoberfest","networking","reactiveswift","rxswift","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Moya/Moya/master/License.md"},"readmeURL":"https://raw.githubusercontent.com/Moya/Moya/master/Readme.md","summary":"Network abstraction layer written in Swift.","url":"https://github.com/Moya/Moya","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Moya","products":[{"name":"CombineMoya","targets":["CombineMoya"],"type":{"library":["automatic"]}},{"name":"Moya","targets":["Moya"],"type":{"library":["automatic"]}},{"name":"ReactiveMoya","targets":["ReactiveMoya"],"type":{"library":["automatic"]}},{"name":"RxMoya","targets":["RxMoya"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineMoya","name":"CombineMoya"},{"moduleName":"Moya","name":"Moya"},{"moduleName":"ReactiveMoya","name":"ReactiveMoya"},{"moduleName":"RxMoya","name":"RxMoya"}],"toolsVersion":"5.3"}},"version":"15.0.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Moya","products":[{"name":"CombineMoya","targets":["CombineMoya"],"type":{"library":["automatic"]}},{"name":"Moya","targets":["Moya"],"type":{"library":["automatic"]}},{"name":"ReactiveMoya","targets":["ReactiveMoya"],"type":{"library":["automatic"]}},{"name":"RxMoya","targets":["RxMoya"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineMoya","name":"CombineMoya"},{"moduleName":"Moya","name":"Moya"},{"moduleName":"ReactiveMoya","name":"ReactiveMoya"},{"moduleName":"RxMoya","name":"RxMoya"}],"toolsVersion":"5.3"}},"version":"15.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Moya","products":[{"name":"Moya","targets":["Moya"],"type":{"library":["automatic"]}},{"name":"ReactiveMoya","targets":["ReactiveMoya"],"type":{"library":["automatic"]}},{"name":"RxMoya","targets":["RxMoya"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Moya","name":"Moya"},{"moduleName":"ReactiveMoya","name":"ReactiveMoya"},{"moduleName":"RxMoya","name":"RxMoya"}],"toolsVersion":"5.0"}},"version":"14.0.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Moya","products":[{"name":"Moya","targets":["Moya"],"type":{"library":["automatic"]}},{"name":"ReactiveMoya","targets":["ReactiveMoya"],"type":{"library":["automatic"]}},{"name":"RxMoya","targets":["RxMoya"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Moya","name":"Moya"},{"moduleName":"ReactiveMoya","name":"ReactiveMoya"},{"moduleName":"RxMoya","name":"RxMoya"}],"toolsVersion":"5.0"}},"version":"14.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Moya","products":[{"name":"Moya","targets":["Moya"],"type":{"library":["automatic"]}},{"name":"ReactiveMoya","targets":["ReactiveMoya"],"type":{"library":["automatic"]}},{"name":"RxMoya","targets":["RxMoya"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Moya","name":"Moya"},{"moduleName":"ReactiveMoya","name":"ReactiveMoya"},{"moduleName":"RxMoya","name":"RxMoya"}],"toolsVersion":"5.0"}},"summary":"Releasing version 14.0.0-beta.6.","version":"14.0.0-beta.6"}]},{"keywords":[],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/danielgindi/Charts/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/danielgindi/Charts/master/README.md","summary":"Beautiful charts for iOS/tvOS/OSX! The Apple side of the crossplatform MPAndroidChart.","url":"https://github.com/danielgindi/Charts","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"},{"name":"macos","version":"10.12"}],"packageName":"Charts","products":[{"name":"Charts","targets":["Charts"],"type":{"library":["automatic"]}},{"name":"ChartsDynamic","targets":["Charts"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"Charts","name":"Charts"}],"toolsVersion":"5.1"}},"version":"v4.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"},{"name":"macos","version":"10.12"}],"packageName":"Charts","products":[{"name":"Charts","targets":["Charts"],"type":{"library":["automatic"]}},{"name":"ChartsDynamic","targets":["Charts"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"Charts","name":"Charts"}],"toolsVersion":"5.1"}},"version":"v4.0.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"},{"name":"macos","version":"10.12"}],"packageName":"Charts","products":[{"name":"Charts","targets":["Charts"],"type":{"library":["automatic"]}},{"name":"ChartsDynamic","targets":["Charts"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"Charts","name":"Charts"}],"toolsVersion":"5.1"}},"version":"v4.0.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"macos","version":"10.11"}],"packageName":"Charts","products":[{"name":"Charts","targets":["Charts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Charts","name":"Charts"}],"toolsVersion":"5.1"}},"version":"v3.6.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"},{"name":"macos","version":"10.11"}],"packageName":"Charts","products":[{"name":"Charts","targets":["Charts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Charts","name":"Charts"}],"toolsVersion":"5.1"}},"version":"v3.5.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"},{"name":"macos","version":"10.11"}],"packageName":"Charts","products":[{"name":"Charts","targets":["Charts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Charts","name":"Charts"}],"toolsVersion":"5.1"}},"version":"v3.4.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/siteline/SwiftUI-Introspect/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/siteline/SwiftUI-Introspect/master/README.md","summary":"Introspect underlying UIKit components from SwiftUI","url":"https://github.com/siteline/SwiftUI-Introspect","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"Introspect","products":[{"name":"Introspect","targets":["Introspect"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Introspect","name":"Introspect"}],"toolsVersion":"5.1"}},"summary":"introspectSplitViewController, introspectColorWell, introspectButton, introspectTabView, + fixes","version":"0.1.4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"Introspect","products":[{"name":"Introspect","targets":["Introspect"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Introspect","name":"Introspect"}],"toolsVersion":"5.1"}},"version":"0.1.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"Introspect","products":[{"name":"Introspect","targets":["Introspect"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Introspect","name":"Introspect"}],"toolsVersion":"5.1"}},"summary":"SPM: iOS 11, tvOS 11, macOS 10.13","version":"0.1.2"}]},{"keywords":["keychain","security","touch-id"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/README.md","summary":"Simple Swift wrapper for Keychain that works on iOS, watchOS, tvOS and macOS.","url":"https://github.com/kishikawakatsumi/KeychainAccess","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"KeychainAccess","products":[{"name":"KeychainAccess","targets":["KeychainAccess"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeychainAccess","name":"KeychainAccess"}],"toolsVersion":"5.3"}},"version":"v4.2.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"KeychainAccess","products":[{"name":"KeychainAccess","targets":["KeychainAccess"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeychainAccess","name":"KeychainAccess"}],"toolsVersion":"5.3"}},"version":"v4.2.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"KeychainAccess","products":[{"name":"KeychainAccess","targets":["KeychainAccess"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeychainAccess","name":"KeychainAccess"}],"toolsVersion":"5.0"}},"version":"v4.2.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"KeychainAccess","products":[{"name":"KeychainAccess","targets":["KeychainAccess"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeychainAccess","name":"KeychainAccess"}],"toolsVersion":"5.0"}},"version":"v3.2.1"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"KeychainAccess","products":[{"name":"KeychainAccess","targets":["KeychainAccess"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeychainAccess","name":"KeychainAccess"}],"toolsVersion":"4.0"}},"version":"v3.2.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Woollim/CombineKeyboard/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/Woollim/CombineKeyboard/main/README.md","url":"https://github.com/Woollim/CombineKeyboard","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"CombineKeyboard","products":[{"name":"CombineKeyboard","targets":["CombineKeyboard"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineKeyboard","name":"CombineKeyboard"}],"toolsVersion":"5.3"}},"version":"1.0.1"}]},{"keywords":["brave","browser","ios","swift"],"license":{"name":"MPL-2.0","url":"https://raw.githubusercontent.com/brave/brave-ios/development/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/brave/brave-ios/development/README.md","summary":"Brave iOS Browser","url":"https://github.com/brave/brave-ios","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"11.0"}],"packageName":"Brave","products":[{"name":"Brave","targets":["Brave"],"type":{"library":["automatic"]}},{"name":"BraveCore","targets":["BraveCore","MaterialComponents"],"type":{"library":["automatic"]}},{"name":"BraveNews","targets":["BraveNews"],"type":{"library":["automatic"]}},{"name":"BraveShared","targets":["BraveShared"],"type":{"library":["automatic"]}},{"name":"BraveTalk","targets":["BraveTalk"],"type":{"library":["automatic"]}},{"name":"BraveUI","targets":["BraveUI"],"type":{"library":["automatic"]}},{"name":"BraveVPN","targets":["BraveVPN"],"type":{"library":["automatic"]}},{"name":"BraveWallet","targets":["BraveWallet"],"type":{"library":["automatic"]}},{"name":"BraveWidgetsModels","targets":["BraveWidgetsModels"],"type":{"library":["automatic"]}},{"name":"BrowserIntentsModels","targets":["BrowserIntentsModels"],"type":{"library":["automatic"]}},{"name":"Data","targets":["Data"],"type":{"library":["automatic"]}},{"name":"DesignSystem","targets":["DesignSystem"],"type":{"library":["automatic"]}},{"name":"Growth","targets":["Growth"],"type":{"library":["automatic"]}},{"name":"HTTPSE","targets":["HTTPSE"],"type":{"library":["automatic"]}},{"name":"IntentBuilderPlugin","targets":["IntentBuilderPlugin"],"type":{"plugin":null}},{"name":"LoggerPlugin","targets":["LoggerPlugin"],"type":{"plugin":null}},{"name":"Onboarding","targets":["Onboarding"],"type":{"library":["automatic"]}},{"name":"RuntimeWarnings","targets":["RuntimeWarnings"],"type":{"library":["automatic"]}},{"name":"Shared","targets":["Shared"],"type":{"library":["automatic"]}},{"name":"Storage","targets":["Storage","sqlcipher"],"type":{"library":["automatic"]}},{"name":"Strings","targets":["Strings"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Brave","name":"Brave"},{"moduleName":"BraveCore","name":"BraveCore"},{"moduleName":"BraveNews","name":"BraveNews"},{"moduleName":"BraveShared","name":"BraveShared"},{"moduleName":"BraveTalk","name":"BraveTalk"},{"moduleName":"BraveUI","name":"BraveUI"},{"moduleName":"BraveVPN","name":"BraveVPN"},{"moduleName":"BraveWallet","name":"BraveWallet"},{"moduleName":"BraveWidgetsModels","name":"BraveWidgetsModels"},{"moduleName":"BrowserIntentsModels","name":"BrowserIntentsModels"},{"moduleName":"Data","name":"Data"},{"moduleName":"DesignSystem","name":"DesignSystem"},{"moduleName":"Growth","name":"Growth"},{"moduleName":"HTTPSE","name":"HTTPSE"},{"moduleName":"IntentBuilderPlugin","name":"IntentBuilderPlugin"},{"moduleName":"LoggerPlugin","name":"LoggerPlugin"},{"moduleName":"MaterialComponents","name":"MaterialComponents"},{"moduleName":"Onboarding","name":"Onboarding"},{"moduleName":"RuntimeWarnings","name":"RuntimeWarnings"},{"moduleName":"Shared","name":"Shared"},{"moduleName":"Storage","name":"Storage"},{"moduleName":"Strings","name":"Strings"},{"moduleName":"sqlcipher","name":"sqlcipher"}],"toolsVersion":"5.6"}},"version":"v1.46.2"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"11.0"}],"packageName":"Brave","products":[{"name":"Brave","targets":["Brave"],"type":{"library":["automatic"]}},{"name":"BraveCore","targets":["BraveCore","MaterialComponents"],"type":{"library":["automatic"]}},{"name":"BraveNews","targets":["BraveNews"],"type":{"library":["automatic"]}},{"name":"BraveShared","targets":["BraveShared"],"type":{"library":["automatic"]}},{"name":"BraveTalk","targets":["BraveTalk"],"type":{"library":["automatic"]}},{"name":"BraveUI","targets":["BraveUI"],"type":{"library":["automatic"]}},{"name":"BraveVPN","targets":["BraveVPN"],"type":{"library":["automatic"]}},{"name":"BraveWallet","targets":["BraveWallet"],"type":{"library":["automatic"]}},{"name":"BraveWidgetsModels","targets":["BraveWidgetsModels"],"type":{"library":["automatic"]}},{"name":"BrowserIntentsModels","targets":["BrowserIntentsModels"],"type":{"library":["automatic"]}},{"name":"Data","targets":["Data"],"type":{"library":["automatic"]}},{"name":"DesignSystem","targets":["DesignSystem"],"type":{"library":["automatic"]}},{"name":"Growth","targets":["Growth"],"type":{"library":["automatic"]}},{"name":"HTTPSE","targets":["HTTPSE"],"type":{"library":["automatic"]}},{"name":"IntentBuilderPlugin","targets":["IntentBuilderPlugin"],"type":{"plugin":null}},{"name":"LoggerPlugin","targets":["LoggerPlugin"],"type":{"plugin":null}},{"name":"Onboarding","targets":["Onboarding"],"type":{"library":["automatic"]}},{"name":"RuntimeWarnings","targets":["RuntimeWarnings"],"type":{"library":["automatic"]}},{"name":"Shared","targets":["Shared"],"type":{"library":["automatic"]}},{"name":"Storage","targets":["Storage","sqlcipher"],"type":{"library":["automatic"]}},{"name":"Strings","targets":["Strings"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Brave","name":"Brave"},{"moduleName":"BraveCore","name":"BraveCore"},{"moduleName":"BraveNews","name":"BraveNews"},{"moduleName":"BraveShared","name":"BraveShared"},{"moduleName":"BraveTalk","name":"BraveTalk"},{"moduleName":"BraveUI","name":"BraveUI"},{"moduleName":"BraveVPN","name":"BraveVPN"},{"moduleName":"BraveWallet","name":"BraveWallet"},{"moduleName":"BraveWidgetsModels","name":"BraveWidgetsModels"},{"moduleName":"BrowserIntentsModels","name":"BrowserIntentsModels"},{"moduleName":"Data","name":"Data"},{"moduleName":"DesignSystem","name":"DesignSystem"},{"moduleName":"Growth","name":"Growth"},{"moduleName":"HTTPSE","name":"HTTPSE"},{"moduleName":"IntentBuilderPlugin","name":"IntentBuilderPlugin"},{"moduleName":"LoggerPlugin","name":"LoggerPlugin"},{"moduleName":"MaterialComponents","name":"MaterialComponents"},{"moduleName":"Onboarding","name":"Onboarding"},{"moduleName":"RuntimeWarnings","name":"RuntimeWarnings"},{"moduleName":"Shared","name":"Shared"},{"moduleName":"Storage","name":"Storage"},{"moduleName":"Strings","name":"Strings"},{"moduleName":"sqlcipher","name":"sqlcipher"}],"toolsVersion":"5.6"}},"version":"v1.46.1"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"11.0"}],"packageName":"Brave","products":[{"name":"Brave","targets":["Brave"],"type":{"library":["automatic"]}},{"name":"BraveCore","targets":["BraveCore","MaterialComponents"],"type":{"library":["automatic"]}},{"name":"BraveNews","targets":["BraveNews"],"type":{"library":["automatic"]}},{"name":"BraveShared","targets":["BraveShared"],"type":{"library":["automatic"]}},{"name":"BraveTalk","targets":["BraveTalk"],"type":{"library":["automatic"]}},{"name":"BraveUI","targets":["BraveUI"],"type":{"library":["automatic"]}},{"name":"BraveVPN","targets":["BraveVPN"],"type":{"library":["automatic"]}},{"name":"BraveWallet","targets":["BraveWallet"],"type":{"library":["automatic"]}},{"name":"BraveWidgetsModels","targets":["BraveWidgetsModels"],"type":{"library":["automatic"]}},{"name":"BrowserIntentsModels","targets":["BrowserIntentsModels"],"type":{"library":["automatic"]}},{"name":"Data","targets":["Data"],"type":{"library":["automatic"]}},{"name":"DesignSystem","targets":["DesignSystem"],"type":{"library":["automatic"]}},{"name":"HTTPSE","targets":["HTTPSE"],"type":{"library":["automatic"]}},{"name":"IntentBuilderPlugin","targets":["IntentBuilderPlugin"],"type":{"plugin":null}},{"name":"LoggerPlugin","targets":["LoggerPlugin"],"type":{"plugin":null}},{"name":"Onboarding","targets":["Onboarding"],"type":{"library":["automatic"]}},{"name":"RuntimeWarnings","targets":["RuntimeWarnings"],"type":{"library":["automatic"]}},{"name":"Shared","targets":["Shared"],"type":{"library":["automatic"]}},{"name":"Storage","targets":["Storage","sqlcipher"],"type":{"library":["automatic"]}},{"name":"Strings","targets":["Strings"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Brave","name":"Brave"},{"moduleName":"BraveCore","name":"BraveCore"},{"moduleName":"BraveNews","name":"BraveNews"},{"moduleName":"BraveShared","name":"BraveShared"},{"moduleName":"BraveTalk","name":"BraveTalk"},{"moduleName":"BraveUI","name":"BraveUI"},{"moduleName":"BraveVPN","name":"BraveVPN"},{"moduleName":"BraveWallet","name":"BraveWallet"},{"moduleName":"BraveWidgetsModels","name":"BraveWidgetsModels"},{"moduleName":"BrowserIntentsModels","name":"BrowserIntentsModels"},{"moduleName":"Data","name":"Data"},{"moduleName":"DesignSystem","name":"DesignSystem"},{"moduleName":"HTTPSE","name":"HTTPSE"},{"moduleName":"IntentBuilderPlugin","name":"IntentBuilderPlugin"},{"moduleName":"LoggerPlugin","name":"LoggerPlugin"},{"moduleName":"MaterialComponents","name":"MaterialComponents"},{"moduleName":"Onboarding","name":"Onboarding"},{"moduleName":"RuntimeWarnings","name":"RuntimeWarnings"},{"moduleName":"Shared","name":"Shared"},{"moduleName":"Storage","name":"Storage"},{"moduleName":"Strings","name":"Strings"},{"moduleName":"sqlcipher","name":"sqlcipher"}],"toolsVersion":"5.6"}},"version":"v1.45.2"}]},{"keywords":["compression","files","swift","unzip","zip"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/marmelroy/Zip/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/marmelroy/Zip/master/README.md","summary":"Swift framework for zipping and unzipping files.","url":"https://github.com/marmelroy/Zip","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"Zip","products":[{"name":"Zip","targets":["Zip"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Zip","name":"Zip"}],"toolsVersion":"5.1"}},"version":"2.1.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"Zip","products":[{"name":"Zip","targets":["Zip"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Zip","name":"Zip"}],"toolsVersion":"5.1"}},"version":"2.1.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"Zip","products":[{"name":"Zip","targets":["Zip"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Zip","name":"Zip"}],"toolsVersion":"5.1"}},"version":"2.1.0"}]},{"keywords":["dznemptydataset","emptydataset-swift","swift","uicollectionview","uitableview"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Xiaoye220/EmptyDataSet-Swift/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Xiaoye220/EmptyDataSet-Swift/master/README.md","summary":"🎄 DZNEmptyDataSet implement with Swift.A drop-in UITableView/UICollectionView superclass category for showing empty datasets whenever the view has no content to display. DZNEmptyDataSet with Swift.","url":"https://github.com/Xiaoye220/EmptyDataSet-Swift","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"EmptyDataSet-Swift","products":[{"name":"EmptyDataSet-Swift","targets":["EmptyDataSet-Swift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"EmptyDataSet_Swift","name":"EmptyDataSet-Swift"}],"toolsVersion":"5.5"}},"version":"5.0.2"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"EmptyDataSet-Swift","products":[{"name":"EmptyDataSet-Swift","targets":["EmptyDataSet-Swift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"EmptyDataSet_Swift","name":"EmptyDataSet-Swift"}],"toolsVersion":"5.5"}},"version":"5.0.1"}]},{"keywords":["animations","ios","swift","ui","uicollectionview","uikit","uistackview","uitableview","uiview"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/marcosgriselli/ViewAnimator/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/marcosgriselli/ViewAnimator/master/README.md","summary":"ViewAnimator brings your UI to life with just one line","url":"https://github.com/marcosgriselli/ViewAnimator","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"ViewAnimator","products":[{"name":"ViewAnimator","targets":["ViewAnimator"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ViewAnimator","name":"ViewAnimator"}],"toolsVersion":"5.0"}},"summary":"3.1.0 (fastlane)","version":"3.1.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"ViewAnimator","products":[{"name":"ViewAnimator","targets":["ViewAnimator"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ViewAnimator","name":"ViewAnimator"}],"toolsVersion":"5.0"}},"summary":"3.0.2 (fastlane)","version":"3.0.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"ViewAnimator","products":[{"name":"ViewAnimator","targets":["ViewAnimator"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ViewAnimator","name":"ViewAnimator"}],"toolsVersion":"5.0"}},"summary":"3.0.1 (fastlane)","version":"3.0.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"}],"packageName":"ViewAnimator","products":[{"name":"ViewAnimator","targets":["ViewAnimator"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ViewAnimator","name":"ViewAnimator"}],"toolsVersion":"5.1"}},"summary":"2.7.0 (fastlane)","version":"2.7.0"}]},{"keywords":["reactive-programming","reactive-streams","reactiveswift","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ReactiveCocoa/ReactiveSwift/master/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/ReactiveCocoa/ReactiveSwift/master/README.md","summary":"Streams of values over time","url":"https://github.com/ReactiveCocoa/ReactiveSwift","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"}],"packageName":"ReactiveSwift","products":[{"name":"ReactiveSwift","targets":["ReactiveSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveSwift","name":"ReactiveSwift"}],"toolsVersion":"5.2"}},"version":"7.1.1"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"ReactiveSwift","products":[{"name":"ReactiveSwift","targets":["ReactiveSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveSwift","name":"ReactiveSwift"}],"toolsVersion":"5.2"}},"version":"7.1.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ReactiveSwift","products":[{"name":"ReactiveSwift","targets":["ReactiveSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveSwift","name":"ReactiveSwift"}],"toolsVersion":"5.2"}},"version":"7.0.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ReactiveSwift","products":[{"name":"ReactiveSwift","targets":["ReactiveSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveSwift","name":"ReactiveSwift"}],"toolsVersion":"5.2"}},"version":"6.7.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ReactiveSwift","products":[{"name":"ReactiveSwift","targets":["ReactiveSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveSwift","name":"ReactiveSwift"}],"toolsVersion":"5.2"}},"version":"6.7.0-rc1"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ReactiveSwift","products":[{"name":"ReactiveSwift","targets":["ReactiveSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveSwift","name":"ReactiveSwift"}],"toolsVersion":"5.2"}},"version":"6.6.1"}]},{"keywords":["architecture","feedback-loop","rxcocoa","rxswift","swift","universal-operator"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/NoTests/RxFeedback.swift/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/NoTests/RxFeedback.swift/master/README.md","summary":"The universal system operator and architecture for RxSwift","url":"https://github.com/NoTests/RxFeedback.swift","versions":[{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"RxFeedback","products":[{"name":"RxFeedback","targets":["RxFeedback"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxFeedback","name":"RxFeedback"}],"toolsVersion":"4.0"}},"version":"4.0.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"RxFeedback","products":[{"name":"RxFeedback","targets":["RxFeedback"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxFeedback","name":"RxFeedback"}],"toolsVersion":"4.0"}},"version":"3.0.0"}]},{"keywords":["ios","rac","reactivecocoa","reactiveswift","swift","swiftui","unidirectional-data-flow"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/ReactiveCocoa/Loop/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ReactiveCocoa/Loop/develop/README.md","summary":"Composable unidirectional data flow with ReactiveSwift.","url":"https://github.com/ReactiveCocoa/Loop","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"}],"packageName":"Loop","products":[{"name":"Loop","targets":["Loop"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Loop","name":"Loop"}],"toolsVersion":"5.2"}},"version":"3.0.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"Loop","products":[{"name":"Loop","targets":["Loop"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Loop","name":"Loop"}],"toolsVersion":"5.2"}},"version":"2.0.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"Loop","products":[{"name":"Loop","targets":["Loop"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Loop","name":"Loop"}],"toolsVersion":"5.2"}},"version":"2.0.0-beta3"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"Loop","products":[{"name":"Loop","targets":["Loop"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Loop","name":"Loop"}],"toolsVersion":"5.2"}},"version":"2.0.0-beta2"}]},{"keywords":["reactivecocoa","reactiveswift","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ReactiveCocoa/ReactiveCocoa/master/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/ReactiveCocoa/ReactiveCocoa/master/README.md","summary":"Cocoa framework and Obj-C dynamism bindings for ReactiveSwift.","url":"https://github.com/ReactiveCocoa/ReactiveCocoa","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ReactiveCocoa","products":[{"name":"ReactiveCocoa","targets":["ReactiveCocoa"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveCocoa","name":"ReactiveCocoa"}],"toolsVersion":"5.2"}},"version":"12.0.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ReactiveCocoa","products":[{"name":"ReactiveCocoa","targets":["ReactiveCocoa"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveCocoa","name":"ReactiveCocoa"}],"toolsVersion":"5.2"}},"version":"11.2.2"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ReactiveCocoa","products":[{"name":"ReactiveCocoa","targets":["ReactiveCocoa"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveCocoa","name":"ReactiveCocoa"}],"toolsVersion":"5.2"}},"version":"11.2.1"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ReactiveCocoa","products":[{"name":"ReactiveCocoa","targets":["ReactiveCocoa"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveCocoa","name":"ReactiveCocoa"}],"toolsVersion":"5.2"}},"version":"11.2.0"}]},{"keywords":["animation","binding","collectionview","datasource","diff","rxswift","sections","tableview","unidirectional"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/RxSwiftCommunity/RxDataSources/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/RxSwiftCommunity/RxDataSources/main/README.md","summary":"UITableView and UICollectionView Data Sources for RxSwift (sections, animated updates, editing ...)","url":"https://github.com/RxSwiftCommunity/RxDataSources","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"RxDataSources","products":[{"name":"Differentiator","targets":["Differentiator"],"type":{"library":["automatic"]}},{"name":"RxDataSources","targets":["RxDataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Differentiator","name":"Differentiator"},{"moduleName":"RxDataSources","name":"RxDataSources"}],"toolsVersion":"5.1"}},"version":"5.0.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"RxDataSources","products":[{"name":"Differentiator","targets":["Differentiator"],"type":{"library":["automatic"]}},{"name":"RxDataSources","targets":["RxDataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Differentiator","name":"Differentiator"},{"moduleName":"RxDataSources","name":"RxDataSources"}],"toolsVersion":"5.1"}},"version":"5.0.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"RxDataSources","products":[{"name":"Differentiator","targets":["Differentiator"],"type":{"library":["automatic"]}},{"name":"RxDataSources","targets":["RxDataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Differentiator","name":"Differentiator"},{"moduleName":"RxDataSources","name":"RxDataSources"}],"toolsVersion":"5.0"}},"version":"5.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"}],"packageName":"RxDataSources","products":[{"name":"Differentiator","targets":["Differentiator"],"type":{"library":["automatic"]}},{"name":"RxDataSources","targets":["RxDataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Differentiator","name":"Differentiator"},{"moduleName":"RxDataSources","name":"RxDataSources"}],"toolsVersion":"5.0"}},"version":"4.0.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"}],"packageName":"RxDataSources","products":[{"name":"Differentiator","targets":["Differentiator"],"type":{"library":["automatic"]}},{"name":"RxDataSources","targets":["RxDataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Differentiator","name":"Differentiator"},{"moduleName":"RxDataSources","name":"RxDataSources"}],"toolsVersion":"5.0"}},"version":"4.0.0"}]},{"keywords":["alamofire","networking","rxswift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/RxSwiftCommunity/RxAlamofire/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/RxSwiftCommunity/RxAlamofire/main/README.md","summary":"RxSwift wrapper around the elegant HTTP networking in Swift Alamofire","url":"https://github.com/RxSwiftCommunity/RxAlamofire","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxAlamofire","products":[{"name":"RxAlamofire","targets":["RxAlamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxAlamofire","name":"RxAlamofire"}],"toolsVersion":"5.0"}},"version":"v6.1.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxAlamofire","products":[{"name":"RxAlamofire","targets":["RxAlamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxAlamofire","name":"RxAlamofire"}],"toolsVersion":"5.0"}},"summary":"chore(release): 6.1.1 [skip ci]","version":"v6.1.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxAlamofire","products":[{"name":"RxAlamofire","targets":["RxAlamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxAlamofire","name":"RxAlamofire"}],"toolsVersion":"5.0"}},"summary":"chore(release): 6.1.0 [skip ci]","version":"v6.1.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxAlamofire","products":[{"name":"RxAlamofire","targets":["RxAlamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxAlamofire","name":"RxAlamofire"}],"toolsVersion":"5.0"}},"summary":"chore(release): 5.7.1 [skip ci]","version":"v5.7.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxAlamofire","products":[{"name":"RxAlamofire","targets":["RxAlamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxAlamofire","name":"RxAlamofire"}],"toolsVersion":"5.0"}},"summary":"chore(release): 5.7.0 [skip ci]","version":"v5.7.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxAlamofire","products":[{"name":"RxAlamofire","targets":["RxAlamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxAlamofire","name":"RxAlamofire"}],"toolsVersion":"5.0"}},"summary":"chore(release): 5.6.2 [skip ci]","version":"v5.6.2"}]},{"keywords":["ios","keyboard","rxswift","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/RxSwiftCommunity/RxKeyboard/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/RxSwiftCommunity/RxKeyboard/master/README.md","summary":"Reactive Keyboard in iOS","url":"https://github.com/RxSwiftCommunity/RxKeyboard","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"RxKeyboard","products":[{"name":"RxKeyboard","targets":["RxKeyboard"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxKeyboard","name":"RxKeyboard"}],"toolsVersion":"5.1"}},"version":"2.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"RxKeyboard","products":[{"name":"RxKeyboard","targets":["RxKeyboard"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxKeyboard","name":"RxKeyboard"}],"toolsVersion":"5.0"}},"version":"1.0.0"}]},{"keywords":["click","gesture","pan","recognizers","rxswift","swipe"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/RxSwiftCommunity/RxGesture/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/RxSwiftCommunity/RxGesture/main/README.md","summary":"RxSwift reactive wrapper for view gestures","url":"https://github.com/RxSwiftCommunity/RxGesture","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"RxGesture","products":[{"name":"RxGesture","targets":["RxGesture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxGesture","name":"RxGesture"}],"toolsVersion":"5.1"}},"summary":"Fix build error on Xcode 13.3","version":"4.0.4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"RxGesture","products":[{"name":"RxGesture","targets":["RxGesture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxGesture","name":"RxGesture"}],"toolsVersion":"5.1"}},"version":"4.0.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"RxGesture","products":[{"name":"RxGesture","targets":["RxGesture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxGesture","name":"RxGesture"}],"toolsVersion":"5.1"}},"summary":"Fix Carthage compatibility","version":"4.0.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"RxGesture","products":[{"name":"RxGesture","targets":["RxGesture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxGesture","name":"RxGesture"}],"toolsVersion":"5.0"}},"version":"3.0.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"RxGesture","products":[{"name":"RxGesture","targets":["RxGesture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxGesture","name":"RxGesture"}],"toolsVersion":"5.0"}},"summary":"","version":"3.0.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"RxGesture","products":[{"name":"RxGesture","targets":["RxGesture"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxGesture","name":"RxGesture"}],"toolsVersion":"5.0"}},"version":"3.0.1"}]},{"keywords":["network","reachability","rxcocoa","rxswift","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/RxSwiftCommunity/RxReachability/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/RxSwiftCommunity/RxReachability/develop/README.md","summary":"RxSwift bindings for Reachability","url":"https://github.com/RxSwiftCommunity/RxReachability","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"RxReachability","products":[{"name":"RxReachability","targets":["RxReachability"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxReachability","name":"RxReachability"}],"toolsVersion":"5.2"}},"summary":"Release 1.2.1 See CHANGELOG.md","version":"1.2.1"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"}],"packageName":"RxReachability","products":[{"name":"RxReachability","targets":["RxReachability"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxReachability","name":"RxReachability"}],"toolsVersion":"5.2"}},"summary":"Release 1.2.0","version":"1.2.0"}]},{"keywords":["cllocationmanager","corelocation","location","placemark","rxcorelocation","rxswift","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/RxSwiftCommunity/RxCoreLocation/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/RxSwiftCommunity/RxCoreLocation/master/Readme.md","summary":"RxCoreLocation is a reactive abstraction to manage Core Location.","url":"https://github.com/RxSwiftCommunity/RxCoreLocation","versions":[{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"RxCoreLocation","products":[{"name":"RxCoreLocation","targets":["RxCoreLocation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxCoreLocation","name":"RxCoreLocation"}],"toolsVersion":"4.0"}},"version":"1.5.1"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"RxCoreLocation","products":[{"name":"RxCoreLocation","targets":["RxCoreLocation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxCoreLocation","name":"RxCoreLocation"}],"toolsVersion":"4.0"}},"version":"1.5.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"RxCoreLocation","products":[{"name":"RxCoreLocation","targets":["RxCoreLocation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxCoreLocation","name":"RxCoreLocation"}],"toolsVersion":"4.0"}},"version":"1.4.2"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/DeclarativeHub/ReactiveKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/DeclarativeHub/ReactiveKit/master/README.md","summary":"A Swift Reactive Programming Kit","url":"https://github.com/DeclarativeHub/ReactiveKit","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ReactiveKit","products":[{"name":"ReactiveKit","targets":["ReactiveKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveKit","name":"ReactiveKit"}],"toolsVersion":"5.0"}},"version":"v3.19.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ReactiveKit","products":[{"name":"ReactiveKit","targets":["ReactiveKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveKit","name":"ReactiveKit"}],"toolsVersion":"5.0"}},"version":"v3.19.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ReactiveKit","products":[{"name":"ReactiveKit","targets":["ReactiveKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReactiveKit","name":"ReactiveKit"}],"toolsVersion":"5.0"}},"version":"v3.18.3"}]},{"keywords":["bottomsheet","floating","ios","overlay","panel","uikit"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/applidium/OverlayContainer/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/applidium/OverlayContainer/main/README.md","summary":"Non-intrusive iOS UI library to implement overlay based interfaces","url":"https://github.com/applidium/OverlayContainer","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"OverlayContainer","products":[{"name":"OverlayContainer","targets":["OverlayContainer"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"OverlayContainer","name":"OverlayContainer"}],"toolsVersion":"5.1"}},"summary":"3.5.2 (fastlane)","version":"3.5.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"OverlayContainer","products":[{"name":"OverlayContainer","targets":["OverlayContainer"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"OverlayContainer","name":"OverlayContainer"}],"toolsVersion":"5.1"}},"summary":"3.5.1 (fastlane)","version":"3.5.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"OverlayContainer","products":[{"name":"OverlayContainer","targets":["OverlayContainer"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"OverlayContainer","name":"OverlayContainer"}],"toolsVersion":"5.1"}},"summary":"3.5.0 (fastlane)","version":"3.5.0"}]},{"keywords":["aes","aes-gcm","cipher","commoncrypto","cryptography","cryptoswift","digest","hmac","hmac-authentication","md5","sha1","sha3","swift"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/krzyzanowskim/CryptoSwift/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/krzyzanowskim/CryptoSwift/main/README.md","summary":"CryptoSwift is a growing collection of standard and secure cryptographic algorithms implemented in Swift","url":"https://github.com/krzyzanowskim/CryptoSwift","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"CryptoSwift","products":[{"name":"CryptoSwift","targets":["CryptoSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CryptoSwift","name":"CryptoSwift"}],"toolsVersion":"5.3"}},"summary":"1.6.0","version":"1.6.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"CryptoSwift","products":[{"name":"CryptoSwift","targets":["CryptoSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CryptoSwift","name":"CryptoSwift"}],"toolsVersion":"5.3"}},"summary":"1.5.1","version":"1.5.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"CryptoSwift","products":[{"name":"CryptoSwift","targets":["CryptoSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CryptoSwift","name":"CryptoSwift"}],"toolsVersion":"5.3"}},"summary":"1.5.0","version":"1.5.0"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"CryptoSwift","products":[{"name":"CryptoSwift","targets":["CryptoSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CryptoSwift","name":"CryptoSwift"}],"toolsVersion":"4.2"}},"version":"0.15.0"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"CryptoSwift","products":[{"name":"CryptoSwift","targets":["CryptoSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CryptoSwift","name":"CryptoSwift"}],"toolsVersion":"4.2"}},"version":"0.14.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"CryptoSwift","products":[{"name":"CryptoSwift","targets":["CryptoSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CryptoSwift","name":"CryptoSwift"}],"toolsVersion":"4.0"}},"version":"0.13.1"}]},{"keywords":["auto","autolayout","cocoapods","constraints","dsl","layout","snapkit","swift","ui","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/SnapKit/SnapKit/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SnapKit/SnapKit/develop/README.md","summary":"A Swift Autolayout DSL for iOS & OS X","url":"https://github.com/SnapKit/SnapKit","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.11"},{"name":"tvos","version":"10.0"}],"packageName":"SnapKit","products":[{"name":"SnapKit","targets":["SnapKit"],"type":{"library":["automatic"]}},{"name":"SnapKit-Dynamic","targets":["SnapKit"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"SnapKit","name":"SnapKit"}],"toolsVersion":"5.0"}},"version":"5.6.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.12"},{"name":"tvos","version":"10.0"}],"packageName":"SnapKit","products":[{"name":"SnapKit","targets":["SnapKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SnapKit","name":"SnapKit"}],"toolsVersion":"5.0"}},"version":"5.0.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"SnapKit","products":[{"name":"SnapKit","targets":["SnapKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SnapKit","name":"SnapKit"}],"toolsVersion":"5.0"}},"version":"5.0.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"SnapKit","products":[{"name":"SnapKit","targets":["SnapKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SnapKit","name":"SnapKit"}],"toolsVersion":"4.0"}},"version":"4.0.1"}]},{"keywords":["screenshot-testing","snapshot-testing","swift","testing"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/pointfreeco/swift-snapshot-testing/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/pointfreeco/swift-snapshot-testing/main/README.md","summary":"📸 Delightful Swift snapshot testing.","url":"https://github.com/pointfreeco/swift-snapshot-testing","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"10.0"}],"packageName":"swift-snapshot-testing","products":[{"name":"SnapshotTesting","targets":["SnapshotTesting"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SnapshotTesting","name":"SnapshotTesting"}],"toolsVersion":"5.5"}},"version":"1.11.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"swift-snapshot-testing","products":[{"name":"SnapshotTesting","targets":["SnapshotTesting"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SnapshotTesting","name":"SnapshotTesting"}],"toolsVersion":"5.5"}},"version":"1.10.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"10.0"}],"packageName":"SnapshotTesting","products":[{"name":"SnapshotTesting","targets":["SnapshotTesting"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SnapshotTesting","name":"SnapshotTesting"}],"toolsVersion":"5.0"}},"version":"1.9.0"}]},{"keywords":["framework","http","http2","server","server-side-swift","swift","vapor","web-framework"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/vapor/vapor/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/vapor/vapor/main/README.md","summary":"💧 A server-side Swift HTTP web framework.","url":"https://github.com/vapor/vapor","versions":[{"defaultToolsVersion":"5.5.2","manifests":{"5.5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"vapor","products":[{"name":"Development","targets":["Development"],"type":{"executable":null}},{"name":"Vapor","targets":["Vapor"],"type":{"library":["automatic"]}},{"name":"XCTVapor","targets":["XCTVapor"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Development","name":"Development"},{"moduleName":"Vapor","name":"Vapor"},{"moduleName":"XCTVapor","name":"XCTVapor"}],"toolsVersion":"5.5.2"}},"version":"4.69.1"},{"defaultToolsVersion":"5.5.2","manifests":{"5.5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"vapor","products":[{"name":"Development","targets":["Development"],"type":{"executable":null}},{"name":"Vapor","targets":["Vapor"],"type":{"library":["automatic"]}},{"name":"XCTVapor","targets":["XCTVapor"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Development","name":"Development"},{"moduleName":"Vapor","name":"Vapor"},{"moduleName":"XCTVapor","name":"XCTVapor"}],"toolsVersion":"5.5.2"}},"version":"4.69.0"},{"defaultToolsVersion":"5.5.2","manifests":{"5.5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"vapor","products":[{"name":"Development","targets":["Development"],"type":{"executable":null}},{"name":"Vapor","targets":["Vapor"],"type":{"library":["automatic"]}},{"name":"XCTVapor","targets":["XCTVapor"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Development","name":"Development"},{"moduleName":"Vapor","name":"Vapor"},{"moduleName":"XCTVapor","name":"XCTVapor"}],"toolsVersion":"5.5.2"}},"version":"4.68.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"Vapor","products":[{"name":"BoilerplateRun","targets":["BoilerplateRun"],"type":{"executable":null}},{"name":"Development","targets":["Development"],"type":{"executable":null}},{"name":"Vapor","targets":["Vapor"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BoilerplateRun","name":"BoilerplateRun"},{"moduleName":"Development","name":"Development"},{"moduleName":"Vapor","name":"Vapor"}],"toolsVersion":"4.0"}},"version":"3.3.3"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"Vapor","products":[{"name":"BoilerplateRun","targets":["BoilerplateRun"],"type":{"executable":null}},{"name":"Development","targets":["Development"],"type":{"executable":null}},{"name":"Vapor","targets":["Vapor"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BoilerplateRun","name":"BoilerplateRun"},{"moduleName":"Development","name":"Development"},{"moduleName":"Vapor","name":"Vapor"}],"toolsVersion":"4.0"}},"version":"3.3.2"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"Vapor","products":[{"name":"BoilerplateRun","targets":["BoilerplateRun"],"type":{"executable":null}},{"name":"Development","targets":["Development"],"type":{"executable":null}},{"name":"Vapor","targets":["Vapor"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BoilerplateRun","name":"BoilerplateRun"},{"moduleName":"Development","name":"Development"},{"moduleName":"Vapor","name":"Vapor"}],"toolsVersion":"4.0"}},"version":"3.3.1"}]},{"keywords":["container","dependency-injection","ios","swift","swiftui","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/hmlongco/Factory/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/hmlongco/Factory/main/README.md","summary":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","url":"https://github.com/hmlongco/Factory","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.14"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Factory","products":[{"name":"Factory","targets":["Factory"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Factory","name":"Factory"}],"toolsVersion":"5.6"}},"version":"1.3.5"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.14"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Factory","products":[{"name":"Factory","targets":["Factory"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Factory","name":"Factory"}],"toolsVersion":"5.6"}},"version":"1.3.4"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.14"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Factory","products":[{"name":"Factory","targets":["Factory"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Factory","name":"Factory"}],"toolsVersion":"5.6"}},"version":"1.3.3"}]},{"keywords":["crop","cropper","cropping","image-crop","image-cropper","image-cropping","imagecrop","imagecropper","imagecropperswift","imagecropping","ios","photocrop","photocropping","swift","swiftphotocropping","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/guoyingtao/Mantis/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/guoyingtao/Mantis/master/README.md","summary":"An iOS Image cropping library, which mimics the Photo App written in Swift.","url":"https://github.com/guoyingtao/Mantis","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.15"}],"packageName":"Mantis","products":[{"name":"Mantis","targets":["Mantis"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Mantis","name":"Mantis"}],"toolsVersion":"5.3"}},"version":"v2.5.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.15"}],"packageName":"Mantis","products":[{"name":"Mantis","targets":["Mantis"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Mantis","name":"Mantis"}],"toolsVersion":"5.3"}},"version":"v2.4.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.15"}],"packageName":"Mantis","products":[{"name":"Mantis","targets":["Mantis"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Mantis","name":"Mantis"}],"toolsVersion":"5.3"}},"version":"v2.3.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.15"}],"packageName":"Mantis","products":[{"name":"Mantis","targets":["Mantis"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Mantis","name":"Mantis"}],"toolsVersion":"5.3"}},"version":"v1.9.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.15"}],"packageName":"Mantis","products":[{"name":"Mantis","targets":["Mantis"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Mantis","name":"Mantis"}],"toolsVersion":"5.3"}},"version":"v1.8.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.15"}],"packageName":"Mantis","products":[{"name":"Mantis","targets":["Mantis"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Mantis","name":"Mantis"}],"toolsVersion":"5.3"}},"version":"1.7.5"}]},{"keywords":["cache","codable","coredata","database","db","filesystem","identifiable","ios","keychain","keyvaluestore","macos","spm","store","swift","tvos","userdefaults","watchos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/omaralbeik/Stores/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/omaralbeik/Stores/main/README.md","summary":"Typed key-value storage solution to store Codable types in various persistence layers with few lines of code!","url":"https://github.com/omaralbeik/Stores","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Stores","products":[{"name":"Blueprints","targets":["Blueprints"],"type":{"library":["automatic"]}},{"name":"CoreDataStore","targets":["CoreDataStore"],"type":{"library":["automatic"]}},{"name":"FileSystemStore","targets":["FileSystemStore"],"type":{"library":["automatic"]}},{"name":"KeychainStore","targets":["KeychainStore"],"type":{"library":["automatic"]}},{"name":"Stores","targets":["Stores"],"type":{"library":["automatic"]}},{"name":"StoresTestUtils","targets":["TestUtils"],"type":{"library":["automatic"]}},{"name":"UserDefaultsStore","targets":["UserDefaultsStore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Blueprints","name":"Blueprints"},{"moduleName":"CoreDataStore","name":"CoreDataStore"},{"moduleName":"FileSystemStore","name":"FileSystemStore"},{"moduleName":"KeychainStore","name":"KeychainStore"},{"moduleName":"Stores","name":"Stores"},{"moduleName":"TestUtils","name":"TestUtils"},{"moduleName":"UserDefaultsStore","name":"UserDefaultsStore"}],"toolsVersion":"5.5"}},"version":"0.4.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Stores","products":[{"name":"Blueprints","targets":["Blueprints"],"type":{"library":["automatic"]}},{"name":"CoreDataStore","targets":["CoreDataStore"],"type":{"library":["automatic"]}},{"name":"FileSystemStore","targets":["FileSystemStore"],"type":{"library":["automatic"]}},{"name":"KeychainStore","targets":["KeychainStore"],"type":{"library":["automatic"]}},{"name":"Stores","targets":["Stores"],"type":{"library":["automatic"]}},{"name":"StoresTestUtils","targets":["TestUtils"],"type":{"library":["automatic"]}},{"name":"UserDefaultsStore","targets":["UserDefaultsStore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Blueprints","name":"Blueprints"},{"moduleName":"CoreDataStore","name":"CoreDataStore"},{"moduleName":"FileSystemStore","name":"FileSystemStore"},{"moduleName":"KeychainStore","name":"KeychainStore"},{"moduleName":"Stores","name":"Stores"},{"moduleName":"TestUtils","name":"TestUtils"},{"moduleName":"UserDefaultsStore","name":"UserDefaultsStore"}],"toolsVersion":"5.5"}},"version":"0.4.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Stores","products":[{"name":"Blueprints","targets":["Blueprints"],"type":{"library":["automatic"]}},{"name":"CoreDataStore","targets":["CoreDataStore"],"type":{"library":["automatic"]}},{"name":"FileSystemStore","targets":["FileSystemStore"],"type":{"library":["automatic"]}},{"name":"KeychainStore","targets":["KeychainStore"],"type":{"library":["automatic"]}},{"name":"Stores","targets":["Stores"],"type":{"library":["automatic"]}},{"name":"StoresTestUtils","targets":["TestUtils"],"type":{"library":["automatic"]}},{"name":"UserDefaultsStore","targets":["UserDefaultsStore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Blueprints","name":"Blueprints"},{"moduleName":"CoreDataStore","name":"CoreDataStore"},{"moduleName":"FileSystemStore","name":"FileSystemStore"},{"moduleName":"KeychainStore","name":"KeychainStore"},{"moduleName":"Stores","name":"Stores"},{"moduleName":"TestUtils","name":"TestUtils"},{"moduleName":"UserDefaultsStore","name":"UserDefaultsStore"}],"toolsVersion":"5.5"}},"version":"0.3.4"}]},{"keywords":["anchor","carthage","chainable-methods","cocoapod","ios","ios-lib","ios-swift","ios-ui","language","layout","layout-engine","left-language","margin","rtl","swift","swift-3","swift-framework","swift-library","uiview-extension"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/layoutBox/PinLayout/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/layoutBox/PinLayout/master/README.md","summary":"Fast Swift Views layouting without auto layout. No magic, pure code, full control and blazing fast. Concise syntax, intuitive, readable & chainable. [iOS/macOS/tvOS/CALayer]","url":"https://github.com/layoutBox/PinLayout","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"packageName":"PinLayout","products":[{"name":"PinLayout","targets":["PinLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PinLayout","name":"PinLayout"}],"toolsVersion":"5.4"}},"version":"1.10.3"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"packageName":"PinLayout","products":[{"name":"PinLayout","targets":["PinLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PinLayout","name":"PinLayout"}],"toolsVersion":"5.4"}},"version":"1.10.2"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"packageName":"PinLayout","products":[{"name":"PinLayout","targets":["PinLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PinLayout","name":"PinLayout"}],"toolsVersion":"5.4"}},"version":"1.10.1"}]},{"keywords":["ios","macos","swift","swift-package-manager","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/dmytro-anokhin/url-image/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/dmytro-anokhin/url-image/main/README.md","summary":"AsyncImage before iOS 15. Lightweight, pure SwiftUI Image view, that displays an image downloaded from URL, with auxiliary views and local cache.","url":"https://github.com/dmytro-anokhin/url-image","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"},{"name":"macos","version":"10.13"},{"name":"watchos","version":"4.0"}],"packageName":"URLImage","products":[{"name":"URLImage","targets":["URLImage"],"type":{"library":["automatic"]}},{"name":"URLImageStore","targets":["URLImageStore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"URLImage","name":"URLImage"},{"moduleName":"URLImageStore","name":"URLImageStore"}],"toolsVersion":"5.3"}},"summary":"- Use v12 platform dependency as workaround for 74120874","version":"3.1.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"macos","version":"10.13"},{"name":"watchos","version":"4.0"}],"packageName":"URLImage","products":[{"name":"URLImage","targets":["URLImage"],"type":{"library":["automatic"]}},{"name":"URLImageStore","targets":["URLImageStore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"URLImage","name":"URLImage"},{"moduleName":"URLImageStore","name":"URLImageStore"}],"toolsVersion":"5.3"}},"summary":"- Change default loading option","version":"3.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"macos","version":"10.13"},{"name":"watchos","version":"4.0"}],"packageName":"URLImage","products":[{"name":"URLImage","targets":["URLImage"],"type":{"library":["automatic"]}},{"name":"URLImageStore","targets":["URLImageStore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"URLImage","name":"URLImage"},{"moduleName":"URLImageStore","name":"URLImageStore"}],"toolsVersion":"5.3"}},"summary":"- Public identifier","version":"3.0.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"macos","version":"10.13"},{"name":"watchos","version":"4.0"}],"packageName":"URLImage","products":[{"name":"URLImage","targets":["URLImage"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"URLImage","name":"URLImage"}],"toolsVersion":"5.3"}},"summary":"- Fix thread explosion when decoding too many images","version":"2.2.5"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"macos","version":"10.13"},{"name":"watchos","version":"4.0"}],"packageName":"URLImage","products":[{"name":"URLImage","targets":["URLImage"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"URLImage","name":"URLImage"}],"toolsVersion":"5.3"}},"summary":"- Fixed image view update while handling user interactions","version":"2.2.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"macos","version":"10.13"},{"name":"watchos","version":"4.0"}],"packageName":"URLImage","products":[{"name":"URLImage","targets":["URLImage"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"URLImage","name":"URLImage"}],"toolsVersion":"5.3"}},"summary":"- Podspec update","version":"2.2.3"}]},{"keywords":["combine","test","xctest","xctestexpectation"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/groue/CombineExpectations/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/groue/CombineExpectations/master/README.md","summary":"Utilities for tests that wait for Combine publishers","url":"https://github.com/groue/CombineExpectations","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.4"}],"packageName":"CombineExpectations","products":[{"name":"CombineExpectations","targets":["CombineExpectations"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineExpectations","name":"CombineExpectations"}],"toolsVersion":"5.1"}},"version":"v0.10.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"CombineExpectations","products":[{"name":"CombineExpectations","targets":["CombineExpectations"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineExpectations","name":"CombineExpectations"}],"toolsVersion":"5.2"}},"version":"v0.9.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"CombineExpectations","products":[{"name":"CombineExpectations","targets":["CombineExpectations"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineExpectations","name":"CombineExpectations"}],"toolsVersion":"5.2"}},"version":"v0.8.0"}]},{"keywords":["animation","cocoapods","ios","swift","transition","uicollectionview","uicollectionviewlayout-subclass"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/KelvinJin/AnimatedCollectionViewLayout/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/KelvinJin/AnimatedCollectionViewLayout/master/README.md","summary":"A UICollectionViewLayout subclass that adds custom transitions/animations to the UICollectionView without effecting your existing code.","url":"https://github.com/KelvinJin/AnimatedCollectionViewLayout","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AnimatedCollectionViewLayout","products":[{"name":"AnimatedCollectionViewLayout","targets":["AnimatedCollectionViewLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AnimatedCollectionViewLayout","name":"AnimatedCollectionViewLayout"}],"toolsVersion":"5.0"}},"version":"1.1.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"AnimatedCollectionViewLayout","products":[{"name":"AnimatedCollectionViewLayout","targets":["AnimatedCollectionViewLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AnimatedCollectionViewLayout","name":"AnimatedCollectionViewLayout"}],"toolsVersion":"5.0"}},"version":"1.0.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"AnimatedCollectionViewLayout","products":[{"name":"AnimatedCollectionViewLayout","targets":["AnimatedCollectionViewLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AnimatedCollectionViewLayout","name":"AnimatedCollectionViewLayout"}],"toolsVersion":"5.0"}},"version":"1.0.0"}]},{"keywords":["ios","macos","swift","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/danielsaidi/RichTextKit/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/danielsaidi/RichTextKit/main/README.md","summary":"RichTextKit is a Swift-based library for working with rich text in UIKit, AppKit and SwiftUI.","url":"https://github.com/danielsaidi/RichTextKit","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"11.0"},{"name":"tvos","version":"14.0"},{"name":"watchos","version":"7.0"}],"packageName":"RichTextKit","products":[{"name":"RichTextKit","targets":["RichTextKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RichTextKit","name":"RichTextKit"}],"toolsVersion":"5.6"}},"summary":"0.5.1 (fastlane)","version":"0.5.1"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"11.0"},{"name":"tvos","version":"14.0"},{"name":"watchos","version":"7.0"}],"packageName":"RichTextKit","products":[{"name":"RichTextKit","targets":["RichTextKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RichTextKit","name":"RichTextKit"}],"toolsVersion":"5.6"}},"summary":"0.5.0 (fastlane)","version":"0.5.0"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"11.0"},{"name":"tvos","version":"14.0"},{"name":"watchos","version":"7.0"}],"packageName":"RichTextKit","products":[{"name":"RichTextKit","targets":["RichTextKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RichTextKit","name":"RichTextKit"}],"toolsVersion":"5.6"}},"summary":"0.4.0 (fastlane)","version":"0.4.0"}]},{"keywords":["iqkeyboardmanager","keyboard","objective-c","swift","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/hackiftekhar/IQKeyboardManager/master/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/hackiftekhar/IQKeyboardManager/master/README.md","summary":"Codeless drop-in universal library allows to prevent issues of keyboard sliding up and cover UITextField/UITextView. Neither need to write any code nor any setup required and much more.","url":"https://github.com/hackiftekhar/IQKeyboardManager","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"packageName":"IQKeyboardManagerSwift","products":[{"name":"IQKeyboardManagerSwift","targets":["IQKeyboardManagerSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"IQKeyboardManagerSwift","name":"IQKeyboardManagerSwift"}],"toolsVersion":"5.6"}},"summary":"","version":"v6.5.11"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"packageName":"IQKeyboardManagerSwift","products":[{"name":"IQKeyboardManagerSwift","targets":["IQKeyboardManagerSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"IQKeyboardManagerSwift","name":"IQKeyboardManagerSwift"}],"toolsVersion":"5.6"}},"summary":"","version":"v6.5.10"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"IQKeyboardManagerSwift","products":[{"name":"IQKeyboardManagerSwift","targets":["IQKeyboardManagerSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"IQKeyboardManagerSwift","name":"IQKeyboardManagerSwift"}],"toolsVersion":"5.0"}},"summary":"","version":"v6.5.9"}]},{"keywords":["async","async-await","await","chainable","concurrency","flatmap","future","futures","promise","promises","swift","swift5"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/async-plus/async-plus/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/async-plus/async-plus/main/README.md","summary":"⛓ A chainable interface for Swift's async/await.","url":"https://github.com/async-plus/async-plus","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"async-plus","products":[{"name":"AsyncPlus","targets":["AsyncPlus"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AsyncPlus","name":"AsyncPlus"}],"toolsVersion":"5.5"}},"version":"1.1.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"async-plus","products":[{"name":"AsyncPlus","targets":["AsyncPlus"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AsyncPlus","name":"AsyncPlus"}],"toolsVersion":"5.5"}},"version":"1.1.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"async-plus","products":[{"name":"AsyncPlus","targets":["AsyncPlus"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AsyncPlus","name":"AsyncPlus"}],"toolsVersion":"5.5"}},"version":"1.0.2"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"async-plus","products":[{"name":"AsyncPlus","targets":["AsyncPlus"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AsyncPlus","name":"AsyncPlus"}],"toolsVersion":"5.5"}},"summary":"","version":"0.1.4"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"async-plus","products":[{"name":"AsyncPlus","targets":["AsyncPlus"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AsyncPlus","name":"AsyncPlus"}],"toolsVersion":"5.5"}},"summary":"","version":"0.1.3"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"async-plus","products":[{"name":"AsyncPlus","targets":["AsyncPlus"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AsyncPlus","name":"AsyncPlus"}],"toolsVersion":"5.5"}},"summary":"","version":"0.1.2"}]},{"keywords":["async","async-await","asynchronous","atomic","await","combine","coroutine","coroutines","dispatch","futures","ios","linux","lock-free","macos","multithreading","promises","scheduler","structured-concurrency","swift","thread"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/belozierov/SwiftCoroutine/master/LICENCE"},"readmeURL":"https://raw.githubusercontent.com/belozierov/SwiftCoroutine/master/README.md","summary":"Swift coroutines for iOS, macOS and Linux.","url":"https://github.com/belozierov/SwiftCoroutine","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"SwiftCoroutine","products":[{"name":"SwiftCoroutine","targets":["CCoroutine","SwiftCoroutine"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CCoroutine","name":"CCoroutine"},{"moduleName":"SwiftCoroutine","name":"SwiftCoroutine"}],"toolsVersion":"5.2"}},"version":"2.1.11"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"SwiftCoroutine","products":[{"name":"SwiftCoroutine","targets":["CCoroutine","SwiftCoroutine"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CCoroutine","name":"CCoroutine"},{"moduleName":"SwiftCoroutine","name":"SwiftCoroutine"}],"toolsVersion":"5.2"}},"version":"2.1.10"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"SwiftCoroutine","products":[{"name":"SwiftCoroutine","targets":["CCoroutine","SwiftCoroutine"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CCoroutine","name":"CCoroutine"},{"moduleName":"SwiftCoroutine","name":"SwiftCoroutine"}],"toolsVersion":"5.2"}},"version":"2.1.9"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.13"}],"packageName":"SwiftCoroutine","products":[{"name":"SwiftCoroutine","targets":["CCoroutine","SwiftCoroutine"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CCoroutine","name":"CCoroutine"},{"moduleName":"SwiftCoroutine","name":"SwiftCoroutine"}],"toolsVersion":"5.1"}},"version":"1.0.7"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.13"}],"packageName":"SwiftCoroutine","products":[{"name":"SwiftCoroutine","targets":["CCoroutine","SwiftCoroutine"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CCoroutine","name":"CCoroutine"},{"moduleName":"SwiftCoroutine","name":"SwiftCoroutine"}],"toolsVersion":"5.1"}},"version":"1.0.6"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.13"}],"packageName":"SwiftCoroutine","products":[{"name":"SwiftCoroutine","targets":["CCoroutine","SwiftCoroutine"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CCoroutine","name":"CCoroutine"},{"moduleName":"SwiftCoroutine","name":"SwiftCoroutine"}],"toolsVersion":"5.1"}},"version":"1.0.5"}]},{"keywords":["animation","blur","controller","coverflow","cylinder","gallery","layout","perspective","scale","shopping","snapshot","stack","swift","swiftui","transformation","transforms","transition","uicollectionview","uicollectionviewlayout","uikit"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/amirdew/CollectionViewPagingLayout/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/amirdew/CollectionViewPagingLayout/master/README.md","summary":"A simple but highly customizable UICollectionViewLayout for UICollectionView -- Simple SwiftUI views that let you make page-view effects.","url":"https://github.com/amirdew/CollectionViewPagingLayout","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"CollectionViewPagingLayout","products":[{"name":"CollectionViewPagingLayout","targets":["CollectionViewPagingLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CollectionViewPagingLayout","name":"CollectionViewPagingLayout"}],"toolsVersion":"5.1"}},"version":"1.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"CollectionViewPagingLayout","products":[{"name":"CollectionViewPagingLayout","targets":["CollectionViewPagingLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CollectionViewPagingLayout","name":"CollectionViewPagingLayout"}],"toolsVersion":"5.1"}},"summary":"","version":"1.0.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"CollectionViewPagingLayout","products":[{"name":"CollectionViewPagingLayout","targets":["CollectionViewPagingLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CollectionViewPagingLayout","name":"CollectionViewPagingLayout"}],"toolsVersion":"5.1"}},"summary":"","version":"1.0.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"CollectionViewPagingLayout","products":[{"name":"CollectionViewPagingLayout","targets":["CollectionViewPagingLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CollectionViewPagingLayout","name":"CollectionViewPagingLayout"}],"toolsVersion":"5.1"}},"summary":"","version":"0.4.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"CollectionViewPagingLayout","products":[{"name":"CollectionViewPagingLayout","targets":["CollectionViewPagingLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CollectionViewPagingLayout","name":"CollectionViewPagingLayout"}],"toolsVersion":"5.1"}},"version":"0.4.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"CollectionViewPagingLayout","products":[{"name":"CollectionViewPagingLayout","targets":["CollectionViewPagingLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CollectionViewPagingLayout","name":"CollectionViewPagingLayout"}],"toolsVersion":"5.1"}},"version":"0.3.0"}]},{"keywords":["architecture","hacktoberfest","ios","modular","navigation","swift","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/rockbruno/RouterService/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/rockbruno/RouterService/master/README.md","summary":"💉Type-safe Navigation/Dependency Injection Framework for Swift","url":"https://github.com/rockbruno/RouterService","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"RouterService","products":[{"name":"RouterService","targets":["RouterService"],"type":{"library":["dynamic"]}},{"name":"RouterServiceInterface","targets":["RouterServiceInterface"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"RouterService","name":"RouterService"},{"moduleName":"RouterServiceInterface","name":"RouterServiceInterface"}],"toolsVersion":"5.1"}},"summary":"1.1.0","version":"1.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"RouterService","products":[{"name":"RouterService","targets":["RouterService"],"type":{"library":["dynamic"]}},{"name":"RouterServiceInterface","targets":["RouterServiceInterface"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"RouterService","name":"RouterService"},{"moduleName":"RouterServiceInterface","name":"RouterServiceInterface"}],"toolsVersion":"5.1"}},"summary":"1.0.0","version":"1.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"RouterService","products":[{"name":"RouterService","targets":["RouterService"],"type":{"library":["dynamic"]}},{"name":"RouterServiceInterface","targets":["RouterServiceInterface"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"RouterService","name":"RouterService"},{"moduleName":"RouterServiceInterface","name":"RouterServiceInterface"}],"toolsVersion":"5.0"}},"summary":"0.2.1","version":"0.2.1"}]},{"keywords":["dependency-injection","di-container","inversion-of-control","ioc-container","ios","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Swinject/Swinject/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Swinject/Swinject/master/README.md","summary":"Dependency injection framework for Swift with iOS/macOS/Linux","url":"https://github.com/Swinject/Swinject","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"Swinject","products":[{"name":"Swinject","targets":["Swinject"],"type":{"library":["automatic"]}},{"name":"Swinject-Dynamic","targets":["Swinject"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"Swinject","name":"Swinject"}],"toolsVersion":"5.0"}},"version":"2.8.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"Swinject","products":[{"name":"Swinject","targets":["Swinject"],"type":{"library":["automatic"]}},{"name":"Swinject-Dynamic","targets":["Swinject"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"Swinject","name":"Swinject"}],"toolsVersion":"5.0"}},"version":"2.8.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"Swinject","products":[{"name":"Swinject","targets":["Swinject"],"type":{"library":["automatic"]}},{"name":"Swinject-Dynamic","targets":["Swinject"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"Swinject","name":"Swinject"}],"toolsVersion":"5.0"}},"version":"2.8.1"}]},{"keywords":["ios","macos","swift","swiftui","tvos","watchos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/danielsaidi/DeckKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/danielsaidi/DeckKit/master/README.md","summary":"DeckKit makes it easy to create deck-based apps in SwiftUI.","url":"https://github.com/danielsaidi/DeckKit","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"DeckKit","products":[{"name":"DeckKit","targets":["DeckKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DeckKit","name":"DeckKit"}],"toolsVersion":"5.6"}},"summary":"0.5.0 (fastlane)","version":"0.5.0"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"DeckKit","products":[{"name":"DeckKit","targets":["DeckKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DeckKit","name":"DeckKit"}],"toolsVersion":"5.6"}},"summary":"0.4.0 (fastlane)","version":"0.4.0"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"DeckKit","products":[{"name":"DeckKit","targets":["DeckKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DeckKit","name":"DeckKit"}],"toolsVersion":"5.6"}},"summary":"0.3.0 (fastlane)","version":"0.3.0"}]},{"keywords":["swiftui","swiftui-components","swiftui-framework"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/exyte/ActivityIndicatorView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/exyte/ActivityIndicatorView/master/README.md","summary":"A number of preset loading indicators created with SwiftUI","url":"https://github.com/exyte/ActivityIndicatorView","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"tvos","version":"13.0"}],"packageName":"ActivityIndicatorView","products":[{"name":"ActivityIndicatorView","targets":["ActivityIndicatorView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ActivityIndicatorView","name":"ActivityIndicatorView"}],"toolsVersion":"5.1"}},"summary":"","version":"1.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"tvos","version":"13.0"}],"packageName":"ActivityIndicatorView","products":[{"name":"ActivityIndicatorView","targets":["ActivityIndicatorView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ActivityIndicatorView","name":"ActivityIndicatorView"}],"toolsVersion":"5.1"}},"summary":"","version":"1.0.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"tvos","version":"13.0"}],"packageName":"ActivityIndicatorView","products":[{"name":"ActivityIndicatorView","targets":["ActivityIndicatorView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ActivityIndicatorView","name":"ActivityIndicatorView"}],"toolsVersion":"5.1"}},"summary":"","version":"1.0.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"tvos","version":"13.0"}],"packageName":"ActivityIndicatorView","products":[{"name":"ActivityIndicatorView","targets":["ActivityIndicatorView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ActivityIndicatorView","name":"ActivityIndicatorView"}],"toolsVersion":"5.1"}},"summary":"","version":"0.0.7"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"tvos","version":"13.0"}],"packageName":"ActivityIndicatorView","products":[{"name":"ActivityIndicatorView","targets":["ActivityIndicatorView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ActivityIndicatorView","name":"ActivityIndicatorView"}],"toolsVersion":"5.1"}},"summary":"","version":"0.0.6"}]},{"keywords":["selected-segments","selection","uisegmentedcontrol"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/yonat/MultiSelectSegmentedControl/master/LICENSE.txt"},"readmeURL":"https://raw.githubusercontent.com/yonat/MultiSelectSegmentedControl/master/README.md","summary":"UISegmentedControl remake that supports selecting multiple segments, vertical stacking, combining text and images.","url":"https://github.com/yonat/MultiSelectSegmentedControl","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"MultiSelectSegmentedControl","products":[{"name":"MultiSelectSegmentedControl","targets":["MultiSelectSegmentedControl"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MultiSelectSegmentedControl","name":"MultiSelectSegmentedControl"}],"toolsVersion":"5.1"}},"version":"2.3.6"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"MultiSelectSegmentedControl","products":[{"name":"MultiSelectSegmentedControl","targets":["MultiSelectSegmentedControl"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MultiSelectSegmentedControl","name":"MultiSelectSegmentedControl"}],"toolsVersion":"5.1"}},"version":"2.3.5"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"MultiSelectSegmentedControl","products":[{"name":"MultiSelectSegmentedControl","targets":["MultiSelectSegmentedControl"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MultiSelectSegmentedControl","name":"MultiSelectSegmentedControl"}],"toolsVersion":"5.1"}},"version":"2.3.4"}]},{"keywords":["carthage","cocoa","cocoapods","ios","segmentedcontrol","swift","swift-3","swift-4","swift-package-manager","swift4","swift4-1","swift5","swift5-1","switch","ui","ui-element","uisegmentedcontrol","uiswitch"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/gmarm/BetterSegmentedControl/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/gmarm/BetterSegmentedControl/master/README.md","summary":"An easy to use, customizable replacement for UISegmentedControl & UISwitch.","url":"https://github.com/gmarm/BetterSegmentedControl","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"BetterSegmentedControl","products":[{"name":"BetterSegmentedControl","targets":["BetterSegmentedControl"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BetterSegmentedControl","name":"BetterSegmentedControl"}],"toolsVersion":"5.1"}},"summary":"","version":"2.0.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"BetterSegmentedControl","products":[{"name":"BetterSegmentedControl","targets":["BetterSegmentedControl"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BetterSegmentedControl","name":"BetterSegmentedControl"}],"toolsVersion":"5.1"}},"summary":"","version":"2.0.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"BetterSegmentedControl","products":[{"name":"BetterSegmentedControl","targets":["BetterSegmentedControl"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BetterSegmentedControl","name":"BetterSegmentedControl"}],"toolsVersion":"5.1"}},"summary":"","version":"1.3.0"}]},{"keywords":["carthage","codable","json","jsondecoder","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Pircate/CleanJSON/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Pircate/CleanJSON/master/README.md","summary":"Swift JSON decoder for Codable","url":"https://github.com/Pircate/CleanJSON","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"CleanJSON","products":[{"name":"CleanJSON","targets":["CleanJSON"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CleanJSON","name":"CleanJSON"}],"toolsVersion":"5.2"}},"summary":"1.0.9 (fastlane)","version":"1.0.9"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"CleanJSON","products":[{"name":"CleanJSON","targets":["CleanJSON"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CleanJSON","name":"CleanJSON"}],"toolsVersion":"5.2"}},"summary":"1.0.8 (fastlane)","version":"1.0.8"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"CleanJSON","products":[{"name":"CleanJSON","targets":["CleanJSON"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CleanJSON","name":"CleanJSON"}],"toolsVersion":"5.2"}},"summary":"1.0.7 (fastlane)","version":"1.0.7"}]},{"keywords":["alert","ios","notification","popover","popup","snackbar","swift","swiftui","uiwindow"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/aheze/Popovers/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/aheze/Popovers/main/README.md","summary":"A library to present popovers. Simple, modern, and highly customizable. Not boring!","url":"https://github.com/aheze/Popovers","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Popovers","products":[{"name":"Popovers","targets":["Popovers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Popovers","name":"Popovers"}],"toolsVersion":"5.5"}},"version":"1.3.2"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Popovers","products":[{"name":"Popovers","targets":["Popovers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Popovers","name":"Popovers"}],"toolsVersion":"5.5"}},"version":"1.3.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Popovers","products":[{"name":"Popovers","targets":["Popovers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Popovers","name":"Popovers"}],"toolsVersion":"5.5"}},"version":"1.3.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Popovers","products":[{"name":"Popovers","targets":["Popovers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Popovers","name":"Popovers"}],"toolsVersion":"5.5"}},"version":"0.0.5"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Popovers","products":[{"name":"Popovers","targets":["Popovers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Popovers","name":"Popovers"}],"toolsVersion":"5.5"}},"version":"0.0.4"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Popovers","products":[{"name":"Popovers","targets":["Popovers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Popovers","name":"Popovers"}],"toolsVersion":"5.5"}},"version":"0.0.3"}]},{"keywords":["carthage","cocoapods","macos","progress-circle","progress-indicator","progress-view","swift","swift-package"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/sindresorhus/CircularProgress/main/license"},"readmeURL":"https://raw.githubusercontent.com/sindresorhus/CircularProgress/main/readme.md","summary":"Circular progress indicator for your macOS app","url":"https://github.com/sindresorhus/CircularProgress","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"CircularProgress","products":[{"name":"CircularProgress","targets":["CircularProgress"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CircularProgress","name":"CircularProgress"}],"toolsVersion":"5.7"}},"summary":"v3.0.1","version":"v3.0.1"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"CircularProgress","products":[{"name":"CircularProgress","targets":["CircularProgress"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CircularProgress","name":"CircularProgress"}],"toolsVersion":"5.6"}},"summary":"v3.0.0","version":"v3.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"}],"packageName":"CircularProgress","products":[{"name":"CircularProgress","targets":["CircularProgress"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CircularProgress","name":"CircularProgress"}],"toolsVersion":"5.3"}},"summary":"v2.2.0","version":"v2.2.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"}],"packageName":"CircularProgress","products":[{"name":"CircularProgress","targets":["CircularProgress"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CircularProgress","name":"CircularProgress"}],"toolsVersion":"5.3"}},"summary":"v2.1.0","version":"v2.1.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"}],"packageName":"CircularProgress","products":[{"name":"CircularProgress","targets":["CircularProgress"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CircularProgress","name":"CircularProgress"}],"toolsVersion":"5.2"}},"summary":"v2.0.2","version":"v2.0.2"}]},{"keywords":["carthage","cocoapods","combine","ios","macos","nsuserdefaults","storage","swift-package","swift-package-manager","swiftui-components","swifty","userdefaults"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/sindresorhus/Defaults/main/license"},"readmeURL":"https://raw.githubusercontent.com/sindresorhus/Defaults/main/readme.md","summary":"💾 Swifty and modern UserDefaults","url":"https://github.com/sindresorhus/Defaults","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Defaults","products":[{"name":"Defaults","targets":["Defaults"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Defaults","name":"Defaults"}],"toolsVersion":"5.7"}},"summary":"v7.1.0","version":"v7.1.0"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Defaults","products":[{"name":"Defaults","targets":["Defaults"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Defaults","name":"Defaults"}],"toolsVersion":"5.7"}},"summary":"v7.0.0","version":"v7.0.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"Defaults","products":[{"name":"Defaults","targets":["Defaults"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Defaults","name":"Defaults"}],"toolsVersion":"5.5"}},"summary":"v6.3.0","version":"v6.3.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"Defaults","products":[{"name":"Defaults","targets":["Defaults"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Defaults","name":"Defaults"}],"toolsVersion":"5.5"}},"summary":"v6.2.1","version":"v6.2.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"Defaults","products":[{"name":"Defaults","targets":["Defaults"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Defaults","name":"Defaults"}],"toolsVersion":"5.5"}},"summary":"v6.2.0","version":"v6.2.0"}]},{"keywords":["macos","swift","swift-package"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/sindresorhus/LaunchAtLogin/main/license"},"readmeURL":"https://raw.githubusercontent.com/sindresorhus/LaunchAtLogin/main/readme.md","summary":"Add “Launch at Login” functionality to your macOS app in seconds","url":"https://github.com/sindresorhus/LaunchAtLogin","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"LaunchAtLogin","products":[{"name":"LaunchAtLogin","targets":["LaunchAtLogin"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LaunchAtLogin","name":"LaunchAtLogin"}],"toolsVersion":"5.7"}},"summary":"v5.0.0","version":"v5.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"}],"packageName":"LaunchAtLogin","products":[{"name":"LaunchAtLogin","targets":["LaunchAtLogin"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LaunchAtLogin","name":"LaunchAtLogin"}],"toolsVersion":"5.3"}},"summary":"v4.2.0","version":"v4.2.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"}],"packageName":"LaunchAtLogin","products":[{"name":"LaunchAtLogin","targets":["LaunchAtLogin"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LaunchAtLogin","name":"LaunchAtLogin"}],"toolsVersion":"5.3"}},"summary":"v4.1.0","version":"v4.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"}],"packageName":"LaunchAtLogin","products":[{"name":"LaunchAtLogin","targets":["LaunchAtLogin"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LaunchAtLogin","name":"LaunchAtLogin"}],"toolsVersion":"5.3"}},"summary":"v4.0.0","version":"v4.0.0"}]},{"keywords":["carthage","cocoapods","dock","icon","macos","progress-bar","progress-circle","swift","swift-package"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/sindresorhus/DockProgress/main/license"},"readmeURL":"https://raw.githubusercontent.com/sindresorhus/DockProgress/main/readme.md","summary":"Show progress in your app's Dock icon","url":"https://github.com/sindresorhus/DockProgress","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"DockProgress","products":[{"name":"DockProgress","targets":["DockProgress"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DockProgress","name":"DockProgress"}],"toolsVersion":"5.6"}},"summary":"v4.0.1","version":"v4.0.1"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"DockProgress","products":[{"name":"DockProgress","targets":["DockProgress"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DockProgress","name":"DockProgress"}],"toolsVersion":"5.6"}},"summary":"v4.0.0","version":"v4.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"}],"packageName":"DockProgress","products":[{"name":"DockProgress","targets":["DockProgress"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DockProgress","name":"DockProgress"}],"toolsVersion":"5.3"}},"summary":"v3.2.0","version":"v3.2.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"}],"packageName":"DockProgress","products":[{"name":"DockProgress","targets":["DockProgress"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DockProgress","name":"DockProgress"}],"toolsVersion":"5.2"}},"summary":"v3.1.0","version":"v3.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"}],"packageName":"DockProgress","products":[{"name":"DockProgress","targets":["DockProgress"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DockProgress","name":"DockProgress"}],"toolsVersion":"5.1"}},"summary":"v3.0.0","version":"v3.0.0"}]},{"keywords":["carthage","cocoapods","hotkey","keyboard-shortcuts","macos","swift-package","swift-package-manager","swiftui","swiftui-components"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/sindresorhus/KeyboardShortcuts/main/license"},"readmeURL":"https://raw.githubusercontent.com/sindresorhus/KeyboardShortcuts/main/readme.md","summary":"⌨️ Add user-customizable global keyboard shortcuts to your macOS app in minutes","url":"https://github.com/sindresorhus/KeyboardShortcuts","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"KeyboardShortcuts","products":[{"name":"KeyboardShortcuts","targets":["KeyboardShortcuts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeyboardShortcuts","name":"KeyboardShortcuts"}],"toolsVersion":"5.7"}},"summary":"v1.9.3","version":"v1.9.3"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"KeyboardShortcuts","products":[{"name":"KeyboardShortcuts","targets":["KeyboardShortcuts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeyboardShortcuts","name":"KeyboardShortcuts"}],"toolsVersion":"5.7"}},"summary":"v1.9.2","version":"v1.9.2"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"KeyboardShortcuts","products":[{"name":"KeyboardShortcuts","targets":["KeyboardShortcuts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeyboardShortcuts","name":"KeyboardShortcuts"}],"toolsVersion":"5.7"}},"summary":"v1.9.1","version":"v1.9.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"KeyboardShortcuts","products":[{"name":"KeyboardShortcuts","targets":["KeyboardShortcuts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeyboardShortcuts","name":"KeyboardShortcuts"}],"toolsVersion":"5.3"}},"summary":"v0.7.1","version":"v0.7.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"KeyboardShortcuts","products":[{"name":"KeyboardShortcuts","targets":["KeyboardShortcuts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeyboardShortcuts","name":"KeyboardShortcuts"}],"toolsVersion":"5.3"}},"summary":"v0.7.0","version":"v0.7.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"KeyboardShortcuts","products":[{"name":"KeyboardShortcuts","targets":["KeyboardShortcuts"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"KeyboardShortcuts","name":"KeyboardShortcuts"}],"toolsVersion":"5.3"}},"summary":"v0.6.1","version":"v0.6.1"}]},{"keywords":[],"readmeURL":"https://raw.githubusercontent.com/lorenzofiamingo/swiftui-async-button/main/README.md","summary":"AsyncButton is the simple way to run concurrent code in your views.","url":"https://github.com/lorenzofiamingo/swiftui-async-button","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"ios","version":"16.0"},{"name":"macos","version":"13.0"},{"name":"tvos","version":"16.0"},{"name":"watchos","version":"9.0"}],"packageName":"swiftui-async-button","products":[{"name":"AsyncButton","targets":["AsyncButton"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AsyncButton","name":"AsyncButton"}],"toolsVersion":"5.7"}},"version":"1.1.0"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"ios","version":"16.0"},{"name":"macos","version":"13.0"},{"name":"tvos","version":"16.0"},{"name":"watchos","version":"9.0"}],"packageName":"swiftui-async-button","products":[{"name":"AsyncButton","targets":["AsyncButton"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AsyncButton","name":"AsyncButton"}],"toolsVersion":"5.7"}},"version":"1.0.0"}]},{"keywords":["declarative-ui","grid","ios","swift","swift5","swiftui","swiftui-example"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Q-Mobile/QGrid/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Q-Mobile/QGrid/master/README.md","summary":"🎛 QGrid: The missing SwiftUI collection view.","url":"https://github.com/Q-Mobile/QGrid","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"QGrid","products":[{"name":"QGrid","targets":["QGrid"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"QGrid","name":"QGrid"}],"toolsVersion":"5.1"}},"summary":"","version":"0.1.4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"QGrid","products":[{"name":"QGrid","targets":["QGrid"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"QGrid","name":"QGrid"}],"toolsVersion":"5.1"}},"summary":"","version":"0.1.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"}],"packageName":"QGrid","products":[{"name":"QGrid","targets":["QGrid"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"QGrid","name":"QGrid"}],"toolsVersion":"5.1"}},"summary":"","version":"0.1.2"}]},{"keywords":["coredata","keypaths","nspredicate","predicates","swift","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ftchirou/PredicateKit/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/ftchirou/PredicateKit/main/README.md","summary":"🎯 PredicateKit allows Swift developers to write expressive and type-safe predicates for CoreData using key-paths, comparisons and logical operators, literal values, and functions.","url":"https://github.com/ftchirou/PredicateKit","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"5.0"}],"packageName":"PredicateKit","products":[{"name":"PredicateKit","targets":["PredicateKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PredicateKit","name":"PredicateKit"}],"toolsVersion":"5.3"}},"version":"1.5.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"5.0"}],"packageName":"PredicateKit","products":[{"name":"PredicateKit","targets":["PredicateKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PredicateKit","name":"PredicateKit"}],"toolsVersion":"5.3"}},"version":"1.4.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"5.0"}],"packageName":"PredicateKit","products":[{"name":"PredicateKit","targets":["PredicateKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PredicateKit","name":"PredicateKit"}],"toolsVersion":"5.3"}},"version":"1.3.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"5.0"}],"packageName":"PredicateKit","products":[{"name":"PredicateKit","targets":["PredicateKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PredicateKit","name":"PredicateKit"}],"toolsVersion":"5.3"}},"version":"0.1.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"PredicateKit","products":[{"name":"PredicateKit","targets":["PredicateKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PredicateKit","name":"PredicateKit"}],"toolsVersion":"5.3"}},"version":"0.1.0"}]},{"keywords":["combine-framework","reactive-programming","reactive-streams","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/CombineCommunity/CombineExt/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/CombineCommunity/CombineExt/main/README.md","summary":"CombineExt provides a collection of operators, publishers and utilities for Combine, that are not provided by Apple themselves, but are common in other Reactive Frameworks and standards.","url":"https://github.com/CombineCommunity/CombineExt","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"10.0"},{"name":"macos","version":"10.12"},{"name":"watchos","version":"3.0"}],"packageName":"CombineExt","products":[{"name":"CombineExt","targets":["CombineExt"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineExt","name":"CombineExt"}],"toolsVersion":"5.3"}},"version":"1.8.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"10.0"},{"name":"macos","version":"10.12"},{"name":"watchos","version":"3.0"}],"packageName":"CombineExt","products":[{"name":"CombineExt","targets":["CombineExt"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineExt","name":"CombineExt"}],"toolsVersion":"5.3"}},"version":"1.8.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"10.0"},{"name":"macos","version":"10.12"},{"name":"watchos","version":"3.0"}],"packageName":"CombineExt","products":[{"name":"CombineExt","targets":["CombineExt"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineExt","name":"CombineExt"}],"toolsVersion":"5.3"}},"version":"1.7.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/CombineCommunity/CombinePrintout/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/CombineCommunity/CombinePrintout/master/README.md","summary":"A Combine micro debugging package","url":"https://github.com/CombineCommunity/CombinePrintout","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"CombinePrintout","products":[{"name":"CombinePrintout","targets":["CombinePrintout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombinePrintout","name":"CombinePrintout"}],"toolsVersion":"5.1"}},"summary":"","version":"0.2.0"}]},{"keywords":["apple","combine","combine-framework","ios","reactive","reactive-programming","reactive-streams","swift","swiftui","test","tvos","unit-test","xctest"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/tcldr/Entwine/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/tcldr/Entwine/master/README.md","summary":"Testing tools and utilities for Apple's Combine framework.","url":"https://github.com/tcldr/Entwine","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Entwine","products":[{"name":"Entwine","targets":["Entwine"],"type":{"library":["automatic"]}},{"name":"EntwineTest","targets":["EntwineTest"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Entwine","name":"Entwine"},{"moduleName":"EntwineTest","name":"EntwineTest"}],"toolsVersion":"5.1"}},"version":"v0.9.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Entwine","products":[{"name":"Entwine","targets":["Entwine"],"type":{"library":["automatic"]}},{"name":"EntwineTest","targets":["EntwineTest"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Entwine","name":"Entwine"},{"moduleName":"EntwineTest","name":"EntwineTest"}],"toolsVersion":"5.1"}},"version":"v0.9.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"Entwine","products":[{"name":"Entwine","targets":["Entwine"],"type":{"library":["automatic"]}},{"name":"EntwineTest","targets":["EntwineTest"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Entwine","name":"Entwine"},{"moduleName":"EntwineTest","name":"EntwineTest"}],"toolsVersion":"5.1"}},"version":"v0.8.0"}]},{"keywords":["cocoapods","combine","ios","linux","macos","reactive-programming","swift","swift-package-manager","tvos","wasm","watchos","webassembly","windows"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/OpenCombine/OpenCombine/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/OpenCombine/OpenCombine/master/README.md","summary":"Open source implementation of Apple's Combine framework for processing values over time.","url":"https://github.com/OpenCombine/OpenCombine","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"packageName":"OpenCombine","products":[{"name":"OpenCombine","targets":["OpenCombine"],"type":{"library":["automatic"]}},{"name":"OpenCombineDispatch","targets":["OpenCombineDispatch"],"type":{"library":["automatic"]}},{"name":"OpenCombineFoundation","targets":["OpenCombineFoundation"],"type":{"library":["automatic"]}},{"name":"OpenCombineShim","targets":["OpenCombineShim"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"OpenCombine","name":"OpenCombine"},{"moduleName":"OpenCombineDispatch","name":"OpenCombineDispatch"},{"moduleName":"OpenCombineFoundation","name":"OpenCombineFoundation"},{"moduleName":"OpenCombineShim","name":"OpenCombineShim"}],"toolsVersion":"5.5"}},"version":"0.13.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"OpenCombine","products":[{"name":"OpenCombine","targets":["OpenCombine"],"type":{"library":["automatic"]}},{"name":"OpenCombineDispatch","targets":["OpenCombineDispatch"],"type":{"library":["automatic"]}},{"name":"OpenCombineFoundation","targets":["OpenCombineFoundation"],"type":{"library":["automatic"]}},{"name":"OpenCombineShim","targets":["OpenCombineShim"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"OpenCombine","name":"OpenCombine"},{"moduleName":"OpenCombineDispatch","name":"OpenCombineDispatch"},{"moduleName":"OpenCombineFoundation","name":"OpenCombineFoundation"},{"moduleName":"OpenCombineShim","name":"OpenCombineShim"}],"toolsVersion":"5.3"}},"version":"0.12.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"OpenCombine","products":[{"name":"OpenCombine","targets":["OpenCombine"],"type":{"library":["automatic"]}},{"name":"OpenCombineDispatch","targets":["OpenCombineDispatch"],"type":{"library":["automatic"]}},{"name":"OpenCombineFoundation","targets":["OpenCombineFoundation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"OpenCombine","name":"OpenCombine"},{"moduleName":"OpenCombineDispatch","name":"OpenCombineDispatch"},{"moduleName":"OpenCombineFoundation","name":"OpenCombineFoundation"}],"toolsVersion":"5.0"}},"version":"0.11.0"}]},{"keywords":["asynchronous","carthage","cloudkit","cloudkit-databases","cocoapods","combine","combine-framework","extensions","icloud","ios","ipados","mac-catalyst","macos","publisher","reactive","subscriber","swift","swift-package","tvos","watchos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/chris-araman/CombineCloudKit/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/chris-araman/CombineCloudKit/main/README.md","summary":"🌤 Swift Combine extensions for reactive CloudKit record processing","url":"https://github.com/chris-araman/CombineCloudKit","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"maccatalyst","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.4"}],"packageName":"CombineCloudKit","products":[{"name":"CombineCloudKit","targets":["CombineCloudKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineCloudKit","name":"CombineCloudKit"}],"toolsVersion":"5.5"}},"summary":"1.0.2: Remove Dependencies","version":"1.0.2"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"maccatalyst","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.4"}],"packageName":"CombineCloudKit","products":[{"name":"CombineCloudKit","targets":["CombineCloudKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineCloudKit","name":"CombineCloudKit"}],"toolsVersion":"5.5"}},"summary":"1.0.1","version":"1.0.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"maccatalyst","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.4"}],"packageName":"CombineCloudKit","products":[{"name":"CombineCloudKit","targets":["CombineCloudKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineCloudKit","name":"CombineCloudKit"}],"toolsVersion":"5.5"}},"summary":"1.0.0: Initial Release","version":"1.0.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"CombineCloudKit","products":[{"name":"CombineCloudKit","targets":["CombineCloudKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineCloudKit","name":"CombineCloudKit"}],"toolsVersion":"5.2"}},"summary":"0.5.1: Reliable Output","version":"0.5.1"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"CombineCloudKit","products":[{"name":"CombineCloudKit","targets":["CombineCloudKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineCloudKit","name":"CombineCloudKit"}],"toolsVersion":"5.2"}},"summary":"0.5.0: Code Coverage","version":"0.5.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"CombineCloudKit","products":[{"name":"CombineCloudKit","targets":["CombineCloudKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineCloudKit","name":"CombineCloudKit"}],"toolsVersion":"5.2"}},"summary":"0.4.1: Public Protocols","version":"0.4.1"}]},{"keywords":["hacktoberfest"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/CombineCommunity/CombineCocoa/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/CombineCommunity/CombineCocoa/main/README.md","summary":"Combine publisher bridges for UIKit","url":"https://github.com/CombineCommunity/CombineCocoa","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"CombineCocoa","products":[{"name":"CombineCocoa","targets":["CombineCocoa"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineCocoa","name":"CombineCocoa"}],"toolsVersion":"5.1"}},"version":"0.4.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"CombineCocoa","products":[{"name":"CombineCocoa","targets":["CombineCocoa"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineCocoa","name":"CombineCocoa"}],"toolsVersion":"5.1"}},"version":"0.4.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"CombineCocoa","products":[{"name":"CombineCocoa","targets":["CombineCocoa"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineCocoa","name":"CombineCocoa"}],"toolsVersion":"5.1"}},"version":"0.3.0"}]},{"keywords":["combine","coredata","swift","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Alexander-Ignition/CombineCoreData/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Alexander-Ignition/CombineCoreData/master/README.md","summary":"Combine + CoreData","url":"https://github.com/Alexander-Ignition/CombineCoreData","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"CombineCoreData","products":[{"name":"CombineCoreData","targets":["CombineCoreData"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineCoreData","name":"CombineCoreData"}],"toolsVersion":"5.2"}},"version":"0.0.3"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"CombineCoreData","products":[{"name":"CombineCoreData","targets":["CombineCoreData"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineCoreData","name":"CombineCoreData"}],"toolsVersion":"5.2"}},"version":"0.0.2"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"CoreDataCombine","products":[{"name":"CoreDataCombine","targets":["CoreDataCombine"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CoreDataCombine","name":"CoreDataCombine"}],"toolsVersion":"5.2"}},"version":"0.0.1"}]},{"keywords":["ios","macos","notification","popup","swift","swift-package","swift5","swiftui","toast","toast-notifications"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/sanzaru/SimpleToast/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/sanzaru/SimpleToast/master/README.md","summary":"SimpleToast is a simple, lightweight, flexible and easy to use library to show toasts / popup notifications inside iOS or MacOS applications in SwiftUI. Because of the flexibility to show any content it is also possible to use the library for showing simple modals.","url":"https://github.com/sanzaru/SimpleToast","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"}],"packageName":"SimpleToast","products":[{"name":"SimpleToast","targets":["SimpleToast"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SimpleToast","name":"SimpleToast"}],"toolsVersion":"5.2"}},"version":"0.6.2"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"}],"packageName":"SimpleToast","products":[{"name":"SimpleToast","targets":["SimpleToast"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SimpleToast","name":"SimpleToast"}],"toolsVersion":"5.2"}},"version":"0.6.1"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"}],"packageName":"SimpleToast","products":[{"name":"SimpleToast","targets":["SimpleToast"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SimpleToast","name":"SimpleToast"}],"toolsVersion":"5.2"}},"version":"0.6.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/jpsim/SourceKitten/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/jpsim/SourceKitten/main/README.md","summary":"An adorable little framework and command line tool for interacting with SourceKit.","url":"https://github.com/jpsim/SourceKitten","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"SourceKitten","products":[{"name":"SourceKittenFramework","targets":["SourceKittenFramework"],"type":{"library":["automatic"]}},{"name":"sourcekitten","targets":["sourcekitten"],"type":{"executable":null}}],"targets":[{"moduleName":"SourceKittenFramework","name":"SourceKittenFramework"},{"moduleName":"sourcekitten","name":"sourcekitten"}],"toolsVersion":"5.7"}},"summary":"0.34.0: bzlcat","version":"0.34.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"SourceKitten","products":[{"name":"SourceKittenFramework","targets":["SourceKittenFramework"],"type":{"library":["automatic"]}},{"name":"sourcekitten","targets":["sourcekitten"],"type":{"executable":null}}],"targets":[{"moduleName":"SourceKittenFramework","name":"SourceKittenFramework"},{"moduleName":"sourcekitten","name":"sourcekitten"}],"toolsVersion":"5.5"}},"summary":"0.33.1","version":"0.33.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"SourceKitten","products":[{"name":"SourceKittenFramework","targets":["SourceKittenFramework"],"type":{"library":["automatic"]}},{"name":"sourcekitten","targets":["sourcekitten"],"type":{"executable":null}}],"targets":[{"moduleName":"SourceKittenFramework","name":"SourceKittenFramework"},{"moduleName":"sourcekitten","name":"sourcekitten"}],"toolsVersion":"5.5"}},"summary":"0.33.0: Bastet","version":"0.33.0"}]},{"keywords":["coreimage","editor","gpu","hacktoberfest","image","instagram","photo","shader","uikit","vsco"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/FluidGroup/Brightroom/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/FluidGroup/Brightroom/main/README.md","summary":"📷 A composable image editor using Core Image and Metal.","url":"https://github.com/FluidGroup/Brightroom","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Brightroom","products":[{"name":"BrightroomEngine","targets":["BrightroomUI"],"type":{"library":["automatic"]}},{"name":"BrightroomUI","targets":["BrightroomUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BrightroomUI","name":"BrightroomUI"}],"toolsVersion":"5.3"}},"version":"2.8.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"Brightroom","products":[{"name":"BrightroomEngine","targets":["BrightroomUI"],"type":{"library":["automatic"]}},{"name":"BrightroomUI","targets":["BrightroomUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BrightroomUI","name":"BrightroomUI"}],"toolsVersion":"5.3"}},"version":"2.7.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"Brightroom","products":[{"name":"BrightroomEngine","targets":["BrightroomUI"],"type":{"library":["automatic"]}},{"name":"BrightroomUI","targets":["BrightroomUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BrightroomUI","name":"BrightroomUI"}],"toolsVersion":"5.3"}},"version":"2.6.2"}]},{"keywords":[],"license":{"name":"BSD-3-Clause","url":"https://raw.githubusercontent.com/BradLarson/GPUImage2/master/License.txt"},"readmeURL":"https://raw.githubusercontent.com/BradLarson/GPUImage2/master/README.md","summary":"GPUImage 2 is a BSD-licensed Swift framework for GPU-accelerated video and image processing.","url":"https://github.com/BradLarson/GPUImage2","versions":[{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"GPUImage","products":[{"name":"GPUImage","targets":["GPUImage"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"GPUImage","name":"GPUImage"}],"toolsVersion":"4.2"}},"version":"0.0.1"}]},{"keywords":["animation","carthage","ios","snackbar","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/zekunyan/TTGSnackbar/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/zekunyan/TTGSnackbar/master/README.md","summary":"TTGSnackbar shows simple message and action button on the bottom or top of the screen with multi kinds of animation, which is written in Swift3 and inspired by Snackbar in Android. It also support showing custom view, icon image or multi action button.","url":"https://github.com/zekunyan/TTGSnackbar","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"TTGSnackbar","products":[{"name":"TTGSnackbar","targets":["TTGSnackbar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TTGSnackbar","name":"TTGSnackbar"}],"toolsVersion":"5.0"}},"summary":"","version":"1.11.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"TTGSnackbar","products":[{"name":"TTGSnackbar","targets":["TTGSnackbar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TTGSnackbar","name":"TTGSnackbar"}],"toolsVersion":"5.0"}},"summary":"","version":"1.11.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"TTGSnackbar","products":[{"name":"TTGSnackbar","targets":["TTGSnackbar"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TTGSnackbar","name":"TTGSnackbar"}],"toolsVersion":"5.0"}},"summary":"","version":"1.10.7"}]},{"keywords":["appkit","cococa","macos","nstextview","swift","text-editor","texteditor","textkit","textview"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/krzyzanowskim/STTextView/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/krzyzanowskim/STTextView/main/README.md","summary":"TextView that draws text and handles user interactions with that text. NSTextView replacement.","url":"https://github.com/krzyzanowskim/STTextView","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"STTextView","products":[{"name":"STTextView","targets":["STTextView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"STTextView","name":"STTextView"}],"toolsVersion":"5.5"}},"summary":"0.2.0","version":"0.2.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"STTextView","products":[{"name":"STTextView","targets":["STTextView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"STTextView","name":"STTextView"}],"toolsVersion":"5.5"}},"summary":"0.1.2","version":"0.1.2"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"STTextView","products":[{"name":"STTextView","targets":["STTextView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"STTextView","name":"STTextView"}],"toolsVersion":"5.5"}},"summary":"0.1.1","version":"0.1.1"}]},{"keywords":["bluetooth","ios","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/steamclock/bluejay/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/steamclock/bluejay/master/README.md","summary":"A simple Swift framework for building reliable Bluetooth LE apps.","url":"https://github.com/steamclock/bluejay","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"Bluejay","products":[{"name":"Bluejay","targets":["Bluejay"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Bluejay","name":"Bluejay"}],"toolsVersion":"5.1"}},"summary":"","version":"v0.8.9"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"Bluejay","products":[{"name":"Bluejay","targets":["Bluejay"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Bluejay","name":"Bluejay"}],"toolsVersion":"5.1"}},"version":"v0.8.8"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"Bluejay","products":[{"name":"Bluejay","targets":["Bluejay"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Bluejay","name":"Bluejay"}],"toolsVersion":"5.1"}},"version":"v0.8.7"}]},{"keywords":[],"license":{"name":"Unlicense","url":"https://raw.githubusercontent.com/davdroman/TextBuilder/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/davdroman/TextBuilder/main/README.md","summary":"Like a SwiftUI ViewBuilder, but for Text","url":"https://github.com/davdroman/TextBuilder","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"TextBuilder","products":[{"name":"Benchmarks","targets":["Benchmarks"],"type":{"executable":null}},{"name":"TextBuilder","targets":["TextBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Benchmarks","name":"Benchmarks"},{"moduleName":"TextBuilder","name":"TextBuilder"}],"toolsVersion":"5.5"}},"version":"2.1.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"TextBuilder","products":[{"name":"Benchmarks","targets":["Benchmarks"],"type":{"executable":null}},{"name":"TextBuilder","targets":["TextBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Benchmarks","name":"Benchmarks"},{"moduleName":"TextBuilder","name":"TextBuilder"}],"toolsVersion":"5.5"}},"version":"2.1.0"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"TextBuilder","products":[{"name":"Benchmarks","targets":["Benchmarks"],"type":{"executable":null}},{"name":"TextBuilder","targets":["TextBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Benchmarks","name":"Benchmarks"},{"moduleName":"TextBuilder","name":"TextBuilder"}],"toolsVersion":"5.6"}},"version":"2.0.0"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"TextBuilder","products":[{"name":"TextBuilder","targets":["TextBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TextBuilder","name":"TextBuilder"}],"toolsVersion":"5.4"}},"version":"1.4.0"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"TextBuilder","products":[{"name":"TextBuilder","targets":["TextBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TextBuilder","name":"TextBuilder"}],"toolsVersion":"5.4"}},"version":"1.3.0"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"}],"packageName":"TextBuilder","products":[{"name":"TextBuilder","targets":["TextBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TextBuilder","name":"TextBuilder"}],"toolsVersion":"5.4"}},"version":"1.2.0"}]},{"keywords":["camera","coreimage","filter","graphics","image","metal","video","vr"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/yangKJ/Harbeth/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/yangKJ/Harbeth/master/README.md","summary":"Metal API for GPU accelerated Image and Video and Camera filter framework. Support macOS & iOS. 🎨 图像、视频、相机滤镜框架","url":"https://github.com/yangKJ/Harbeth","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.13"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"Harbeth","products":[{"name":"Harbeth","targets":["Harbeth"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Harbeth","name":"Harbeth"}],"toolsVersion":"5.3"}},"summary":"release 0.5.9","version":"0.5.9"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.13"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"Harbeth","products":[{"name":"Harbeth","targets":["Harbeth"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Harbeth","name":"Harbeth"}],"toolsVersion":"5.3"}},"summary":"release 0.5.8","version":"0.5.8"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.13"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"Harbeth","products":[{"name":"Harbeth","targets":["Harbeth"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Harbeth","name":"Harbeth"}],"toolsVersion":"5.3"}},"summary":"release 0.5.7","version":"0.5.7"}]},{"keywords":["docstrings","documentation","formatter","linter","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/dduan/DrString/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/dduan/DrString/main/README.md","summary":"DrString finds issues in your Swift docstrings and fixes them for you.","url":"https://github.com/dduan/DrString","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"DrString","products":[{"name":"DrStringCore","targets":["DrStringCore"],"type":{"library":["automatic"]}},{"name":"drstring-cli","targets":["DrStringCLI"],"type":{"executable":null}}],"targets":[{"moduleName":"DrStringCLI","name":"DrStringCLI"},{"moduleName":"DrStringCore","name":"DrStringCore"}],"toolsVersion":"5.5"}},"version":"0.5.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"DrString","products":[{"name":"DrStringCore","targets":["DrStringCore"],"type":{"library":["automatic"]}},{"name":"drstring-cli","targets":["DrStringCLI"],"type":{"executable":null}}],"targets":[{"moduleName":"DrStringCLI","name":"DrStringCLI"},{"moduleName":"DrStringCore","name":"DrStringCore"}],"toolsVersion":"5.3"}},"version":"v0.5.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"DrString","products":[{"name":"DrStringCore","targets":["DrStringCore"],"type":{"library":["automatic"]}},{"name":"drstring-cli","targets":["DrStringCLI"],"type":{"executable":null}}],"targets":[{"moduleName":"DrStringCLI","name":"DrStringCLI"},{"moduleName":"DrStringCore","name":"DrStringCore"}],"toolsVersion":"5.3"}},"version":"v0.5.0"}]},{"keywords":["calendar","camera","dialog","interface","ios","location","notification","permission","permissionkit","permissions","photo-gallery","reminder","request","scope","sparrow","sppermissions","ui","wizard","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/sparrowcode/PermissionsKit/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/sparrowcode/PermissionsKit/main/README.md","summary":"Universal API for request permission and get its statuses.","url":"https://github.com/sparrowcode/PermissionsKit","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"3.0"}],"packageName":"PermissionsKit","products":[{"name":"BluetoothPermission","targets":["BluetoothPermission"],"type":{"library":["automatic"]}},{"name":"CalendarPermission","targets":["CalendarPermission"],"type":{"library":["automatic"]}},{"name":"CameraPermission","targets":["CameraPermission"],"type":{"library":["automatic"]}},{"name":"ContactsPermission","targets":["ContactsPermission"],"type":{"library":["automatic"]}},{"name":"FaceIDPermission","targets":["FaceIDPermission"],"type":{"library":["automatic"]}},{"name":"HealthPermission","targets":["HealthPermission"],"type":{"library":["automatic"]}},{"name":"LocationAlwaysPermission","targets":["LocationAlwaysPermission"],"type":{"library":["automatic"]}},{"name":"LocationWhenInUsePermission","targets":["LocationWhenInUsePermission"],"type":{"library":["automatic"]}},{"name":"MediaLibraryPermission","targets":["MediaLibraryPermission"],"type":{"library":["automatic"]}},{"name":"MicrophonePermission","targets":["MicrophonePermission"],"type":{"library":["automatic"]}},{"name":"MotionPermission","targets":["MotionPermission"],"type":{"library":["automatic"]}},{"name":"NotificationPermission","targets":["NotificationPermission"],"type":{"library":["automatic"]}},{"name":"PhotoLibraryPermission","targets":["PhotoLibraryPermission"],"type":{"library":["automatic"]}},{"name":"RemindersPermission","targets":["RemindersPermission"],"type":{"library":["automatic"]}},{"name":"SiriPermission","targets":["SiriPermission"],"type":{"library":["automatic"]}},{"name":"SpeechRecognizerPermission","targets":["SpeechRecognizerPermission"],"type":{"library":["automatic"]}},{"name":"TrackingPermission","targets":["TrackingPermission"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BluetoothPermission","name":"BluetoothPermission"},{"moduleName":"CalendarPermission","name":"CalendarPermission"},{"moduleName":"CameraPermission","name":"CameraPermission"},{"moduleName":"ContactsPermission","name":"ContactsPermission"},{"moduleName":"FaceIDPermission","name":"FaceIDPermission"},{"moduleName":"HealthPermission","name":"HealthPermission"},{"moduleName":"LocationAlwaysPermission","name":"LocationAlwaysPermission"},{"moduleName":"LocationWhenInUsePermission","name":"LocationWhenInUsePermission"},{"moduleName":"MediaLibraryPermission","name":"MediaLibraryPermission"},{"moduleName":"MicrophonePermission","name":"MicrophonePermission"},{"moduleName":"MotionPermission","name":"MotionPermission"},{"moduleName":"NotificationPermission","name":"NotificationPermission"},{"moduleName":"PhotoLibraryPermission","name":"PhotoLibraryPermission"},{"moduleName":"RemindersPermission","name":"RemindersPermission"},{"moduleName":"SiriPermission","name":"SiriPermission"},{"moduleName":"SpeechRecognizerPermission","name":"SpeechRecognizerPermission"},{"moduleName":"TrackingPermission","name":"TrackingPermission"}],"toolsVersion":"5.3"}},"version":"9.0.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"3.0"}],"packageName":"PermissionsKit","products":[{"name":"BluetoothPermission","targets":["BluetoothPermission"],"type":{"library":["automatic"]}},{"name":"CalendarPermission","targets":["CalendarPermission"],"type":{"library":["automatic"]}},{"name":"CameraPermission","targets":["CameraPermission"],"type":{"library":["automatic"]}},{"name":"ContactsPermission","targets":["ContactsPermission"],"type":{"library":["automatic"]}},{"name":"FaceIDPermission","targets":["FaceIDPermission"],"type":{"library":["automatic"]}},{"name":"HealthPermission","targets":["HealthPermission"],"type":{"library":["automatic"]}},{"name":"LocationAlwaysPermission","targets":["LocationAlwaysPermission"],"type":{"library":["automatic"]}},{"name":"LocationWhenInUsePermission","targets":["LocationWhenInUsePermission"],"type":{"library":["automatic"]}},{"name":"MediaLibraryPermission","targets":["MediaLibraryPermission"],"type":{"library":["automatic"]}},{"name":"MicrophonePermission","targets":["MicrophonePermission"],"type":{"library":["automatic"]}},{"name":"MotionPermission","targets":["MotionPermission"],"type":{"library":["automatic"]}},{"name":"NotificationPermission","targets":["NotificationPermission"],"type":{"library":["automatic"]}},{"name":"PhotoLibraryPermission","targets":["PhotoLibraryPermission"],"type":{"library":["automatic"]}},{"name":"RemindersPermission","targets":["RemindersPermission"],"type":{"library":["automatic"]}},{"name":"SiriPermission","targets":["SiriPermission"],"type":{"library":["automatic"]}},{"name":"SpeechRecognizerPermission","targets":["SpeechRecognizerPermission"],"type":{"library":["automatic"]}},{"name":"TrackingPermission","targets":["TrackingPermission"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BluetoothPermission","name":"BluetoothPermission"},{"moduleName":"CalendarPermission","name":"CalendarPermission"},{"moduleName":"CameraPermission","name":"CameraPermission"},{"moduleName":"ContactsPermission","name":"ContactsPermission"},{"moduleName":"FaceIDPermission","name":"FaceIDPermission"},{"moduleName":"HealthPermission","name":"HealthPermission"},{"moduleName":"LocationAlwaysPermission","name":"LocationAlwaysPermission"},{"moduleName":"LocationWhenInUsePermission","name":"LocationWhenInUsePermission"},{"moduleName":"MediaLibraryPermission","name":"MediaLibraryPermission"},{"moduleName":"MicrophonePermission","name":"MicrophonePermission"},{"moduleName":"MotionPermission","name":"MotionPermission"},{"moduleName":"NotificationPermission","name":"NotificationPermission"},{"moduleName":"PhotoLibraryPermission","name":"PhotoLibraryPermission"},{"moduleName":"RemindersPermission","name":"RemindersPermission"},{"moduleName":"SiriPermission","name":"SiriPermission"},{"moduleName":"SpeechRecognizerPermission","name":"SpeechRecognizerPermission"},{"moduleName":"TrackingPermission","name":"TrackingPermission"}],"toolsVersion":"5.3"}},"version":"9.0.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"3.0"}],"packageName":"PermissionsKit","products":[{"name":"BluetoothPermission","targets":["BluetoothPermission"],"type":{"library":["automatic"]}},{"name":"CalendarPermission","targets":["CalendarPermission"],"type":{"library":["automatic"]}},{"name":"CameraPermission","targets":["CameraPermission"],"type":{"library":["automatic"]}},{"name":"ContactsPermission","targets":["ContactsPermission"],"type":{"library":["automatic"]}},{"name":"FaceIDPermission","targets":["FaceIDPermission"],"type":{"library":["automatic"]}},{"name":"HealthPermission","targets":["HealthPermission"],"type":{"library":["automatic"]}},{"name":"LocationAlwaysPermission","targets":["LocationAlwaysPermission"],"type":{"library":["automatic"]}},{"name":"LocationWhenInUsePermission","targets":["LocationWhenInUsePermission"],"type":{"library":["automatic"]}},{"name":"MediaLibraryPermission","targets":["MediaLibraryPermission"],"type":{"library":["automatic"]}},{"name":"MicrophonePermission","targets":["MicrophonePermission"],"type":{"library":["automatic"]}},{"name":"MotionPermission","targets":["MotionPermission"],"type":{"library":["automatic"]}},{"name":"NotificationPermission","targets":["NotificationPermission"],"type":{"library":["automatic"]}},{"name":"PhotoLibraryPermission","targets":["PhotoLibraryPermission"],"type":{"library":["automatic"]}},{"name":"RemindersPermission","targets":["RemindersPermission"],"type":{"library":["automatic"]}},{"name":"SiriPermission","targets":["SiriPermission"],"type":{"library":["automatic"]}},{"name":"SpeechRecognizerPermission","targets":["SpeechRecognizerPermission"],"type":{"library":["automatic"]}},{"name":"TrackingPermission","targets":["TrackingPermission"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BluetoothPermission","name":"BluetoothPermission"},{"moduleName":"CalendarPermission","name":"CalendarPermission"},{"moduleName":"CameraPermission","name":"CameraPermission"},{"moduleName":"ContactsPermission","name":"ContactsPermission"},{"moduleName":"FaceIDPermission","name":"FaceIDPermission"},{"moduleName":"HealthPermission","name":"HealthPermission"},{"moduleName":"LocationAlwaysPermission","name":"LocationAlwaysPermission"},{"moduleName":"LocationWhenInUsePermission","name":"LocationWhenInUsePermission"},{"moduleName":"MediaLibraryPermission","name":"MediaLibraryPermission"},{"moduleName":"MicrophonePermission","name":"MicrophonePermission"},{"moduleName":"MotionPermission","name":"MotionPermission"},{"moduleName":"NotificationPermission","name":"NotificationPermission"},{"moduleName":"PhotoLibraryPermission","name":"PhotoLibraryPermission"},{"moduleName":"RemindersPermission","name":"RemindersPermission"},{"moduleName":"SiriPermission","name":"SiriPermission"},{"moduleName":"SpeechRecognizerPermission","name":"SpeechRecognizerPermission"},{"moduleName":"TrackingPermission","name":"TrackingPermission"}],"toolsVersion":"5.3"}},"version":"9.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"3.0"}],"packageName":"PermissionsKit","products":[{"name":"BluetoothPermission","targets":["BluetoothPermission"],"type":{"library":["automatic"]}},{"name":"CalendarPermission","targets":["CalendarPermission"],"type":{"library":["automatic"]}},{"name":"CameraPermission","targets":["CameraPermission"],"type":{"library":["automatic"]}},{"name":"ContactsPermission","targets":["ContactsPermission"],"type":{"library":["automatic"]}},{"name":"FaceIDPermission","targets":["FaceIDPermission"],"type":{"library":["automatic"]}},{"name":"HealthPermission","targets":["HealthPermission"],"type":{"library":["automatic"]}},{"name":"LocationAlwaysPermission","targets":["LocationAlwaysPermission"],"type":{"library":["automatic"]}},{"name":"LocationWhenInUsePermission","targets":["LocationWhenInUsePermission"],"type":{"library":["automatic"]}},{"name":"MediaLibraryPermission","targets":["MediaLibraryPermission"],"type":{"library":["automatic"]}},{"name":"MicrophonePermission","targets":["MicrophonePermission"],"type":{"library":["automatic"]}},{"name":"MotionPermission","targets":["MotionPermission"],"type":{"library":["automatic"]}},{"name":"NotificationPermission","targets":["NotificationPermission"],"type":{"library":["automatic"]}},{"name":"PhotoLibraryPermission","targets":["PhotoLibraryPermission"],"type":{"library":["automatic"]}},{"name":"RemindersPermission","targets":["RemindersPermission"],"type":{"library":["automatic"]}},{"name":"SiriPermission","targets":["SiriPermission"],"type":{"library":["automatic"]}},{"name":"SpeechRecognizerPermission","targets":["SpeechRecognizerPermission"],"type":{"library":["automatic"]}},{"name":"TrackingPermission","targets":["TrackingPermission"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BluetoothPermission","name":"BluetoothPermission"},{"moduleName":"CalendarPermission","name":"CalendarPermission"},{"moduleName":"CameraPermission","name":"CameraPermission"},{"moduleName":"ContactsPermission","name":"ContactsPermission"},{"moduleName":"FaceIDPermission","name":"FaceIDPermission"},{"moduleName":"HealthPermission","name":"HealthPermission"},{"moduleName":"LocationAlwaysPermission","name":"LocationAlwaysPermission"},{"moduleName":"LocationWhenInUsePermission","name":"LocationWhenInUsePermission"},{"moduleName":"MediaLibraryPermission","name":"MediaLibraryPermission"},{"moduleName":"MicrophonePermission","name":"MicrophonePermission"},{"moduleName":"MotionPermission","name":"MotionPermission"},{"moduleName":"NotificationPermission","name":"NotificationPermission"},{"moduleName":"PhotoLibraryPermission","name":"PhotoLibraryPermission"},{"moduleName":"RemindersPermission","name":"RemindersPermission"},{"moduleName":"SiriPermission","name":"SiriPermission"},{"moduleName":"SpeechRecognizerPermission","name":"SpeechRecognizerPermission"},{"moduleName":"TrackingPermission","name":"TrackingPermission"}],"toolsVersion":"5.3"}},"version":"8.0.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"3.0"}],"packageName":"PermissionsKit","products":[{"name":"BluetoothPermission","targets":["BluetoothPermission"],"type":{"library":["automatic"]}},{"name":"CalendarPermission","targets":["CalendarPermission"],"type":{"library":["automatic"]}},{"name":"CameraPermission","targets":["CameraPermission"],"type":{"library":["automatic"]}},{"name":"ContactsPermission","targets":["ContactsPermission"],"type":{"library":["automatic"]}},{"name":"FaceIDPermission","targets":["FaceIDPermission"],"type":{"library":["automatic"]}},{"name":"HealthPermission","targets":["HealthPermission"],"type":{"library":["automatic"]}},{"name":"LocationAlwaysPermission","targets":["LocationAlwaysPermission"],"type":{"library":["automatic"]}},{"name":"LocationWhenInUsePermission","targets":["LocationWhenInUsePermission"],"type":{"library":["automatic"]}},{"name":"MediaLibraryPermission","targets":["MediaLibraryPermission"],"type":{"library":["automatic"]}},{"name":"MicrophonePermission","targets":["MicrophonePermission"],"type":{"library":["automatic"]}},{"name":"MotionPermission","targets":["MotionPermission"],"type":{"library":["automatic"]}},{"name":"NotificationPermission","targets":["NotificationPermission"],"type":{"library":["automatic"]}},{"name":"PhotoLibraryPermission","targets":["PhotoLibraryPermission"],"type":{"library":["automatic"]}},{"name":"RemindersPermission","targets":["RemindersPermission"],"type":{"library":["automatic"]}},{"name":"SiriPermission","targets":["SiriPermission"],"type":{"library":["automatic"]}},{"name":"SpeechRecognizerPermission","targets":["SpeechRecognizerPermission"],"type":{"library":["automatic"]}},{"name":"TrackingPermission","targets":["TrackingPermission"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BluetoothPermission","name":"BluetoothPermission"},{"moduleName":"CalendarPermission","name":"CalendarPermission"},{"moduleName":"CameraPermission","name":"CameraPermission"},{"moduleName":"ContactsPermission","name":"ContactsPermission"},{"moduleName":"FaceIDPermission","name":"FaceIDPermission"},{"moduleName":"HealthPermission","name":"HealthPermission"},{"moduleName":"LocationAlwaysPermission","name":"LocationAlwaysPermission"},{"moduleName":"LocationWhenInUsePermission","name":"LocationWhenInUsePermission"},{"moduleName":"MediaLibraryPermission","name":"MediaLibraryPermission"},{"moduleName":"MicrophonePermission","name":"MicrophonePermission"},{"moduleName":"MotionPermission","name":"MotionPermission"},{"moduleName":"NotificationPermission","name":"NotificationPermission"},{"moduleName":"PhotoLibraryPermission","name":"PhotoLibraryPermission"},{"moduleName":"RemindersPermission","name":"RemindersPermission"},{"moduleName":"SiriPermission","name":"SiriPermission"},{"moduleName":"SpeechRecognizerPermission","name":"SpeechRecognizerPermission"},{"moduleName":"TrackingPermission","name":"TrackingPermission"}],"toolsVersion":"5.3"}},"version":"8.0.0"}]},{"keywords":["swift"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/apple/swift-async-algorithms/main/LICENSE.txt"},"readmeURL":"https://raw.githubusercontent.com/apple/swift-async-algorithms/main/README.md","summary":"Async Algorithms for Swift","url":"https://github.com/apple/swift-async-algorithms","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"AsyncAlgorithms","products":[{"name":"AsyncAlgorithms","targets":["AsyncAlgorithms"],"type":{"library":["automatic"]}},{"name":"AsyncAlgorithms_XCTest","targets":["AsyncAlgorithms_XCTest"],"type":{"library":["automatic"]}},{"name":"AsyncSequenceValidation","targets":["AsyncSequenceValidation"],"type":{"library":["automatic"]}},{"name":"_CAsyncSequenceValidationSupport","targets":["AsyncSequenceValidation"],"type":{"library":["static"]}}],"targets":[{"moduleName":"AsyncAlgorithms","name":"AsyncAlgorithms"},{"moduleName":"AsyncAlgorithms_XCTest","name":"AsyncAlgorithms_XCTest"},{"moduleName":"AsyncSequenceValidation","name":"AsyncSequenceValidation"}],"toolsVersion":"5.6"}},"version":"0.0.4"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"AsyncAlgorithms","products":[{"name":"AsyncAlgorithms","targets":["AsyncAlgorithms"],"type":{"library":["automatic"]}},{"name":"AsyncAlgorithms_XCTest","targets":["AsyncAlgorithms_XCTest"],"type":{"library":["automatic"]}},{"name":"AsyncSequenceValidation","targets":["AsyncSequenceValidation"],"type":{"library":["automatic"]}},{"name":"_CAsyncSequenceValidationSupport","targets":["AsyncSequenceValidation"],"type":{"library":["static"]}}],"targets":[{"moduleName":"AsyncAlgorithms","name":"AsyncAlgorithms"},{"moduleName":"AsyncAlgorithms_XCTest","name":"AsyncAlgorithms_XCTest"},{"moduleName":"AsyncSequenceValidation","name":"AsyncSequenceValidation"}],"toolsVersion":"5.6"}},"version":"0.0.3"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"AsyncAlgorithms","products":[{"name":"AsyncAlgorithms","targets":["AsyncAlgorithms"],"type":{"library":["automatic"]}},{"name":"AsyncAlgorithms_XCTest","targets":["AsyncAlgorithms_XCTest"],"type":{"library":["automatic"]}},{"name":"AsyncSequenceValidation","targets":["AsyncSequenceValidation"],"type":{"library":["automatic"]}},{"name":"_CAsyncSequenceValidationSupport","targets":["AsyncSequenceValidation"],"type":{"library":["static"]}}],"targets":[{"moduleName":"AsyncAlgorithms","name":"AsyncAlgorithms"},{"moduleName":"AsyncAlgorithms_XCTest","name":"AsyncAlgorithms_XCTest"},{"moduleName":"AsyncSequenceValidation","name":"AsyncSequenceValidation"}],"toolsVersion":"5.6"}},"version":"0.0.2"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/duemunk/Async/master/LICENSE.txt"},"readmeURL":"https://raw.githubusercontent.com/duemunk/Async/master/README.md","summary":"Syntactic sugar in Swift for asynchronous dispatches in Grand Central Dispatch","url":"https://github.com/duemunk/Async","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"watchos","version":"3.0"},{"name":"tvos","version":"9.0"}],"packageName":"Async","products":[{"name":"Async","targets":["Async"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Async","name":"Async"}],"toolsVersion":"5.1"}},"version":"2.1.0"}]},{"keywords":["gradients","ios","loader","loading-animations","skeleton","skeleton-screen","slide-animation","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/gonzalonunez/Skeleton/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/gonzalonunez/Skeleton/master/README.md","summary":"💀 An easy way to create sliding CAGradientLayer animations! Works great for creating skeleton screens for loading content.","url":"https://github.com/gonzalonunez/Skeleton","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Skeleton","products":[{"name":"Skeleton","targets":["Skeleton"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Skeleton","name":"Skeleton"}],"toolsVersion":"5.3"}},"version":"0.5.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Skeleton","products":[{"name":"Skeleton","targets":["Skeleton"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Skeleton","name":"Skeleton"}],"toolsVersion":"5.3"}},"version":"0.5.0"}]},{"keywords":["cocoapods","download","ios","network","swift","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Danie1s/Tiercel/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Danie1s/Tiercel/master/README.md","summary":"简单易用、功能丰富的纯 Swift 下载框架","url":"https://github.com/Danie1s/Tiercel","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"Tiercel","products":[{"name":"Tiercel","targets":["Tiercel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tiercel","name":"Tiercel"}],"toolsVersion":"5.1"}},"summary":"","version":"3.2.5"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"Tiercel","products":[{"name":"Tiercel","targets":["Tiercel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tiercel","name":"Tiercel"}],"toolsVersion":"5.1"}},"summary":"","version":"3.2.4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"Tiercel","products":[{"name":"Tiercel","targets":["Tiercel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tiercel","name":"Tiercel"}],"toolsVersion":"5.1"}},"summary":"","version":"3.2.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"Tiercel","products":[{"name":"Tiercel","targets":["Tiercel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tiercel","name":"Tiercel"}],"toolsVersion":"5.1"}},"summary":"","version":"2.4.1"}]},{"keywords":["cifilter","objective-c","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/dagronf/CIFilterFactory/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/dagronf/CIFilterFactory/main/README.md","summary":"Swift and Objective-C generated classes for built-in CIFilter types. Type safe, auto-complete friendly and (mostly) documented.","url":"https://github.com/dagronf/CIFilterFactory","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"}],"packageName":"CIFilterFactory","products":[{"name":"CIFilterFactory","targets":["CIFilterFactory"],"type":{"library":["automatic"]}},{"name":"CIFilterFactory-shared","targets":["CIFilterFactory"],"type":{"library":["dynamic"]}},{"name":"CIFilterFactory-static","targets":["CIFilterFactory"],"type":{"library":["static"]}}],"targets":[{"moduleName":"CIFilterFactory","name":"CIFilterFactory"}],"toolsVersion":"5.3"}},"version":"16.2.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"}],"packageName":"CIFilterFactory","products":[{"name":"CIFilterFactory-Library","targets":["CIFilterFactory"],"type":{"library":["static"]}},{"name":"CIFilterFactory-Shared","targets":["CIFilterFactory"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"CIFilterFactory","name":"CIFilterFactory"}],"toolsVersion":"5.3"}},"version":"16.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"}],"packageName":"CIFilterFactory","products":[{"name":"CIFilterFactory-Library","targets":["CIFilterFactory"],"type":{"library":["static"]}},{"name":"CIFilterFactory-Shared","targets":["CIFilterFactory"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"CIFilterFactory","name":"CIFilterFactory"}],"toolsVersion":"5.3"}},"version":"16.0.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"}],"packageName":"CIFilterFactory","products":[{"name":"CIFilterFactory-Library","targets":["CIFilterFactory"],"type":{"library":["static"]}},{"name":"CIFilterFactory-Shared","targets":["CIFilterFactory"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"CIFilterFactory","name":"CIFilterFactory"}],"toolsVersion":"5.3"}},"version":"15.1.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"}],"packageName":"CIFilterFactory","products":[{"name":"CIFilterFactory-Library","targets":["CIFilterFactory"],"type":{"library":["static"]}},{"name":"CIFilterFactory-Shared","targets":["CIFilterFactory"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"CIFilterFactory","name":"CIFilterFactory"}],"toolsVersion":"5.3"}},"version":"15.1.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"},{"name":"ios","version":"9.0"}],"packageName":"CIFilterFactory","products":[{"name":"CIFilterFactory-Library","targets":["CIFilterFactory"],"type":{"library":["static"]}},{"name":"CIFilterFactory-Shared","targets":["CIFilterFactory"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"CIFilterFactory","name":"CIFilterFactory"}],"toolsVersion":"5.3"}},"summary":"","version":"15.1.2"}]},{"keywords":["ios","pages","swift","ui","uipageviewcontroller","viewpager"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/uias/Pageboy/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/uias/Pageboy/main/README.md","summary":"📖 A simple, highly informative page view controller","url":"https://github.com/uias/Pageboy","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"Pageboy","products":[{"name":"Pageboy","targets":["Pageboy"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pageboy","name":"Pageboy"}],"toolsVersion":"5.0"}},"version":"4.0.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"Pageboy","products":[{"name":"Pageboy","targets":["Pageboy"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pageboy","name":"Pageboy"}],"toolsVersion":"5.0"}},"version":"4.0.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"}],"packageName":"Pageboy","products":[{"name":"Pageboy","targets":["Pageboy"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pageboy","name":"Pageboy"}],"toolsVersion":"5.0"}},"version":"4.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"10.0"}],"packageName":"Pageboy","products":[{"name":"Pageboy","targets":["Pageboy"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pageboy","name":"Pageboy"}],"toolsVersion":"5.0"}},"version":"3.7.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"10.0"}],"packageName":"Pageboy","products":[{"name":"Pageboy","targets":["Pageboy"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pageboy","name":"Pageboy"}],"toolsVersion":"5.0"}},"version":"3.6.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"10.0"}],"packageName":"Pageboy","products":[{"name":"Pageboy","targets":["Pageboy"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pageboy","name":"Pageboy"}],"toolsVersion":"5.0"}},"version":"3.6.1"}]},{"keywords":["ios","pageview","swift","swiftui","uipagecontrol","uipageviewcontroller","watchos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/fredyshox/PageView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/fredyshox/PageView/master/README.md","summary":"SwiftUI view enabling navigation between pages of content, imitating the behaviour of UIPageViewController for iOS and watchOS","url":"https://github.com/fredyshox/PageView","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"watchos","version":"7.0"}],"packageName":"PageView","products":[{"name":"PageView","targets":["PageView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PageView","name":"PageView"}],"toolsVersion":"5.3"}},"version":"1.5.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"PageView","products":[{"name":"PageView","targets":["PageView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PageView","name":"PageView"}],"toolsVersion":"5.1"}},"version":"1.4.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"PageView","products":[{"name":"PageView","targets":["PageView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PageView","name":"PageView"}],"toolsVersion":"5.1"}},"version":"1.4.0"}]},{"keywords":[],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/yanagiba/swift-ast/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/yanagiba/swift-ast/master/README.md","summary":"A Swift AST parser and visitor that is written in Swift. ","url":"https://github.com/yanagiba/swift-ast","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"swift-ast","products":[{"name":"SwiftAST","targets":["Bocho","Source","Diagnostic","AST","Lexer","Parser","Sema"],"type":{"library":["automatic"]}},{"name":"SwiftAST+Tooling","targets":["Bocho","Source","Diagnostic","AST","Lexer","Parser","Sema","Tooling"],"type":{"library":["automatic"]}},{"name":"swift-ast","targets":["swift-ast"],"type":{"executable":null}}],"targets":[{"moduleName":"AST","name":"AST"},{"moduleName":"Bocho","name":"Bocho"},{"moduleName":"Diagnostic","name":"Diagnostic"},{"moduleName":"Lexer","name":"Lexer"},{"moduleName":"Parser","name":"Parser"},{"moduleName":"Sema","name":"Sema"},{"moduleName":"Source","name":"Source"},{"moduleName":"Tooling","name":"Tooling"},{"moduleName":"swift_ast","name":"swift-ast"}],"toolsVersion":"5.0"}},"version":"v0.19.9"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"swift-ast","products":[{"name":"SwiftAST","targets":["Bocho","Source","Diagnostic","AST","Lexer","Parser","Sema"],"type":{"library":["automatic"]}},{"name":"SwiftAST+Tooling","targets":["Bocho","Source","Diagnostic","AST","Lexer","Parser","Sema","Tooling"],"type":{"library":["automatic"]}},{"name":"swift-ast","targets":["swift-ast"],"type":{"executable":null}}],"targets":[{"moduleName":"AST","name":"AST"},{"moduleName":"Bocho","name":"Bocho"},{"moduleName":"Diagnostic","name":"Diagnostic"},{"moduleName":"Lexer","name":"Lexer"},{"moduleName":"Parser","name":"Parser"},{"moduleName":"Sema","name":"Sema"},{"moduleName":"Source","name":"Source"},{"moduleName":"Tooling","name":"Tooling"},{"moduleName":"swift_ast","name":"swift-ast"}],"toolsVersion":"5.0"}},"version":"v0.19.6"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"swift-ast","products":[{"name":"SwiftAST","targets":["Source","Diagnostic","AST","Lexer","Parser","Sema"],"type":{"library":["automatic"]}},{"name":"SwiftAST+Tooling","targets":["Source","Diagnostic","AST","Lexer","Parser","Sema","Tooling"],"type":{"library":["automatic"]}},{"name":"swift-ast","targets":["swift-ast"],"type":{"executable":null}}],"targets":[{"moduleName":"AST","name":"AST"},{"moduleName":"Diagnostic","name":"Diagnostic"},{"moduleName":"Lexer","name":"Lexer"},{"moduleName":"Parser","name":"Parser"},{"moduleName":"Sema","name":"Sema"},{"moduleName":"Source","name":"Source"},{"moduleName":"Tooling","name":"Tooling"},{"moduleName":"swift_ast","name":"swift-ast"}],"toolsVersion":"4.2"}},"version":"v0.18.10"}]},{"keywords":["pygments","swift","swiftsyntax","syntax-highlighter"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/NSHipster/SwiftSyntaxHighlighter/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/NSHipster/SwiftSyntaxHighlighter/main/README.md","summary":"A syntax highlighter for Swift code that uses SwiftSyntax to generate Pygments-compatible HTML.","url":"https://github.com/NSHipster/SwiftSyntaxHighlighter","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"SwiftSyntaxHighlighter","products":[{"name":"SwiftSyntaxHighlighter","targets":["SwiftSyntaxHighlighter"],"type":{"library":["automatic"]}},{"name":"swift-highlight","targets":["swift-highlight"],"type":{"executable":null}}],"targets":[{"moduleName":"SwiftSyntaxHighlighter","name":"SwiftSyntaxHighlighter"},{"moduleName":"swift_highlight","name":"swift-highlight"}],"toolsVersion":"5.3"}},"version":"1.2.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"SwiftSyntaxHighlighter","products":[{"name":"SwiftSyntaxHighlighter","targets":["SwiftSyntaxHighlighter"],"type":{"library":["automatic"]}},{"name":"swift-highlight","targets":["swift-highlight"],"type":{"executable":null}}],"targets":[{"moduleName":"SwiftSyntaxHighlighter","name":"SwiftSyntaxHighlighter"},{"moduleName":"swift_highlight","name":"swift-highlight"}],"toolsVersion":"5.3"}},"version":"1.2.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"}],"packageName":"SwiftSyntaxHighlighter","products":[{"name":"SwiftSyntaxHighlighter","targets":["SwiftSyntaxHighlighter"],"type":{"library":["automatic"]}},{"name":"swift-highlight","targets":["swift-highlight"],"type":{"executable":null}}],"targets":[{"moduleName":"SwiftSyntaxHighlighter","name":"SwiftSyntaxHighlighter"},{"moduleName":"swift_highlight","name":"swift-highlight"}],"toolsVersion":"5.3"}},"version":"1.2.2"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"SwiftSyntaxHighlighter","products":[{"name":"swift-syntax-highlight","targets":["swift-syntax-highlight"],"type":{"executable":null}}],"targets":[{"moduleName":"swift_syntax_highlight","name":"swift-syntax-highlight"}],"toolsVersion":"4.2"}},"version":"0.1.0"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"SwiftSyntaxHighlighter","products":[{"name":"swift-syntax-highlight","targets":["swift-syntax-highlight"],"type":{"executable":null}}],"targets":[{"moduleName":"swift_syntax_highlight","name":"swift-syntax-highlight"}],"toolsVersion":"4.2"}},"version":"0.0.2"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"SwiftSyntaxHighlighter","products":[{"name":"Highlight","targets":["Highlight"],"type":{"executable":null}}],"targets":[{"moduleName":"Highlight","name":"Highlight"}],"toolsVersion":"4.2"}},"version":"0.0.1"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/RxSwiftCommunity/RxFileMonitor/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/RxSwiftCommunity/RxFileMonitor/master/README.md","summary":"RxSwift wrapper around CoreFoundation file events (FSEvent*)","url":"https://github.com/RxSwiftCommunity/RxFileMonitor","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"RxFileMonitor","products":[{"name":"RxFileMonitor","targets":["RxFileMonitor"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxFileMonitor","name":"RxFileMonitor"}],"toolsVersion":"5.0"}},"version":"4.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"}],"packageName":"RxFileMonitor","products":[{"name":"RxFileMonitor","targets":["RxFileMonitor"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxFileMonitor","name":"RxFileMonitor"}],"toolsVersion":"5.0"}},"version":"3.0.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Coeur/CollectionViewCenteredFlowLayout/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Coeur/CollectionViewCenteredFlowLayout/main/README.md","summary":"A layout for UICollectionView that aligns the cells to the center.","url":"https://github.com/Coeur/CollectionViewCenteredFlowLayout","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"CollectionViewCenteredFlowLayout","products":[{"name":"CollectionViewCenteredFlowLayout","targets":["CollectionViewCenteredFlowLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CollectionViewCenteredFlowLayout","name":"CollectionViewCenteredFlowLayout"}],"toolsVersion":"5.0"}},"summary":"","version":"1.0.4"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"CollectionViewCenteredFlowLayout","products":[{"name":"CollectionViewCenteredFlowLayout","targets":["CollectionViewCenteredFlowLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CollectionViewCenteredFlowLayout","name":"CollectionViewCenteredFlowLayout"}],"toolsVersion":"5.0"}},"summary":"","version":"1.0.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"CollectionViewCenteredFlowLayout","products":[{"name":"CollectionViewCenteredFlowLayout","targets":["CollectionViewCenteredFlowLayout"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CollectionViewCenteredFlowLayout","name":"CollectionViewCenteredFlowLayout"}],"toolsVersion":"5.0"}},"version":"1.0.2"}]},{"keywords":["algorithm","changeset","collectionview","diff","difference","diffing","paul-heckel-algorithm","tableview"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/ra1028/DifferenceKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ra1028/DifferenceKit/master/README.md","summary":"💻 A fast and flexible O(n) difference algorithm framework for Swift collection.","url":"https://github.com/ra1028/DifferenceKit","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"DifferenceKit","products":[{"name":"DifferenceKit","targets":["DifferenceKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DifferenceKit","name":"DifferenceKit"}],"toolsVersion":"5.0"}},"version":"1.3.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"DifferenceKit","products":[{"name":"DifferenceKit","targets":["DifferenceKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DifferenceKit","name":"DifferenceKit"}],"toolsVersion":"5.0"}},"summary":"1.2.0","version":"1.2.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"DifferenceKit","products":[{"name":"DifferenceKit","targets":["DifferenceKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DifferenceKit","name":"DifferenceKit"}],"toolsVersion":"5.0"}},"summary":"1.1.5","version":"1.1.5"}]},{"keywords":["apple-diffable-api","diff","diffable","diffable-api","diffabledatasource","ios14","side-bar","side-bar-ios14","sidebar","split-controller-side-bar","splitcontroller","swift","uicollectionview","uicollectionviewdiffabledatasource","uitableview","uitableviewdiffabledatasource","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/sparrowcode/DiffableKit/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/sparrowcode/DiffableKit/main/Readme.md","summary":"Extension of Diffable API which allow not duplicate code and use less models. Included example for SideBar.","url":"https://github.com/sparrowcode/DiffableKit","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"SPDiffable","products":[{"name":"SPDiffable","targets":["SPDiffable"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SPDiffable","name":"SPDiffable"}],"toolsVersion":"5.3"}},"version":"4.2.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"SPDiffable","products":[{"name":"SPDiffable","targets":["SPDiffable"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SPDiffable","name":"SPDiffable"}],"toolsVersion":"5.3"}},"version":"4.1.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"SPDiffable","products":[{"name":"SPDiffable","targets":["SPDiffable"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SPDiffable","name":"SPDiffable"}],"toolsVersion":"5.3"}},"version":"4.1.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"SPDiffable","products":[{"name":"SPDiffable","targets":["SPDiffable"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SPDiffable","name":"SPDiffable"}],"toolsVersion":"5.3"}},"version":"3.0.0"}]},{"keywords":["algorithm","collectionview","datasource","diff","diffable","diffing","tableview","wwdc19"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/ra1028/DiffableDataSources/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ra1028/DiffableDataSources/master/README.md","summary":"💾 A library for backporting UITableView/UICollectionViewDiffableDataSource.","url":"https://github.com/ra1028/DiffableDataSources","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.11"},{"name":"tvos","version":"9.0"}],"packageName":"DiffableDataSources","products":[{"name":"DiffableDataSources","targets":["DiffableDataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DiffableDataSources","name":"DiffableDataSources"}],"toolsVersion":"5.0"}},"summary":"0.5.0","version":"0.5.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.11"},{"name":"tvos","version":"9.0"}],"packageName":"DiffableDataSources","products":[{"name":"DiffableDataSources","targets":["DiffableDataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DiffableDataSources","name":"DiffableDataSources"}],"toolsVersion":"5.0"}},"summary":"0.4.0","version":"0.4.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.11"},{"name":"tvos","version":"9.0"}],"packageName":"DiffableDataSources","products":[{"name":"DiffableDataSources","targets":["DiffableDataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DiffableDataSources","name":"DiffableDataSources"}],"toolsVersion":"5.0"}},"summary":"0.3.0","version":"0.3.0"}]},{"keywords":["ios","radio-buttons","settings","swift","switch-control","tableview"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/bcylin/QuickTableViewController/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/bcylin/QuickTableViewController/develop/README.md","summary":"A simple way to create a UITableView for settings in Swift.","url":"https://github.com/bcylin/QuickTableViewController","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"QuickTableViewController","products":[{"name":"QuickTableViewController","targets":["QuickTableViewController"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"QuickTableViewController","name":"QuickTableViewController"}],"toolsVersion":"5.1"}},"summary":"Merge branch 'release/1.3.1'","version":"v1.3.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"}],"packageName":"QuickTableViewController","products":[{"name":"QuickTableViewController","targets":["QuickTableViewController"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"QuickTableViewController","name":"QuickTableViewController"}],"toolsVersion":"5.1"}},"summary":"Merge branch 'release/1.3.0'","version":"v1.3.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"}],"packageName":"QuickTableViewController","products":[{"name":"QuickTableViewController","targets":["QuickTableViewController"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"QuickTableViewController","name":"QuickTableViewController"}],"toolsVersion":"5.1"}},"summary":"Merge branch 'hotfix/1.2.4'","version":"v1.2.4"}]},{"keywords":["carousel","carthage","center","cocoapods","ios","spm","swift","tvos","uicollectionview","uicollectionviewflowlayout","uicollectionviewlayout"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/BenEmdon/CenteredCollectionView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/BenEmdon/CenteredCollectionView/master/README.md","summary":"A lightweight UICollectionViewLayout that 'pages' and centers its cells 🎡 written in Swift","url":"https://github.com/BenEmdon/CenteredCollectionView","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"CenteredCollectionView","products":[{"name":"CenteredCollectionView","targets":["CenteredCollectionView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CenteredCollectionView","name":"CenteredCollectionView"}],"toolsVersion":"5.0"}},"version":"2.2.2"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/cxa/MenuItemKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/cxa/MenuItemKit/master/README.md","summary":"UIMenuItem with image and closure(block) action","url":"https://github.com/cxa/MenuItemKit","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"MenuItemKit","products":[{"name":"MenuItemKit","targets":["MenuItemKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MenuItemKit","name":"MenuItemKit"}],"toolsVersion":"5.1"}},"version":"4.0.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"MenuItemKit","products":[{"name":"MenuItemKit","targets":["MenuItemKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MenuItemKit","name":"MenuItemKit"}],"toolsVersion":"5.1"}},"version":"4.0.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"MenuItemKit","products":[{"name":"MenuItemKit","targets":["MenuItemKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MenuItemKit","name":"MenuItemKit"}],"toolsVersion":"5.1"}},"version":"3.2.2"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/schmidyy/Loaf/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/schmidyy/Loaf/master/README.md","summary":"🍞 A Swifty Framework for Easy iOS Toasts ","url":"https://github.com/schmidyy/Loaf","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Loaf","products":[{"name":"Loaf","targets":["Loaf"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Loaf","name":"Loaf"}],"toolsVersion":"5.1"}},"version":"0.7.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Loaf","products":[{"name":"Loaf","targets":["Loaf"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Loaf","name":"Loaf"}],"toolsVersion":"5.1"}},"version":"v0.6.0"}]},{"keywords":["app-store","apple-music","parallax","scrollview","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/nerdsupremacist/FancyScrollView/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/nerdsupremacist/FancyScrollView/develop/README.md","summary":"A SwiftUI ScrollView Designed to imitate the App Store and Apple Music ScrollViews (with or without a Parallax Header)","url":"https://github.com/nerdsupremacist/FancyScrollView","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FancyScrollView","products":[{"name":"FancyScrollView","targets":["FancyScrollView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FancyScrollView","name":"FancyScrollView"}],"toolsVersion":"5.1"}},"version":"0.1.4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FancyScrollView","products":[{"name":"FancyScrollView","targets":["FancyScrollView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FancyScrollView","name":"FancyScrollView"}],"toolsVersion":"5.1"}},"version":"0.1.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"FancyScrollView","products":[{"name":"FancyScrollView","targets":["FancyScrollView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FancyScrollView","name":"FancyScrollView"}],"toolsVersion":"5.1"}},"version":"0.1.2"}]},{"keywords":["colorpicker","joystick","sliders","swift","swift-package-manager","swiftui","ui","ui-components"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/kieranb662/Sliders-SwiftUI/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/kieranb662/Sliders-SwiftUI/master/README.md","summary":"Collection of unique fully customizable SwiftUI sliders, joysticks, trackpads and more!","url":"https://github.com/kieranb662/Sliders-SwiftUI","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"Sliders","products":[{"name":"Sliders","targets":["Sliders"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sliders","name":"Sliders"}],"toolsVersion":"5.2"}},"version":"1.0.11"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"Sliders","products":[{"name":"Sliders","targets":["Sliders"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sliders","name":"Sliders"}],"toolsVersion":"5.2"}},"version":"1.0.10"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"Sliders","products":[{"name":"Sliders","targets":["Sliders"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sliders","name":"Sliders"}],"toolsVersion":"5.2"}},"version":"1.0.9"}]},{"keywords":["collision-detection","geometry","swift-package-manager","swift5","vector"],"readmeURL":"https://raw.githubusercontent.com/kieranb662/CGExtender/master/README.md","summary":"Frequently reused helpers and functions for coregraphics types","url":"https://github.com/kieranb662/CGExtender","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"CGExtender","products":[{"name":"CGExtender","targets":["CGExtender"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CGExtender","name":"CGExtender"}],"toolsVersion":"5.1"}},"version":"1.0.4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"CGExtender","products":[{"name":"CGExtender","targets":["CGExtender"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CGExtender","name":"CGExtender"}],"toolsVersion":"5.1"}},"version":"1.0.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"CGExtender","products":[{"name":"CGExtender","targets":["CGExtender"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CGExtender","name":"CGExtender"}],"toolsVersion":"5.1"}},"version":"1.0.2"}]},{"keywords":["animation","carthage","facebook","facebook-animation","gradients","hacktoberfest","ios","ios-animation","ios-uiview","loading","loading-animation","loading-animations","placeholder","redacted","shimmer","skeleton","swift","swift-package-manager","uicollectionview","uitableview"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Juanpe/SkeletonView/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Juanpe/SkeletonView/main/README.md","summary":"☠️ An elegant way to show users that something is happening and also prepare them to which contents they are awaiting","url":"https://github.com/Juanpe/SkeletonView","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"SkeletonView","products":[{"name":"SkeletonView","targets":["SkeletonView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SkeletonView","name":"SkeletonView"}],"toolsVersion":"5.3"}},"version":"1.30.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"SkeletonView","products":[{"name":"SkeletonView","targets":["SkeletonView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SkeletonView","name":"SkeletonView"}],"toolsVersion":"5.3"}},"version":"1.30.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"SkeletonView","products":[{"name":"SkeletonView","targets":["SkeletonView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SkeletonView","name":"SkeletonView"}],"toolsVersion":"5.3"}},"version":"1.30.2"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ashleymills/Reachability.swift/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ashleymills/Reachability.swift/master/README.md","summary":"Replacement for Apple's Reachability re-written in Swift with closures","url":"https://github.com/ashleymills/Reachability.swift","versions":[{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"Reachability","products":[{"name":"Reachability","targets":["Reachability"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Reachability","name":"Reachability"}],"toolsVersion":"4.0"}},"version":"v5.1.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"Reachability","products":[{"name":"Reachability","targets":["Reachability"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Reachability","name":"Reachability"}],"toolsVersion":"4.0"}},"version":"v5.0.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"Reachability","products":[{"name":"Reachability","targets":["Reachability"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Reachability","name":"Reachability"}],"toolsVersion":"4.0"}},"version":"v5.0.0-beta1"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"Reachability","products":[{"name":"Reachability","targets":["Reachability"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Reachability","name":"Reachability"}],"toolsVersion":"4.0"}},"version":"v4.3.1"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"Reachability","products":[{"name":"Reachability","targets":["Reachability"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Reachability","name":"Reachability"}],"toolsVersion":"4.0"}},"version":"v4.3.0"}]},{"keywords":["best-practices","runtime-typechecking","swift","swift5","swiftui","swiftui-views","unit-testing"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/nalexn/ViewInspector/0.9.6/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/nalexn/ViewInspector/0.9.6/README.md","summary":"Runtime introspection and unit testing of SwiftUI views","url":"https://github.com/nalexn/ViewInspector","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.0"}],"packageName":"ViewInspector","products":[{"name":"ViewInspector","targets":["ViewInspector"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ViewInspector","name":"ViewInspector"}],"toolsVersion":"5.7"}},"version":"0.9.5"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.0"}],"packageName":"ViewInspector","products":[{"name":"ViewInspector","targets":["ViewInspector"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ViewInspector","name":"ViewInspector"}],"toolsVersion":"5.7"}},"version":"0.9.4"},{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.0"}],"packageName":"ViewInspector","products":[{"name":"ViewInspector","targets":["ViewInspector"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ViewInspector","name":"ViewInspector"}],"toolsVersion":"5.7"}},"version":"0.9.3"}]},{"keywords":["audio","audiokit","ios","macos","midi","music","playground","swift","swift-playgrounds","tvos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/AudioKit/AudioKit/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/AudioKit/AudioKit/main/README.md","summary":"Swift audio synthesis, processing, & analysis platform for iOS, macOS and tvOS","url":"https://github.com/AudioKit/AudioKit","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"11.0"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"}],"packageName":"AudioKit","products":[{"name":"AudioKit","targets":["AudioKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AudioKit","name":"AudioKit"}],"toolsVersion":"5.5"}},"summary":"","version":"5.5.8"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"11.0"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"}],"packageName":"AudioKit","products":[{"name":"AudioKit","targets":["AudioKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AudioKit","name":"AudioKit"}],"toolsVersion":"5.5"}},"summary":"","version":"5.5.7"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"}],"packageName":"AudioKit","products":[{"name":"AudioKit","targets":["AudioKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AudioKit","name":"AudioKit"}],"toolsVersion":"5.5"}},"summary":"","version":"5.5.6"}]},{"keywords":["appletv","ios","ios-animation","ios-ui","marquee","objective-c","swift","uilabel"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/cbpowell/MarqueeLabel/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/cbpowell/MarqueeLabel/master/README.mdown","summary":"A drop-in replacement for UILabel, which automatically adds a scrolling marquee effect when the label's text does not fit inside the specified frame","url":"https://github.com/cbpowell/MarqueeLabel","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"MarqueeLabel","products":[{"name":"MarqueeLabel","targets":["MarqueeLabel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MarqueeLabel","name":"MarqueeLabel"}],"toolsVersion":"5.0"}},"version":"4.3.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"MarqueeLabel","products":[{"name":"MarqueeLabel","targets":["MarqueeLabel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MarqueeLabel","name":"MarqueeLabel"}],"toolsVersion":"5.0"}},"version":"4.2.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"MarqueeLabel","products":[{"name":"MarqueeLabel","targets":["MarqueeLabel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MarqueeLabel","name":"MarqueeLabel"}],"toolsVersion":"5.0"}},"version":"4.2.0"}]},{"keywords":["cache","gif","image","progressive","swift","webp"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/kean/Nuke/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/kean/Nuke/master/README.md","summary":"Image loading system","url":"https://github.com/kean/Nuke","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"watchos","version":"6.0"}],"packageName":"Nuke","products":[{"name":"Nuke","targets":["Nuke"],"type":{"library":["automatic"]}},{"name":"NukeExtensions","targets":["NukeExtensions"],"type":{"library":["automatic"]}},{"name":"NukeUI","targets":["NukeUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Nuke","name":"Nuke"},{"moduleName":"NukeExtensions","name":"NukeExtensions"},{"moduleName":"NukeUI","name":"NukeUI"}],"toolsVersion":"5.6"}},"version":"11.5.3"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"watchos","version":"6.0"}],"packageName":"Nuke","products":[{"name":"Nuke","targets":["Nuke"],"type":{"library":["automatic"]}},{"name":"NukeExtensions","targets":["NukeExtensions"],"type":{"library":["automatic"]}},{"name":"NukeUI","targets":["NukeUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Nuke","name":"Nuke"},{"moduleName":"NukeExtensions","name":"NukeExtensions"},{"moduleName":"NukeUI","name":"NukeUI"}],"toolsVersion":"5.6"}},"version":"11.5.1"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"watchos","version":"6.0"}],"packageName":"Nuke","products":[{"name":"Nuke","targets":["Nuke"],"type":{"library":["automatic"]}},{"name":"NukeExtensions","targets":["NukeExtensions"],"type":{"library":["automatic"]}},{"name":"NukeUI","targets":["NukeUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Nuke","name":"Nuke"},{"moduleName":"NukeExtensions","name":"NukeExtensions"},{"moduleName":"NukeUI","name":"NukeUI"}],"toolsVersion":"5.6"}},"version":"11.5.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"}],"packageName":"Nuke","products":[{"name":"Nuke","targets":["Nuke"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Nuke","name":"Nuke"}],"toolsVersion":"5.2"}},"version":"10.11.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"},{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"Nuke","products":[{"name":"Nuke","targets":["Nuke"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Nuke","name":"Nuke"}],"toolsVersion":"5.3"}},"version":"10.11.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"},{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"},{"name":"watchos","version":"5.0"}],"packageName":"Nuke","products":[{"name":"Nuke","targets":["Nuke"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Nuke","name":"Nuke"}],"toolsVersion":"5.3"}},"summary":"10.11.0","version":"10.11.0"}]},{"keywords":["browser","gesture","image","ios","photo","photo-browser","previewer","swift","transition-animation"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/fcbox/Lantern/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/fcbox/Lantern/master/README.md","summary":"基于Swift的高可用视图框架","url":"https://github.com/fcbox/Lantern","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"Lantern","products":[{"name":"Lantern","targets":["Lantern"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Lantern","name":"Lantern"}],"toolsVersion":"5.0"}},"version":"1.1.4"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"Lantern","products":[{"name":"Lantern","targets":["Lantern"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Lantern","name":"Lantern"}],"toolsVersion":"5.0"}},"version":"1.1.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"Lantern","products":[{"name":"Lantern","targets":["Lantern"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Lantern","name":"Lantern"}],"toolsVersion":"5.0"}},"summary":"","version":"1.1.1"}]},{"keywords":["declarative-ui","ui","uicollectionview","uikit"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/lkzhao/UIComponent/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/lkzhao/UIComponent/master/README.md","summary":"Write UI in crazy speed, with great perf & no limitations.","url":"https://github.com/lkzhao/UIComponent","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"UIComponent","products":[{"name":"UIComponent","targets":["UIComponent"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIComponent","name":"UIComponent"}],"toolsVersion":"5.1"}},"version":"1.2.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"UIComponent","products":[{"name":"UIComponent","targets":["UIComponent"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIComponent","name":"UIComponent"}],"toolsVersion":"5.1"}},"version":"1.1.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"UIComponent","products":[{"name":"UIComponent","targets":["UIComponent"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIComponent","name":"UIComponent"}],"toolsVersion":"5.1"}},"version":"1.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"UIComponent","products":[{"name":"UIComponent","targets":["UIComponent"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIComponent","name":"UIComponent"}],"toolsVersion":"5.1"}},"version":"0.14.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"UIComponent","products":[{"name":"UIComponent","targets":["UIComponent"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIComponent","name":"UIComponent"}],"toolsVersion":"5.1"}},"version":"0.14.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"UIComponent","products":[{"name":"UIComponent","targets":["UIComponent"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIComponent","name":"UIComponent"}],"toolsVersion":"5.1"}},"version":"0.13.2"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/AliSoftware/Reusable/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/AliSoftware/Reusable/main/README.md","summary":"A Swift mixin for reusing views easily and in a type-safe way (UITableViewCells, UICollectionViewCells, custom UIViews, ViewControllers, Storyboards…)","url":"https://github.com/AliSoftware/Reusable","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"Reusable","products":[{"name":"Reusable","targets":["Reusable"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Reusable","name":"Reusable"}],"toolsVersion":"5.4"}},"version":"4.1.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"}],"packageName":"Reusable","products":[{"name":"Reusable","targets":["Reusable"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Reusable","name":"Reusable"}],"toolsVersion":"5.0"}},"summary":"","version":"4.1.1"}]},{"keywords":["coordinator","flow","reactive-programming","rxswift","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/RxSwiftCommunity/RxFlow/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/RxSwiftCommunity/RxFlow/main/README.md","summary":"RxFlow is a navigation framework for iOS applications based on a Reactive Flow Coordinator pattern","url":"https://github.com/RxSwiftCommunity/RxFlow","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"RxFlow","products":[{"name":"RxFlow","targets":["RxFlow"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxFlow","name":"RxFlow"}],"toolsVersion":"5.4"}},"version":"2.13.0"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"RxFlow","products":[{"name":"RxFlow","targets":["RxFlow"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxFlow","name":"RxFlow"}],"toolsVersion":"5.4"}},"version":"2.12.4"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"RxFlow","products":[{"name":"RxFlow","targets":["RxFlow"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxFlow","name":"RxFlow"}],"toolsVersion":"5.4"}},"version":"2.12.3"}]},{"keywords":["ios","swift","tabs","ui","uipageviewcontroller","uitabbar","viewpager"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/uias/Tabman/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/uias/Tabman/main/README.md","summary":"™️ A powerful paging view controller with interactive indicator bars","url":"https://github.com/uias/Tabman","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"Tabman","products":[{"name":"Tabman","targets":["Tabman"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tabman","name":"Tabman"}],"toolsVersion":"5.0"}},"version":"3.0.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"Tabman","products":[{"name":"Tabman","targets":["Tabman"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tabman","name":"Tabman"}],"toolsVersion":"5.0"}},"version":"3.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Tabman","products":[{"name":"Tabman","targets":["Tabman"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tabman","name":"Tabman"}],"toolsVersion":"5.0"}},"version":"2.13.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Tabman","products":[{"name":"Tabman","targets":["Tabman"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tabman","name":"Tabman"}],"toolsVersion":"5.0"}},"version":"2.12.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Tabman","products":[{"name":"Tabman","targets":["Tabman"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Tabman","name":"Tabman"}],"toolsVersion":"5.0"}},"version":"2.11.1"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/nicklockwood/SwiftFormat/master/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/nicklockwood/SwiftFormat/master/README.md","summary":"A command-line tool and Xcode Extension for formatting Swift code","url":"https://github.com/nicklockwood/SwiftFormat","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"packageName":"SwiftFormat","products":[{"name":"SwiftFormat","targets":["SwiftFormat"],"type":{"library":["automatic"]}},{"name":"SwiftFormatPlugin","targets":["SwiftFormatPlugin"],"type":{"plugin":null}},{"name":"swiftformat","targets":["CommandLineTool"],"type":{"executable":null}}],"targets":[{"moduleName":"CommandLineTool","name":"CommandLineTool"},{"moduleName":"SwiftFormat","name":"SwiftFormat"},{"moduleName":"SwiftFormatPlugin","name":"SwiftFormatPlugin"}],"toolsVersion":"5.6"}},"version":"0.50.7"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"packageName":"SwiftFormat","products":[{"name":"SwiftFormat","targets":["SwiftFormat"],"type":{"library":["automatic"]}},{"name":"SwiftFormatPlugin","targets":["SwiftFormatPlugin"],"type":{"plugin":null}},{"name":"swiftformat","targets":["CommandLineTool"],"type":{"executable":null}}],"targets":[{"moduleName":"CommandLineTool","name":"CommandLineTool"},{"moduleName":"SwiftFormat","name":"SwiftFormat"},{"moduleName":"SwiftFormatPlugin","name":"SwiftFormatPlugin"}],"toolsVersion":"5.6"}},"version":"0.50.6"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"packageName":"SwiftFormat","products":[{"name":"SwiftFormat","targets":["SwiftFormat"],"type":{"library":["automatic"]}},{"name":"SwiftFormatPlugin","targets":["SwiftFormatPlugin"],"type":{"plugin":null}},{"name":"swiftformat","targets":["CommandLineTool"],"type":{"executable":null}}],"targets":[{"moduleName":"CommandLineTool","name":"CommandLineTool"},{"moduleName":"SwiftFormat","name":"SwiftFormat"},{"moduleName":"SwiftFormatPlugin","name":"SwiftFormatPlugin"}],"toolsVersion":"5.6"}},"version":"0.50.5"}]},{"keywords":["photo-browser","photos","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/suzuki-0000/SKPhotoBrowser/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/suzuki-0000/SKPhotoBrowser/master/README.md","summary":"Simple PhotoBrowser/Viewer inspired by facebook, twitter photo browsers written by swift","url":"https://github.com/suzuki-0000/SKPhotoBrowser","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"SKPhotoBrowser","products":[{"name":"SKPhotoBrowser","targets":["SKPhotoBrowser"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SKPhotoBrowser","name":"SKPhotoBrowser"}],"toolsVersion":"5.3"}},"version":"7.1.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/RxSwiftCommunity/RxOptional/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/RxSwiftCommunity/RxOptional/main/README.md","summary":"RxSwift extensions for Swift optionals and \"Occupiable\" types","url":"https://github.com/RxSwiftCommunity/RxOptional","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxOptional","products":[{"name":"RxOptional","targets":["RxOptional"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxOptional","name":"RxOptional"}],"toolsVersion":"5.2"}},"version":"v5.0.5"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxOptional","products":[{"name":"RxOptional","targets":["RxOptional"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxOptional","name":"RxOptional"}],"toolsVersion":"5.2"}},"version":"v5.0.4"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxOptional","products":[{"name":"RxOptional","targets":["RxOptional"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxOptional","name":"RxOptional"}],"toolsVersion":"5.0"}},"version":"v5.0.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxOptional","products":[{"name":"RxOptional","targets":["RxOptional"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxOptional","name":"RxOptional"}],"toolsVersion":"5.0"}},"version":"4.1.0"}]},{"keywords":["carthage","cocoapods","hacktoberfest","ios","textview","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/FluidGroup/NextGrowingTextView/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/FluidGroup/NextGrowingTextView/main/README.md","summary":"📝 The next in the generations of 'growing textviews' optimized for iOS 8 and above.","url":"https://github.com/FluidGroup/NextGrowingTextView","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"NextGrowingTextView","products":[{"name":"NextGrowingTextView","targets":["NextGrowingTextView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NextGrowingTextView","name":"NextGrowingTextView"}],"toolsVersion":"5.5"}},"version":"2.2.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"NextGrowingTextView","products":[{"name":"NextGrowingTextView","targets":["NextGrowingTextView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NextGrowingTextView","name":"NextGrowingTextView"}],"toolsVersion":"5.5"}},"version":"2.2.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"NextGrowingTextView","products":[{"name":"NextGrowingTextView","targets":["NextGrowingTextView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NextGrowingTextView","name":"NextGrowingTextView"}],"toolsVersion":"5.5"}},"version":"2.1.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"NextGrowingTextView","products":[{"name":"NextGrowingTextView","targets":["NextGrowingTextView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NextGrowingTextView","name":"NextGrowingTextView"}],"toolsVersion":"5.0"}},"version":"1.6.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"NextGrowingTextView","products":[{"name":"NextGrowingTextView","targets":["NextGrowingTextView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NextGrowingTextView","name":"NextGrowingTextView"}],"toolsVersion":"5.0"}},"version":"1.6.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"NextGrowingTextView","products":[{"name":"NextGrowingTextView","targets":["NextGrowingTextView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NextGrowingTextView","name":"NextGrowingTextView"}],"toolsVersion":"5.0"}},"version":"1.5.1"}]},{"keywords":["carthage","carthage-installation","cocoapods","hashtag","hashtags","ios","swift","swift-package-manager","tags","ui-components","uitextfield"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/whitesmith/WSTagsField/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/whitesmith/WSTagsField/master/README.md","summary":"An iOS text field that represents tags, hashtags, tokens in general.","url":"https://github.com/whitesmith/WSTagsField","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"WSTagsField","products":[{"name":"WSTagsField","targets":["WSTagsField"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WSTagsField","name":"WSTagsField"}],"toolsVersion":"5.1"}},"version":"5.4.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"WSTagsField","products":[{"name":"WSTagsField","targets":["WSTagsField"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WSTagsField","name":"WSTagsField"}],"toolsVersion":"5.1"}},"version":"5.3.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"WSTagsField","products":[{"name":"WSTagsField","targets":["WSTagsField"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WSTagsField","name":"WSTagsField"}],"toolsVersion":"5.1"}},"version":"5.3.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/scenee/FloatingPanel/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/scenee/FloatingPanel/master/README.md","summary":"A clean and easy-to-use floating panel UI component for iOS","url":"https://github.com/scenee/FloatingPanel","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"FloatingPanel","products":[{"name":"FloatingPanel","targets":["FloatingPanel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FloatingPanel","name":"FloatingPanel"}],"toolsVersion":"5.0"}},"version":"2.5.5"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"FloatingPanel","products":[{"name":"FloatingPanel","targets":["FloatingPanel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FloatingPanel","name":"FloatingPanel"}],"toolsVersion":"5.0"}},"version":"2.5.4"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"FloatingPanel","products":[{"name":"FloatingPanel","targets":["FloatingPanel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FloatingPanel","name":"FloatingPanel"}],"toolsVersion":"5.0"}},"version":"2.5.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"FloatingPanel","products":[{"name":"FloatingPanel","targets":["FloatingPanel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FloatingPanel","name":"FloatingPanel"}],"toolsVersion":"5.0"}},"version":"v1.7.6"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"FloatingPanel","products":[{"name":"FloatingPanel","targets":["FloatingPanel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FloatingPanel","name":"FloatingPanel"}],"toolsVersion":"5.0"}},"version":"v1.7.5"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"FloatingPanel","products":[{"name":"FloatingPanel","targets":["FloatingPanel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FloatingPanel","name":"FloatingPanel"}],"toolsVersion":"5.0"}},"version":"v1.7.4"}]},{"keywords":["appstore","carthage","inapppurchase","ios","ios11","purchase","store","storekit","swift","swift4"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/jinSasaki/InAppPurchase/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/jinSasaki/InAppPurchase/master/README.md","summary":"A Simple and Lightweight framework for In App Purchase","url":"https://github.com/jinSasaki/InAppPurchase","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.15"}],"packageName":"InAppPurchase","products":[{"name":"InAppPurchase","targets":["InAppPurchase"],"type":{"library":["automatic"]}},{"name":"InAppPurchaseStubs","targets":["InAppPurchaseStubs"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"InAppPurchase","name":"InAppPurchase"},{"moduleName":"InAppPurchaseStubs","name":"InAppPurchaseStubs"}],"toolsVersion":"5.3"}},"summary":"","version":"2.8.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.15"}],"packageName":"InAppPurchase","products":[{"name":"InAppPurchase","targets":["InAppPurchase"],"type":{"library":["automatic"]}},{"name":"InAppPurchaseStubs","targets":["InAppPurchaseStubs"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"InAppPurchase","name":"InAppPurchase"},{"moduleName":"InAppPurchaseStubs","name":"InAppPurchaseStubs"}],"toolsVersion":"5.3"}},"summary":"","version":"2.7.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.15"}],"packageName":"InAppPurchase","products":[{"name":"InAppPurchase","targets":["InAppPurchase"],"type":{"library":["automatic"]}},{"name":"InAppPurchaseStubs","targets":["InAppPurchaseStubs"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"InAppPurchase","name":"InAppPurchase"},{"moduleName":"InAppPurchaseStubs","name":"InAppPurchaseStubs"}],"toolsVersion":"5.3"}},"summary":"","version":"2.7.3"}]},{"keywords":["gallery","image","ios","slideshow","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/zvonicek/ImageSlideshow/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/zvonicek/ImageSlideshow/master/README.md","summary":"Swift image slideshow with circular scrolling, timer and full screen viewer","url":"https://github.com/zvonicek/ImageSlideshow","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"ImageSlideshow","products":[{"name":"ImageSlideshow","targets":["ImageSlideshow"],"type":{"library":["automatic"]}},{"name":"ImageSlideshow/Alamofire","targets":["ImageSlideshowAlamofire"],"type":{"library":["automatic"]}},{"name":"ImageSlideshow/Kingfisher","targets":["ImageSlideshowKingfisher"],"type":{"library":["automatic"]}},{"name":"ImageSlideshow/SDWebImage","targets":["ImageSlideshowSDWebImage"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ImageSlideshow","name":"ImageSlideshow"},{"moduleName":"ImageSlideshowAlamofire","name":"ImageSlideshowAlamofire"},{"moduleName":"ImageSlideshowKingfisher","name":"ImageSlideshowKingfisher"},{"moduleName":"ImageSlideshowSDWebImage","name":"ImageSlideshowSDWebImage"}],"toolsVersion":"5.3"}},"version":"1.9.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"ImageSlideshow","products":[{"name":"ImageSlideshow","targets":["ImageSlideshow"],"type":{"library":["automatic"]}},{"name":"ImageSlideshow/Alamofire","targets":["ImageSlideshowAlamofire"],"type":{"library":["automatic"]}},{"name":"ImageSlideshow/Kingfisher","targets":["ImageSlideshowKingfisher"],"type":{"library":["automatic"]}},{"name":"ImageSlideshow/SDWebImage","targets":["ImageSlideshowSDWebImage"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ImageSlideshow","name":"ImageSlideshow"},{"moduleName":"ImageSlideshowAlamofire","name":"ImageSlideshowAlamofire"},{"moduleName":"ImageSlideshowKingfisher","name":"ImageSlideshowKingfisher"},{"moduleName":"ImageSlideshowSDWebImage","name":"ImageSlideshowSDWebImage"}],"toolsVersion":"5.0"}},"version":"1.9.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"ImageSlideshow","products":[{"name":"ImageSlideshow","targets":["ImageSlideshow"],"type":{"library":["automatic"]}},{"name":"ImageSlideshow/Alamofire","targets":["ImageSlideshowAlamofire"],"type":{"library":["automatic"]}},{"name":"ImageSlideshow/Kingfisher","targets":["ImageSlideshowKingfisher"],"type":{"library":["automatic"]}},{"name":"ImageSlideshow/SDWebImage","targets":["ImageSlideshowSDWebImage"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ImageSlideshow","name":"ImageSlideshow"},{"moduleName":"ImageSlideshowAlamofire","name":"ImageSlideshowAlamofire"},{"moduleName":"ImageSlideshowKingfisher","name":"ImageSlideshowKingfisher"},{"moduleName":"ImageSlideshowSDWebImage","name":"ImageSlideshowSDWebImage"}],"toolsVersion":"5.0"}},"version":"1.9.0"}]},{"keywords":["carthage","cocoapods","core-data","coredata","swift","swift-package-manager"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/JohnEstropia/CoreStore/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/JohnEstropia/CoreStore/develop/README.md","summary":"Unleashing the real power of Core Data with the elegance and safety of Swift","url":"https://github.com/JohnEstropia/CoreStore","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.0"}],"packageName":"CoreStore","products":[{"name":"CoreStore","targets":["CoreStore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CoreStore","name":"CoreStore"}],"toolsVersion":"5.7"}},"summary":"","version":"9.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"}],"packageName":"CoreStore","products":[{"name":"CoreStore","targets":["CoreStore"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CoreStore","name":"CoreStore"}],"toolsVersion":"5.0"}},"summary":"","version":"8.1.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"}],"packageName":"CoreStore","products":[{"name":"CoreStore","targets":["CoreStore"],"type":{"library":["static"]}}],"targets":[{"moduleName":"CoreStore","name":"CoreStore"}],"toolsVersion":"5.0"}},"summary":"","version":"8.0.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"}],"packageName":"CoreStore","products":[{"name":"CoreStore","targets":["CoreStore"],"type":{"library":["static"]}}],"targets":[{"moduleName":"CoreStore","name":"CoreStore"}],"toolsVersion":"5.0"}},"version":"8.0.0"}]},{"keywords":["collectionview","data-driven","datasource","diff","ios","rxswift","uicollectionview","viewcontroller"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/FluidGroup/DataSources/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/FluidGroup/DataSources/master/README.md","summary":"💾 🔜📱 Type-safe data-driven CollectionView, TableView Framework. (We can also use ASCollectionNode)","url":"https://github.com/FluidGroup/DataSources","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"DataSources","products":[{"name":"DataSources","targets":["DataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DataSources","name":"DataSources"}],"toolsVersion":"5.5"}},"version":"1.0.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"DataSources","products":[{"name":"DataSources","targets":["DataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"DataSources","name":"DataSources"}],"toolsVersion":"5.5"}},"version":"1.0.0"}]},{"keywords":["ios","swift","uicollectionview","uikit"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/rosberry/CollectionViewTools/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/rosberry/CollectionViewTools/master/README.md","summary":"Effective framework for making your UICollectionView usage simple and comfortable","url":"https://github.com/rosberry/CollectionViewTools","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"CollectionViewTools","products":[{"name":"CollectionViewTools","targets":["CollectionViewTools"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CollectionViewTools","name":"CollectionViewTools"}],"toolsVersion":"5.3"}},"version":"0.1.7"}]},{"keywords":[],"license":{"name":"BSD-2-Clause","url":"https://raw.githubusercontent.com/kylef/PathKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/kylef/PathKit/master/README.md","summary":"Effortless path operations in Swift","url":"https://github.com/kylef/PathKit","versions":[{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"PathKit","products":[{"name":"PathKit","targets":["PathKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PathKit","name":"PathKit"}],"toolsVersion":"4.2"}},"version":"1.0.1"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"PathKit","products":[{"name":"PathKit","targets":["PathKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PathKit","name":"PathKit"}],"toolsVersion":"4.2"}},"version":"1.0.0"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"PathKit","products":[{"name":"PathKit","targets":["PathKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PathKit","name":"PathKit"}],"toolsVersion":"4.2"}},"summary":"Release 0.9.2","version":"0.9.2"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"PathKit","products":[{"name":"PathKit","targets":["PathKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PathKit","name":"PathKit"}],"toolsVersion":"4.0"}},"version":"0.9.1"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"PathKit","products":[{"name":"PathKit","targets":["PathKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PathKit","name":"PathKit"}],"toolsVersion":"4.0"}},"version":"0.9.0"}]},{"keywords":["carthage","cocoapods","custom-fonts","plist","swift","swift-package-manager","tvos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ArtSabintsev/FontBlaster/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ArtSabintsev/FontBlaster/master/README.md","summary":"Programmatically load custom fonts into your iOS, macOS and tvOS app.","url":"https://github.com/ArtSabintsev/FontBlaster","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"macos","version":"10.10"}],"packageName":"FontBlaster","products":[{"name":"FontBlaster","targets":["FontBlaster"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FontBlaster","name":"FontBlaster"}],"toolsVersion":"5.3"}},"version":"5.3.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"macos","version":"10.10"}],"packageName":"FontBlaster","products":[{"name":"FontBlaster","targets":["FontBlaster"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FontBlaster","name":"FontBlaster"}],"toolsVersion":"5.3"}},"version":"5.2.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"macos","version":"10.10"}],"packageName":"FontBlaster","products":[{"name":"FontBlaster","targets":["FontBlaster"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FontBlaster","name":"FontBlaster"}],"toolsVersion":"5.3"}},"version":"5.2.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/tristanhimmelman/ObjectMapper/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/tristanhimmelman/ObjectMapper/master/README.md","summary":"Simple JSON Object mapping written in Swift","url":"https://github.com/tristanhimmelman/ObjectMapper","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"ObjectMapper","products":[{"name":"ObjectMapper","targets":["ObjectMapper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ObjectMapper","name":"ObjectMapper"}],"toolsVersion":"5.0"}},"version":"4.2.0"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"ObjectMapper","products":[{"name":"ObjectMapper","targets":["ObjectMapper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ObjectMapper","name":"ObjectMapper"}],"toolsVersion":"4.2"}},"version":"4.1.0"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"ObjectMapper","products":[{"name":"ObjectMapper","targets":["ObjectMapper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ObjectMapper","name":"ObjectMapper"}],"toolsVersion":"4.2"}},"version":"4.0.0"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"ObjectMapper","products":[{"name":"ObjectMapper","targets":["ObjectMapper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ObjectMapper","name":"ObjectMapper"}],"toolsVersion":"4.2"}},"version":"3.5.3"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"ObjectMapper","products":[{"name":"ObjectMapper","targets":["ObjectMapper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ObjectMapper","name":"ObjectMapper"}],"toolsVersion":"4.2"}},"version":"3.5.2"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"ObjectMapper","products":[{"name":"ObjectMapper","targets":["ObjectMapper"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ObjectMapper","name":"ObjectMapper"}],"toolsVersion":"4.2"}},"version":"3.5.1"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/pujiaxin33/StackUI/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/pujiaxin33/StackUI/main/README.md","summary":"StackUI just like SwiftUI","url":"https://github.com/pujiaxin33/StackUI","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"packageName":"StackUI","products":[{"name":"StackUI","targets":["StackUI"],"type":{"library":["automatic"]}},{"name":"StackUIWithRxSwift","targets":["StackUIWithRxSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StackUI","name":"StackUI"},{"moduleName":"StackUIWithRxSwift","name":"StackUIWithRxSwift"}],"toolsVersion":"5.5"}},"summary":"","version":"0.0.11"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"packageName":"StackUI","products":[{"name":"StackUI","targets":["StackUI"],"type":{"library":["automatic"]}},{"name":"StackUIWithRxSwift","targets":["StackUIWithRxSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StackUI","name":"StackUI"},{"moduleName":"StackUIWithRxSwift","name":"StackUIWithRxSwift"}],"toolsVersion":"5.5"}},"summary":"","version":"0.0.10"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"packageName":"StackUI","products":[{"name":"StackUI","targets":["StackUI"],"type":{"library":["automatic"]}},{"name":"StackUIWithRxSwift","targets":["StackUIWithRxSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StackUI","name":"StackUI"},{"moduleName":"StackUIWithRxSwift","name":"StackUIWithRxSwift"}],"toolsVersion":"5.5"}},"summary":"","version":"0.0.9"}]},{"keywords":["dark","dark-mode","dark-theme","darkmode","ios9","night","night-mode","nightmode","nightwatch","skin","swift","theme"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/pujiaxin33/JXTheme/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/pujiaxin33/JXTheme/master/README.md","summary":"A powerful and lightweight and customization theme/skin library for iOS 9+ in swift. 主题、换肤、暗黑模式","url":"https://github.com/pujiaxin33/JXTheme","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"JXTheme","products":[{"name":"JXTheme","targets":["JXTheme"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JXTheme","name":"JXTheme"}],"toolsVersion":"5.0"}},"summary":"","version":"0.0.7"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"JXTheme","products":[{"name":"JXTheme","targets":["JXTheme"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JXTheme","name":"JXTheme"}],"toolsVersion":"5.0"}},"version":"0.0.6"}]},{"keywords":["page","pageview","pagingview","scrollview","segmentedcontrol"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/pujiaxin33/JXPagingView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/pujiaxin33/JXPagingView/master/README.md","summary":"类似微博主页、简书主页等效果。多页面嵌套，既可以上下滑动，也可以左右滑动切换页面。支持HeaderView悬浮、支持下拉刷新、上拉加载更多。","url":"https://github.com/pujiaxin33/JXPagingView","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"JXPagingView","products":[{"name":"JXPagingView","targets":["JXPagingView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JXPagingView","name":"JXPagingView"}],"toolsVersion":"5.0"}},"summary":"","version":"2.1.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"JXPagingView","products":[{"name":"JXPagingView","targets":["JXPagingView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JXPagingView","name":"JXPagingView"}],"toolsVersion":"5.0"}},"summary":"","version":"2.1.1"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/RxSwiftCommunity/NSObject-Rx/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/RxSwiftCommunity/NSObject-Rx/master/Readme.md","summary":"Handy RxSwift extensions on NSObject, including rx.disposeBag.","url":"https://github.com/RxSwiftCommunity/NSObject-Rx","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.14"}],"packageName":"NSObject-Rx","products":[{"name":"NSObject-Rx","targets":["NSObject-Rx"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NSObject_Rx","name":"NSObject-Rx"}],"toolsVersion":"5.1"}},"version":"5.2.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.14"}],"packageName":"NSObject-Rx","products":[{"name":"NSObject-Rx","targets":["NSObject-Rx"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NSObject_Rx","name":"NSObject-Rx"}],"toolsVersion":"5.1"}},"version":"5.2.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.14"}],"packageName":"NSObject-Rx","products":[{"name":"NSObject-Rx","targets":["NSObject-Rx"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NSObject_Rx","name":"NSObject-Rx"}],"toolsVersion":"5.1"}},"version":"5.2.0"}]},{"keywords":["cocoapods","ios","macos","spm","swift","swiftui","tvos","uikit","watchos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/vtourraine/AcknowList/main/LICENSE.txt"},"readmeURL":"https://raw.githubusercontent.com/vtourraine/AcknowList/main/README.md","summary":"Acknowledgements screen displaying a list of licenses, for example from CocoaPods and Swift Package Manager dependencies.","url":"https://github.com/vtourraine/AcknowList","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.0"},{"name":"macos","version":"10.15"}],"packageName":"AcknowList","products":[{"name":"AcknowList","targets":["AcknowList"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AcknowList","name":"AcknowList"}],"toolsVersion":"5.3"}},"version":"3.0.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.0"},{"name":"macos","version":"10.15"}],"packageName":"AcknowList","products":[{"name":"AcknowList","targets":["AcknowList"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AcknowList","name":"AcknowList"}],"toolsVersion":"5.3"}},"version":"3.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.0"},{"name":"macos","version":"10.15"}],"packageName":"AcknowList","products":[{"name":"AcknowList","targets":["AcknowList"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AcknowList","name":"AcknowList"}],"toolsVersion":"5.3"}},"summary":"Release 2.1.1","version":"2.1.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"7.0"},{"name":"macos","version":"10.15"}],"packageName":"AcknowList","products":[{"name":"AcknowList","targets":["AcknowList"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AcknowList","name":"AcknowList"}],"toolsVersion":"5.3"}},"version":"2.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"AcknowList","products":[{"name":"AcknowList","targets":["AcknowList"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AcknowList","name":"AcknowList"}],"toolsVersion":"5.3"}},"version":"2.0.3"}]},{"keywords":["grid","ios","macos","swift","swiftui","tvos","watchos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/pietropizzi/GridStack/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/pietropizzi/GridStack/master/README.md","summary":"A flexible grid layout view for SwiftUI","url":"https://github.com/pietropizzi/GridStack","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"GridStack","products":[{"name":"GridStack","targets":["GridStack"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"GridStack","name":"GridStack"}],"toolsVersion":"5.1"}},"version":"0.4.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"GridStack","products":[{"name":"GridStack","targets":["GridStack"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"GridStack","name":"GridStack"}],"toolsVersion":"5.1"}},"version":"0.4.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"GridStack","products":[{"name":"GridStack","targets":["GridStack"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"GridStack","name":"GridStack"}],"toolsVersion":"5.1"}},"summary":"Fix width when popping back from ViewController and expanding width","version":"0.4.1"}]},{"keywords":["bottomsheet","corelocation","extensions","helpers","ios","keyboard","shimmer","spm","swift","swiftui","uikit","userdefaults","xcode"],"readmeURL":"https://raw.githubusercontent.com/gtokman/ExtensionKit/main/README.md","summary":"Helpful extensions for iOS app development 🚀 ","url":"https://github.com/gtokman/ExtensionKit","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"ExtensionKit","products":[{"name":"ExtensionKit","targets":["ExtensionKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ExtensionKit","name":"ExtensionKit"}],"toolsVersion":"5.3"}},"summary":"chore(release): 1.20.2","version":"v1.20.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"ExtensionKit","products":[{"name":"ExtensionKit","targets":["ExtensionKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ExtensionKit","name":"ExtensionKit"}],"toolsVersion":"5.3"}},"summary":"chore(release): 1.20.1","version":"v1.20.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"ExtensionKit","products":[{"name":"ExtensionKit","targets":["ExtensionKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ExtensionKit","name":"ExtensionKit"}],"toolsVersion":"5.3"}},"summary":"chore(release): 1.20.0","version":"v1.20.0"}]},{"keywords":["apple-watch","carthage","cocoapods","ios","stepindicator","stepperview","swift","swift-package-manager","swiftui","timeline","workflow"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/badrinathvm/StepperView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/badrinathvm/StepperView/master/README.md","summary":"SwiftUI iOS component for Step Indications.  ","url":"https://github.com/badrinathvm/StepperView","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"StepperView","products":[{"name":"StepperView","targets":["StepperView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StepperView","name":"StepperView"}],"toolsVersion":"5.1"}},"version":"1.6.7"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"StepperView","products":[{"name":"StepperView","targets":["StepperView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StepperView","name":"StepperView"}],"toolsVersion":"5.1"}},"version":"1.6.6"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"StepperView","products":[{"name":"StepperView","targets":["StepperView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StepperView","name":"StepperView"}],"toolsVersion":"5.1"}},"version":"1.6.5"}]},{"keywords":["cocoapods","ios","onboarding","swift","swift-library","swiftui","ui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/exyte/ConcentricOnboarding/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/exyte/ConcentricOnboarding/master/README.md","summary":"SwiftUI library for a walkthrough or onboarding flow with tap actions","url":"https://github.com/exyte/ConcentricOnboarding","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"ConcentricOnboarding","products":[{"name":"ConcentricOnboarding","targets":["ConcentricOnboarding"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ConcentricOnboarding","name":"ConcentricOnboarding"}],"toolsVersion":"5.5"}},"summary":"","version":"1.0.3"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"ConcentricOnboarding","products":[{"name":"ConcentricOnboarding","targets":["ConcentricOnboarding"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ConcentricOnboarding","name":"ConcentricOnboarding"}],"toolsVersion":"5.5"}},"summary":"","version":"1.0.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"ConcentricOnboarding","products":[{"name":"ConcentricOnboarding","targets":["ConcentricOnboarding"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ConcentricOnboarding","name":"ConcentricOnboarding"}],"toolsVersion":"5.1"}},"summary":"","version":"0.0.6"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"ConcentricOnboarding","products":[{"name":"ConcentricOnboarding","targets":["ConcentricOnboarding"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ConcentricOnboarding","name":"ConcentricOnboarding"}],"toolsVersion":"5.1"}},"summary":"","version":"0.0.5"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"ConcentricOnboarding","products":[{"name":"ConcentricOnboarding","targets":["ConcentricOnboarding"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ConcentricOnboarding","name":"ConcentricOnboarding"}],"toolsVersion":"5.2"}},"summary":"","version":"0.0.4"}]},{"keywords":["progress","swift","timeline","uiactivityindicatorview","uiprogressview"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/yonat/StepProgressView/master/LICENSE.txt"},"readmeURL":"https://raw.githubusercontent.com/yonat/StepProgressView/master/README.md","summary":"Step-by-step progress view with labels and shapes. A good replacement for UIActivityIndicatorView and UIProgressView.","url":"https://github.com/yonat/StepProgressView","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"StepProgressView","products":[{"name":"StepProgressView","targets":["StepProgressView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StepProgressView","name":"StepProgressView"}],"toolsVersion":"5.1"}},"version":"1.6.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"StepProgressView","products":[{"name":"StepProgressView","targets":["StepProgressView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StepProgressView","name":"StepProgressView"}],"toolsVersion":"5.1"}},"version":"1.6.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"StepProgressView","products":[{"name":"StepProgressView","targets":["StepProgressView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"StepProgressView","name":"StepProgressView"}],"toolsVersion":"5.1"}},"version":"1.5.7"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/theMomax/BatteryView/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/theMomax/BatteryView/main/README.md","summary":"A SwiftUI library featuring a variety of battery visualisations.","url":"https://github.com/theMomax/BatteryView","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"11.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"BatteryView","products":[{"name":"BatteryView","targets":["BatteryView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BatteryView","name":"BatteryView"}],"toolsVersion":"5.3"}},"summary":"v0.1.0","version":"v0.1.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/exyte/ProgressIndicatorView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/exyte/ProgressIndicatorView/master/README.md","summary":"An iOS progress indicator view library written in SwiftUI","url":"https://github.com/exyte/ProgressIndicatorView","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"tvos","version":"13.0"}],"packageName":"ProgressIndicatorView","products":[{"name":"ProgressIndicatorView","targets":["ProgressIndicatorView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ProgressIndicatorView","name":"ProgressIndicatorView"}],"toolsVersion":"5.1"}},"summary":"","version":"0.0.2"}]},{"keywords":["codable","ios","property-wrappers","swift","swift-package-manager","swift5-1"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/GottaGetSwifty/CodableWrappers/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/GottaGetSwifty/CodableWrappers/master/README.md","summary":"A Collection of PropertyWrappers to make custom Serialization of Swift Codable Types easy","url":"https://github.com/GottaGetSwifty/CodableWrappers","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"CodableWrappers","products":[{"name":"CodableWrappers","targets":["CodableWrappers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CodableWrappers","name":"CodableWrappers"}],"toolsVersion":"5.2"}},"version":"2.0.7"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"CodableWrappers","products":[{"name":"CodableWrappers","targets":["CodableWrappers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CodableWrappers","name":"CodableWrappers"}],"toolsVersion":"5.2"}},"version":"2.0.6"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"CodableWrappers","products":[{"name":"CodableWrappers","targets":["CodableWrappers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CodableWrappers","name":"CodableWrappers"}],"toolsVersion":"5.2"}},"version":"2.0.5"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"CodableWrappers","products":[{"name":"CodableWrappers","targets":["CodableWrappers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CodableWrappers","name":"CodableWrappers"}],"toolsVersion":"5.1"}},"version":"1.2.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"CodableWrappers","products":[{"name":"CodableWrappers","targets":["CodableWrappers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CodableWrappers","name":"CodableWrappers"}],"toolsVersion":"5.1"}},"version":"v1.2.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"CodableWrappers","products":[{"name":"CodableWrappers","targets":["CodableWrappers"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CodableWrappers","name":"CodableWrappers"}],"toolsVersion":"5.1"}},"version":"1.1.0"}]},{"keywords":["3rd-party","cocoapods","drop","dropdown-menu","ios","iosdevelopment","storyboard","swift5"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/KarimEbrahemAbdelaziz/SwiftyMenu/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/KarimEbrahemAbdelaziz/SwiftyMenu/master/README.md","summary":"Simple and Elegant Drop down menu for iOS 🔥💥","url":"https://github.com/KarimEbrahemAbdelaziz/SwiftyMenu","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"SwiftyMenu","products":[{"name":"SwiftyMenu","targets":["SwiftyMenu"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyMenu","name":"SwiftyMenu"}],"toolsVersion":"5.3"}},"version":"1.0.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"SwiftyMenu","products":[{"name":"SwiftyMenu","targets":["SwiftyMenu"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyMenu","name":"SwiftyMenu"}],"toolsVersion":"5.3"}},"version":"1.0.0"}]},{"keywords":["swiftui","swiftui-animations","swiftui-components"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/exyte/FloatingButton/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/exyte/FloatingButton/master/README.md","summary":"Easily customizable floating button menu created with SwiftUI","url":"https://github.com/exyte/FloatingButton","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"FloatingButton","products":[{"name":"FloatingButton","targets":["FloatingButton"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FloatingButton","name":"FloatingButton"}],"toolsVersion":"5.1"}},"summary":"","version":"1.0.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"FloatingButton","products":[{"name":"FloatingButton","targets":["FloatingButton"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FloatingButton","name":"FloatingButton"}],"toolsVersion":"5.1"}},"summary":"","version":"1.0.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"FloatingButton","products":[{"name":"FloatingButton","targets":["FloatingButton"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FloatingButton","name":"FloatingButton"}],"toolsVersion":"5.1"}},"summary":"","version":"0.0.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"FloatingButton","products":[{"name":"FloatingButton","targets":["FloatingButton"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FloatingButton","name":"FloatingButton"}],"toolsVersion":"5.1"}},"summary":"","version":"0.0.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"FloatingButton","products":[{"name":"FloatingButton","targets":["FloatingButton"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FloatingButton","name":"FloatingButton"}],"toolsVersion":"5.1"}},"summary":"","version":"0.0.1"}]},{"keywords":["animation","arkit","auto","center","constraint","constraints","layout","libraries","library","nslayoutconstraint","nslayoutconstraints","stack","sugar","superview","sweet","swift","swift-5","swift4","swift5","syntactic"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/roberthein/TinyConstraints/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/roberthein/TinyConstraints/master/README.md","summary":"Nothing but sugar.","url":"https://github.com/roberthein/TinyConstraints","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"TinyConstraints","products":[{"name":"TinyConstraints","targets":["TinyConstraints"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TinyConstraints","name":"TinyConstraints"}],"toolsVersion":"5.0"}},"summary":"","version":"4.0.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"}],"packageName":"TinyConstraints","products":[{"name":"TinyConstraints","targets":["TinyConstraints"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TinyConstraints","name":"TinyConstraints"}],"toolsVersion":"5.0"}},"summary":"","version":"4.0.1"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/yeahdongcn/UIColor-Hex-Swift/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/yeahdongcn/UIColor-Hex-Swift/master/README.md","summary":"Convenience methods for creating color using RGBA hex string.","url":"https://github.com/yeahdongcn/UIColor-Hex-Swift","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"UIColorHexSwift","products":[{"name":"UIColorHexSwift","targets":["UIColorHexSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIColorHexSwift","name":"UIColorHexSwift"}],"toolsVersion":"5.1"}},"summary":"Tag release 5.1.9","version":"5.1.9"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"UIColorHexSwift","products":[{"name":"UIColorHexSwift","targets":["UIColorHexSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIColorHexSwift","name":"UIColorHexSwift"}],"toolsVersion":"5.1"}},"summary":"Tag release 5.1.8","version":"5.1.8"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"UIColorHexSwift","products":[{"name":"UIColorHexSwift","targets":["UIColorHexSwift"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"UIColorHexSwift","name":"UIColorHexSwift"}],"toolsVersion":"5.1"}},"summary":"Tag release 5.1.7","version":"5.1.7"}]},{"keywords":["animation","cocoapods","ios","swift","swipe","tabbar","ui","uitabbar","uitabbarcontroller","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/marcosgriselli/SwipeableTabBarController/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/marcosgriselli/SwipeableTabBarController/master/README.md","summary":"UITabBarController with swipe interaction between its tabs.","url":"https://github.com/marcosgriselli/SwipeableTabBarController","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"SwipeableTabBarController","products":[{"name":"SwipeableTabBarController","targets":["SwipeableTabBarController"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwipeableTabBarController","name":"SwipeableTabBarController"}],"toolsVersion":"5.1"}},"summary":"3.4.2 (fastlane)","version":"3.4.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"SwipeableTabBarController","products":[{"name":"SwipeableTabBarController","targets":["SwipeableTabBarController"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwipeableTabBarController","name":"SwipeableTabBarController"}],"toolsVersion":"5.1"}},"summary":"3.4.1 (fastlane)","version":"3.4.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"SwipeableTabBarController","products":[{"name":"SwipeableTabBarController","targets":["SwipeableTabBarController"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwipeableTabBarController","name":"SwipeableTabBarController"}],"toolsVersion":"5.1"}},"summary":"3.4.0 (fastlane)","version":"3.4.0"}]},{"keywords":["ios","objective-c","tags","ui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/zekunyan/TTGTagCollectionView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/zekunyan/TTGTagCollectionView/master/README.md","summary":"Useful for showing text or custom view tags in a vertical or horizontal scrollable view and support Autolayout at the same time. It is highly customizable that most features of the text tag can be configured. 标签流显示控件，同时支持文字或自定义View","url":"https://github.com/zekunyan/TTGTagCollectionView","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"TTGTags","products":[{"name":"TTGTags","targets":["TTGTags"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TTGTags","name":"TTGTags"}],"toolsVersion":"5.0"}},"summary":"","version":"2.3.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"}],"packageName":"TTGTags","products":[{"name":"TTGTags","targets":["TTGTags"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TTGTags","name":"TTGTags"}],"toolsVersion":"5.0"}},"summary":"","version":"2.2.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"TTGTags","products":[{"name":"TTGTags","targets":["TTGTags"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TTGTags","name":"TTGTags"}],"toolsVersion":"5.0"}},"summary":"","version":"2.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"TTGTags","products":[{"name":"TTGTags","targets":["TTGTags"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"TTGTags","name":"TTGTags"}],"toolsVersion":"5.3"}},"summary":"","version":"1.11.2"}]},{"keywords":["code","incremental","language","localization","machine-translation","storyboard","swift","translation","xcode","xib"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/FlineDev/BartyCrouch/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/FlineDev/BartyCrouch/main/README.md","summary":"Localization/I18n: Incrementally update/translate your Strings files from .swift, .h, .m(m), .storyboard or .xib files.","url":"https://github.com/FlineDev/BartyCrouch","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"BartyCrouch","products":[{"name":"BartyCrouchConfiguration","targets":["BartyCrouchConfiguration"],"type":{"library":["automatic"]}},{"name":"BartyCrouchKit","targets":["BartyCrouchKit"],"type":{"library":["automatic"]}},{"name":"BartyCrouchTranslator","targets":["BartyCrouchTranslator"],"type":{"library":["automatic"]}},{"name":"bartycrouch","targets":["BartyCrouch"],"type":{"executable":null}}],"targets":[{"moduleName":"BartyCrouch","name":"BartyCrouch"},{"moduleName":"BartyCrouchConfiguration","name":"BartyCrouchConfiguration"},{"moduleName":"BartyCrouchKit","name":"BartyCrouchKit"},{"moduleName":"BartyCrouchTranslator","name":"BartyCrouchTranslator"}],"toolsVersion":"5.4"}},"summary":"","version":"4.14.2"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"BartyCrouch","products":[{"name":"BartyCrouchConfiguration","targets":["BartyCrouchConfiguration"],"type":{"library":["automatic"]}},{"name":"BartyCrouchKit","targets":["BartyCrouchKit"],"type":{"library":["automatic"]}},{"name":"BartyCrouchTranslator","targets":["BartyCrouchTranslator"],"type":{"library":["automatic"]}},{"name":"bartycrouch","targets":["BartyCrouch"],"type":{"executable":null}}],"targets":[{"moduleName":"BartyCrouch","name":"BartyCrouch"},{"moduleName":"BartyCrouchConfiguration","name":"BartyCrouchConfiguration"},{"moduleName":"BartyCrouchKit","name":"BartyCrouchKit"},{"moduleName":"BartyCrouchTranslator","name":"BartyCrouchTranslator"}],"toolsVersion":"5.4"}},"summary":"","version":"4.14.1"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"BartyCrouch","products":[{"name":"BartyCrouchConfiguration","targets":["BartyCrouchConfiguration"],"type":{"library":["automatic"]}},{"name":"BartyCrouchKit","targets":["BartyCrouchKit"],"type":{"library":["automatic"]}},{"name":"BartyCrouchTranslator","targets":["BartyCrouchTranslator"],"type":{"library":["automatic"]}},{"name":"bartycrouch","targets":["BartyCrouch"],"type":{"executable":null}}],"targets":[{"moduleName":"BartyCrouch","name":"BartyCrouch"},{"moduleName":"BartyCrouchConfiguration","name":"BartyCrouchConfiguration"},{"moduleName":"BartyCrouchKit","name":"BartyCrouchKit"},{"moduleName":"BartyCrouchTranslator","name":"BartyCrouchTranslator"}],"toolsVersion":"5.4"}},"summary":"","version":"4.14.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"BartyCrouch","products":[{"name":"bartycrouch","targets":["BartyCrouch CLI"],"type":{"executable":null}}],"targets":[{"moduleName":"BartyCrouch_CLI","name":"BartyCrouch CLI"}],"toolsVersion":"4.0"}},"summary":"","version":"3.13.1"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"BartyCrouch","products":[{"name":"bartycrouch","targets":["BartyCrouch CLI"],"type":{"executable":null}}],"targets":[{"moduleName":"BartyCrouch_CLI","name":"BartyCrouch CLI"}],"toolsVersion":"4.0"}},"summary":"no message","version":"3.13.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"BartyCrouch","products":[{"name":"bartycrouch","targets":["BartyCrouch CLI"],"type":{"executable":null}}],"targets":[{"moduleName":"BartyCrouch_CLI","name":"BartyCrouch CLI"}],"toolsVersion":"4.0"}},"summary":"no message","version":"3.12.2"}]},{"keywords":["cocoapods","ibdesignable","ibinspectable","ios","ipad","iphone","pagecontrol","pageindicator","pager","storyboard","swift","swift3","ui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ChiliLabs/CHIPageControl/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ChiliLabs/CHIPageControl/master/README.md","summary":"A set of cool animated page controls written in Swift to replace boring UIPageControl. Mady by @ChiliLabs - https://chililabs.io","url":"https://github.com/ChiliLabs/CHIPageControl","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.15"}],"packageName":"CHIPageControl","products":[{"name":"CHIPageControl","targets":["CHIPageControl"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CHIPageControl","name":"CHIPageControl"}],"toolsVersion":"5.4"}},"version":"0.2.1"}]},{"keywords":["icons","ios","sfsymbols","swift","symbols"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/SFSafeSymbols/SFSafeSymbols/stable/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SFSafeSymbols/SFSafeSymbols/stable/README.md","summary":"Safely access Apple's SF Symbols using static typing","url":"https://github.com/SFSafeSymbols/SFSafeSymbols","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"},{"name":"macos","version":"10.13"}],"packageName":"SFSafeSymbols","products":[{"name":"SFSafeSymbols","targets":["SFSafeSymbols"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SFSafeSymbols","name":"SFSafeSymbols"}],"toolsVersion":"5.3"}},"version":"4.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"},{"name":"macos","version":"10.13"}],"packageName":"SFSafeSymbols","products":[{"name":"SFSafeSymbols","targets":["SFSafeSymbols"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SFSafeSymbols","name":"SFSafeSymbols"}],"toolsVersion":"5.3"}},"version":"4.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"},{"name":"macos","version":"10.13"}],"packageName":"SFSafeSymbols","products":[{"name":"SFSafeSymbols","targets":["SFSafeSymbols"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SFSafeSymbols","name":"SFSafeSymbols"}],"toolsVersion":"5.3"}},"summary":"","version":"3.3.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"},{"name":"macos","version":"10.13"}],"packageName":"SFSafeSymbols","products":[{"name":"SFSafeSymbols","targets":["SFSafeSymbols"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SFSafeSymbols","name":"SFSafeSymbols"}],"toolsVersion":"5.3"}},"version":"3.3.1"}]},{"keywords":["ios","lgsidemenucontroller","side-menu","side-menu-controller","side-view","side-view-controller","sidemenu","sidemenucontroller","sideview","sideviewcontroller","slide-menu","slide-menu-controller","slidemenu","slidemenucontroller","uiviewcontroller","viewcontroller"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Friend-LGA/LGSideMenuController/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Friend-LGA/LGSideMenuController/master/README.md","summary":"iOS view controller which manages left and right side views","url":"https://github.com/Friend-LGA/LGSideMenuController","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"LGSideMenuController","products":[{"name":"LGSideMenuController","targets":["LGSideMenuController"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LGSideMenuController","name":"LGSideMenuController"}],"toolsVersion":"5.3"}},"summary":"Release version 3.1.2","version":"3.1.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"LGSideMenuController","products":[{"name":"LGSideMenuController","targets":["LGSideMenuController"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LGSideMenuController","name":"LGSideMenuController"}],"toolsVersion":"5.3"}},"summary":"Release version 3.1.1","version":"3.1.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"LGSideMenuController","products":[{"name":"LGSideMenuController","targets":["LGSideMenuController"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LGSideMenuController","name":"LGSideMenuController"}],"toolsVersion":"5.3"}},"summary":"Release version 3.1.0","version":"3.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"LGSideMenuController","products":[{"name":"LGSideMenuController","targets":["LGSideMenuController"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"LGSideMenuController","name":"LGSideMenuController"}],"toolsVersion":"5.3"}},"summary":"Release version 2.3.0","version":"2.3.0"}]},{"keywords":["carthage","cocoapods","ios","sidemenu","storyboard","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/kukushi/SideMenu/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/kukushi/SideMenu/master/README.md","summary":"An interactive iOS side menu with rich features.","url":"https://github.com/kukushi/SideMenu","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"SideMenu","products":[{"name":"SideMenu","targets":["SideMenu"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SideMenu","name":"SideMenu"}],"toolsVersion":"5.1"}},"version":"2.0.9"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"SideMenu","products":[{"name":"SideMenu","targets":["SideMenu"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SideMenu","name":"SideMenu"}],"toolsVersion":"5.1"}},"summary":"chore(release): 2.0.9","version":"v2.0.9"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"SideMenu","products":[{"name":"SideMenu","targets":["SideMenu"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SideMenu","name":"SideMenu"}],"toolsVersion":"5.1"}},"version":"2.0.8"}]},{"keywords":["ios","macos","peer-to-peer","swift-library","tvos"],"license":{"name":"BSD-2-Clause","url":"https://raw.githubusercontent.com/insidegui/MultipeerKit/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/insidegui/MultipeerKit/main/README.md","summary":"MultipeerConnectivity + Codable = ❤️","url":"https://github.com/insidegui/MultipeerKit","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"},{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"MultipeerKit","products":[{"name":"MultipeerKit","targets":["MultipeerKit"],"type":{"library":["automatic"]}},{"name":"MultipeerKitDynamic","targets":["MultipeerKit"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"MultipeerKit","name":"MultipeerKit"}],"toolsVersion":"5.5"}},"version":"0.4.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"},{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"MultipeerKit","products":[{"name":"MultipeerKit","targets":["MultipeerKit"],"type":{"library":["automatic"]}},{"name":"MultipeerKitDynamic","targets":["MultipeerKit"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"MultipeerKit","name":"MultipeerKit"}],"toolsVersion":"5.1"}},"version":"0.3.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"},{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"MultipeerKit","products":[{"name":"MultipeerKit","targets":["MultipeerKit"],"type":{"library":["automatic"]}},{"name":"MultipeerKit-dynamic","targets":["MultipeerKit"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"MultipeerKit","name":"MultipeerKit"}],"toolsVersion":"5.1"}},"version":"0.3.0"}]},{"keywords":["async-await","concurency","framework","location","location-service","swift","swiftpackage","swiftpackagemanager"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/AsyncSwift/AsyncLocationKit/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/AsyncSwift/AsyncLocationKit/main/README.md","summary":"📍async/await CoreLocation ","url":"https://github.com/AsyncSwift/AsyncLocationKit","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"12.0"},{"name":"watchos","version":"6.0"}],"packageName":"AsyncLocationKit","products":[{"name":"AsyncLocationKit","targets":["AsyncLocationKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AsyncLocationKit","name":"AsyncLocationKit"}],"toolsVersion":"5.5"}},"version":"1.6.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"12.0"},{"name":"watchos","version":"6.0"}],"packageName":"AsyncLocationKit","products":[{"name":"AsyncLocationKit","targets":["AsyncLocationKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AsyncLocationKit","name":"AsyncLocationKit"}],"toolsVersion":"5.5"}},"version":"1.6.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"12.0"},{"name":"watchos","version":"6.0"}],"packageName":"AsyncLocationKit","products":[{"name":"AsyncLocationKit","targets":["AsyncLocationKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AsyncLocationKit","name":"AsyncLocationKit"}],"toolsVersion":"5.5"}},"version":"1.5.7"}]},{"keywords":["carthage","change-language","cocoapods","ios","l10n","language","language-detection","localization","localized","macos","plist","plural-form","pluralization","plurals","strings","stringsdict","swift-framework","swift-package-manager","tvos","watchos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Decybel07/L10n-swift/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Decybel07/L10n-swift/master/README.md","summary":"Localization of the application with ability to change language \"on the fly\" and support for plural form in any language.","url":"https://github.com/Decybel07/L10n-swift","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"L10n-swift","products":[{"name":"L10n-swift","targets":["L10n-swift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"L10n_swift","name":"L10n-swift"}],"toolsVersion":"5.3"}},"version":"5.10.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"L10n-swift","products":[{"name":"L10n-swift","targets":["L10n-swift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"L10n_swift","name":"L10n-swift"}],"toolsVersion":"5.3"}},"version":"5.10.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"L10n-swift","products":[{"name":"L10n-swift","targets":["L10n-swift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"L10n_swift","name":"L10n-swift"}],"toolsVersion":"5.3"}},"version":"5.10.0"}]},{"keywords":["anyformat","anyformatkit","card-number","carthage","cocoapods","currency","currency-format","currency-formatter","delegate","formatter","formatters","phone-number","regex","swift","symbols","uitextfield","uitextview","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/luximetr/AnyFormatKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/luximetr/AnyFormatKit/master/README.md","summary":"Simple text formatting in Swift","url":"https://github.com/luximetr/AnyFormatKit","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AnyFormatKit","products":[{"name":"AnyFormatKit","targets":["AnyFormatKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AnyFormatKit","name":"AnyFormatKit"}],"toolsVersion":"5.0"}},"summary":"Fixed crash while using DefaultTextInputFormatter after entering patternSymbol (“#” by default).","version":"2.5.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AnyFormatKit","products":[{"name":"AnyFormatKit","targets":["AnyFormatKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AnyFormatKit","name":"AnyFormatKit"}],"toolsVersion":"5.0"}},"summary":"","version":"2.5.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"AnyFormatKit","products":[{"name":"AnyFormatKit","targets":["AnyFormatKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AnyFormatKit","name":"AnyFormatKit"}],"toolsVersion":"5.0"}},"summary":"","version":"2.5.0"}]},{"keywords":["ios","logger","logging","macos","networking","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/kean/Pulse/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/kean/Pulse/master/README.md","summary":"Network logger for Apple platforms","url":"https://github.com/kean/Pulse","versions":[{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"tvos","version":"14.0"},{"name":"macos","version":"12.0"},{"name":"watchos","version":"8.0"}],"packageName":"Pulse","products":[{"name":"Pulse","targets":["Pulse"],"type":{"library":["automatic"]}},{"name":"PulseUI","targets":["PulseUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pulse","name":"Pulse"},{"moduleName":"PulseUI","name":"PulseUI"}],"toolsVersion":"5.6"}},"version":"3.2.1"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"tvos","version":"14.0"},{"name":"macos","version":"12.0"},{"name":"watchos","version":"8.0"}],"packageName":"Pulse","products":[{"name":"Pulse","targets":["Pulse"],"type":{"library":["automatic"]}},{"name":"PulseUI","targets":["PulseUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pulse","name":"Pulse"},{"moduleName":"PulseUI","name":"PulseUI"}],"toolsVersion":"5.6"}},"version":"3.2.0"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"tvos","version":"14.0"},{"name":"macos","version":"12.0"},{"name":"watchos","version":"8.0"}],"packageName":"Pulse","products":[{"name":"Pulse","targets":["Pulse"],"type":{"library":["automatic"]}},{"name":"PulseUI","targets":["PulseUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pulse","name":"Pulse"},{"moduleName":"PulseUI","name":"PulseUI"}],"toolsVersion":"5.6"}},"version":"3.2.0-rc.1"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"11.0"},{"name":"watchos","version":"7.0"}],"packageName":"Pulse","products":[{"name":"Pulse","targets":["Pulse"],"type":{"library":["automatic"]}},{"name":"PulseLogHandler","targets":["PulseLogHandler"],"type":{"library":["automatic"]}},{"name":"PulseUI","targets":["PulseUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pulse","name":"Pulse"},{"moduleName":"PulseLogHandler","name":"PulseLogHandler"},{"moduleName":"PulseUI","name":"PulseUI"}],"toolsVersion":"5.6"}},"version":"2.1.4"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"11.0"},{"name":"watchos","version":"7.0"}],"packageName":"Pulse","products":[{"name":"Pulse","targets":["Pulse"],"type":{"library":["automatic"]}},{"name":"PulseLogHandler","targets":["PulseLogHandler"],"type":{"library":["automatic"]}},{"name":"PulseUI","targets":["PulseUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pulse","name":"Pulse"},{"moduleName":"PulseLogHandler","name":"PulseLogHandler"},{"moduleName":"PulseUI","name":"PulseUI"}],"toolsVersion":"5.6"}},"version":"2.1.3"},{"defaultToolsVersion":"5.6","manifests":{"5.6":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"macos","version":"11.0"},{"name":"watchos","version":"7.0"}],"packageName":"Pulse","products":[{"name":"Pulse","targets":["Pulse"],"type":{"library":["automatic"]}},{"name":"PulseLogHandler","targets":["PulseLogHandler"],"type":{"library":["automatic"]}},{"name":"PulseUI","targets":["PulseUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Pulse","name":"Pulse"},{"moduleName":"PulseLogHandler","name":"PulseLogHandler"},{"moduleName":"PulseUI","name":"PulseUI"}],"toolsVersion":"5.6"}},"version":"2.1.2"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/CombineCommunity/CombineDataSources/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/CombineCommunity/CombineDataSources/master/README.md","summary":"Table and collection view data sources for Combine","url":"https://github.com/CombineCommunity/CombineDataSources","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"CombineDataSources","products":[{"name":"CombineDataSources","targets":["CombineDataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineDataSources","name":"CombineDataSources"}],"toolsVersion":"5.1"}},"version":"0.2.5"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"CombineDataSources","products":[{"name":"CombineDataSources","targets":["CombineDataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineDataSources","name":"CombineDataSources"}],"toolsVersion":"5.1"}},"summary":"","version":"0.2.4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"CombineDataSources","products":[{"name":"CombineDataSources","targets":["CombineDataSources"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CombineDataSources","name":"CombineDataSources"}],"toolsVersion":"5.1"}},"version":"0.2.3"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/marmelroy/Localize-Swift/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/marmelroy/Localize-Swift/master/README.md","summary":"Swift friendly localization and i18n with in-app language switching","url":"https://github.com/marmelroy/Localize-Swift","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"Localize_Swift","products":[{"name":"Localize_Swift","targets":["Localize_Swift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Localize_Swift","name":"Localize_Swift"}],"toolsVersion":"5.1"}},"version":"3.2.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"Localize_Swift","products":[{"name":"Localize_Swift","targets":["Localize_Swift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Localize_Swift","name":"Localize_Swift"}],"toolsVersion":"5.1"}},"version":"3.1.0"}]},{"keywords":["auto-layout","constraints","design","dynamic-type","special-characters","swift","text","text-formatting","typography","xml-parsing"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Rightpoint/BonMot/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Rightpoint/BonMot/master/README.md","summary":"Beautiful, easy attributed strings in Swift","url":"https://github.com/Rightpoint/BonMot","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.11"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"2.0"}],"packageName":"BonMot","products":[{"name":"BonMot","targets":["BonMot"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BonMot","name":"BonMot"}],"toolsVersion":"5.3"}},"version":"6.1.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.11"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"2.0"}],"packageName":"BonMot","products":[{"name":"BonMot","targets":["BonMot"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BonMot","name":"BonMot"}],"toolsVersion":"5.3"}},"version":"6.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.11"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"2.0"}],"packageName":"BonMot","products":[{"name":"BonMot","targets":["BonMot"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BonMot","name":"BonMot"}],"toolsVersion":"5.3"}},"version":"6.0.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"},{"name":"macos","version":"10.11"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"2.0"}],"packageName":"BonMot","products":[{"name":"BonMot","targets":["BonMot"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BonMot","name":"BonMot"}],"toolsVersion":"5.1"}},"version":"5.6.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.11"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"BonMot","products":[{"name":"BonMot","targets":["BonMot"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BonMot","name":"BonMot"}],"toolsVersion":"5.1"}},"version":"5.5.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.11"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"BonMot","products":[{"name":"BonMot","targets":["BonMot"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"BonMot","name":"BonMot"}],"toolsVersion":"5.1"}},"version":"5.5.0"}]},{"keywords":["ios","pageviewcontroller","paging","segmentcontrol","swift","uicollectionview","uicollectionviewlayout","uikit","uitableview"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/kazuhiro4949/PagingKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/kazuhiro4949/PagingKit/master/README.md","summary":"PagingKit provides customizable menu UI. It has more flexible layout and design than the other libraries. ","url":"https://github.com/kazuhiro4949/PagingKit","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"PagingKit","products":[{"name":"PagingKit","targets":["PagingKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PagingKit","name":"PagingKit"}],"toolsVersion":"5.1"}},"version":"1.18.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"PagingKit","products":[{"name":"PagingKit","targets":["PagingKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PagingKit","name":"PagingKit"}],"toolsVersion":"5.1"}},"version":"1.18.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"PagingKit","products":[{"name":"PagingKit","targets":["PagingKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PagingKit","name":"PagingKit"}],"toolsVersion":"5.1"}},"version":"1.18.0"}]},{"keywords":["animations","ios","swift","uikit","uipresentationcontroller","uiviewcontroller","viewcontroller-transition"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/SebastianBoldt/Jelly/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SebastianBoldt/Jelly/master/README.md","summary":"🌊 - Jelly is a library for animated, non-interactive & interactive viewcontroller  transitions and presentations with the focus on a simple and yet flexible API.","url":"https://github.com/SebastianBoldt/Jelly","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"10.0"}],"packageName":"Jelly","products":[{"name":"Jelly","targets":["Jelly"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Jelly","name":"Jelly"}],"toolsVersion":"5.1"}},"summary":"2.3.0","version":"2.3.0"}]},{"keywords":["activelabel","swift","twitter","uilabel"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/optonaut/ActiveLabel.swift/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/optonaut/ActiveLabel.swift/master/README.md","summary":"UILabel drop-in replacement supporting Hashtags (#), Mentions (@) and URLs (http://) written in Swift","url":"https://github.com/optonaut/ActiveLabel.swift","versions":[{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"ActiveLabel","products":[{"name":"ActiveLabel","targets":["ActiveLabel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ActiveLabel","name":"ActiveLabel"}],"toolsVersion":"4.2"}},"version":"1.1.5"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"ActiveLabel","products":[{"name":"ActiveLabel","targets":["ActiveLabel"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ActiveLabel","name":"ActiveLabel"}],"toolsVersion":"4.2"}},"version":"1.1.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/kirualex/SwiftyGif/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/kirualex/SwiftyGif/master/README.md","summary":"High performance GIF engine","url":"https://github.com/kirualex/SwiftyGif","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.14"}],"packageName":"SwiftyGif","products":[{"name":"SwiftyGif","targets":["SwiftyGif"],"type":{"library":["automatic"]}},{"name":"SwiftyGif-Dynamic","targets":["SwiftyGif"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"SwiftyGif","name":"SwiftyGif"}],"toolsVersion":"5.0"}},"version":"5.4.4"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.14"}],"packageName":"SwiftyGif","products":[{"name":"SwiftyGif","targets":["SwiftyGif"],"type":{"library":["automatic"]}},{"name":"SwiftyGif-Dynamic","targets":["SwiftyGif"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"SwiftyGif","name":"SwiftyGif"}],"toolsVersion":"5.0"}},"version":"5.4.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.14"}],"packageName":"SwiftyGif","products":[{"name":"SwiftyGif","targets":["SwiftyGif"],"type":{"library":["automatic"]}},{"name":"SwiftyGif-Dynamic","targets":["SwiftyGif"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"SwiftyGif","name":"SwiftyGif"}],"toolsVersion":"5.0"}},"version":"5.4.2"}]},{"keywords":["animation","bodymovin","custom-transitions","ios","ios-animation","ios-transition","keyframes","swift","transition-animation"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/airbnb/lottie-ios/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/airbnb/lottie-ios/master/README.md","summary":"An iOS library to natively render After Effects vector animations","url":"https://github.com/airbnb/lottie-ios","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"}],"packageName":"Lottie","products":[{"name":"Lottie","targets":["Lottie"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Lottie","name":"Lottie"}],"toolsVersion":"5.5"}},"version":"4.1.2"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"}],"packageName":"Lottie","products":[{"name":"Lottie","targets":["Lottie"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Lottie","name":"Lottie"}],"toolsVersion":"5.5"}},"version":"4.1.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"}],"packageName":"Lottie","products":[{"name":"Lottie","targets":["Lottie"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Lottie","name":"Lottie"}],"toolsVersion":"5.5"}},"version":"4.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"}],"packageName":"Lottie","products":[{"name":"Lottie","targets":["Lottie"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Lottie","name":"Lottie"}],"toolsVersion":"5.3"}},"version":"3.5.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"}],"packageName":"Lottie","products":[{"name":"Lottie","targets":["Lottie"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Lottie","name":"Lottie"}],"toolsVersion":"5.3"}},"version":"3.4.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"11.0"}],"packageName":"Lottie","products":[{"name":"Lottie","targets":["Lottie"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Lottie","name":"Lottie"}],"toolsVersion":"5.3"}},"version":"3.4.3"}]},{"keywords":["ios","iphone","screenadapter","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/lixiang1994/UIAdapter/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/lixiang1994/UIAdapter/main/README.md","summary":"An elegant solution to the iOS screen adaptation problem","url":"https://github.com/lixiang1994/UIAdapter","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"UIAdapter","products":[{"name":"UIAdapter","targets":["UIAdapter"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIAdapter","name":"UIAdapter"}],"toolsVersion":"5.5"}},"version":"1.2.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"UIAdapter","products":[{"name":"UIAdapter","targets":["UIAdapter"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIAdapter","name":"UIAdapter"}],"toolsVersion":"5.5"}},"version":"1.2.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"UIAdapter","products":[{"name":"UIAdapter","targets":["UIAdapter"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIAdapter","name":"UIAdapter"}],"toolsVersion":"5.5"}},"version":"1.1.0"}]},{"keywords":["in-app-purchase","ios","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/benjaminmayo/merchantkit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/benjaminmayo/merchantkit/master/README.md","summary":"A modern In-App Purchases management framework for iOS.","url":"https://github.com/benjaminmayo/merchantkit","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"macos","version":"10.14"}],"packageName":"MerchantKit","products":[{"name":"MerchantKit","targets":["MerchantKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MerchantKit","name":"MerchantKit"}],"toolsVersion":"5.3"}},"version":"0.15.0"}]},{"keywords":["date","date-formatting","date-time","nsdate","nsdate-category","swift","swiftdate","timezone"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/malcommac/SwiftDate/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/malcommac/SwiftDate/master/README.md","summary":"🐔 Toolkit to parse, validate, manipulate, compare and display dates, time & timezones in Swift.","url":"https://github.com/malcommac/SwiftDate","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"tvos","version":"13.0"}],"packageName":"SwiftDate","products":[{"name":"SwiftDate","targets":["SwiftDate"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftDate","name":"SwiftDate"}],"toolsVersion":"5.5"}},"version":"7.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"watchos","version":"2.0"},{"name":"tvos","version":"9.0"}],"packageName":"SwiftDate","products":[{"name":"SwiftDate","targets":["SwiftDate"],"type":{"library":["automatic"]}},{"name":"SwiftDateDynamic","targets":["SwiftDate"],"type":{"library":["dynamic"]}},{"name":"SwiftDateStatic","targets":["SwiftDate"],"type":{"library":["static"]}}],"targets":[{"moduleName":"SwiftDate","name":"SwiftDate"}],"toolsVersion":"5.3"}},"summary":"6.3.1","version":"6.3.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"watchos","version":"2.0"},{"name":"tvos","version":"9.0"}],"packageName":"SwiftDate","products":[{"name":"SwiftDate","targets":["SwiftDate"],"type":{"library":["automatic"]}},{"name":"SwiftDateDynamic","targets":["SwiftDate"],"type":{"library":["dynamic"]}},{"name":"SwiftDateStatic","targets":["SwiftDate"],"type":{"library":["static"]}}],"targets":[{"moduleName":"SwiftDate","name":"SwiftDate"}],"toolsVersion":"5.3"}},"summary":"6.3.0","version":"6.3.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"watchos","version":"2.0"},{"name":"tvos","version":"9.0"}],"packageName":"SwiftDate","products":[{"name":"SwiftDate","targets":["SwiftDate"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftDate","name":"SwiftDate"}],"toolsVersion":"5.3"}},"summary":"6.2.0","version":"6.2.0"}]},{"keywords":["animation","button","download","downloadbutton","ios","ios11","swift","ui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/amerhukic/AHDownloadButton/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/amerhukic/AHDownloadButton/master/README.md","summary":"Customizable download button with progress and transition animations. It is based on Apple's App Store download button.","url":"https://github.com/amerhukic/AHDownloadButton","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"}],"packageName":"AHDownloadButton","products":[{"name":"AHDownloadButton","targets":["AHDownloadButton"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AHDownloadButton","name":"AHDownloadButton"}],"toolsVersion":"5.0"}},"version":"1.3.0"}]},{"keywords":["app","apple","attributedstring","attributes","click","cocoapods","ios","label","macos","nsattributedstring","paragraph","regex","rich-text","string","swift","swift5","text","textview","tvos","watchos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/lixiang1994/AttributedString/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/lixiang1994/AttributedString/master/README.md","summary":"基于Swift插值方式优雅的构建富文本, 支持点击长按事件, 支持不同类型过滤, 支持自定义视图等.","url":"https://github.com/lixiang1994/AttributedString","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.13"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"5.0"}],"packageName":"AttributedString","products":[{"name":"AttributedString","targets":["AttributedString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AttributedString","name":"AttributedString"}],"toolsVersion":"5.3"}},"version":"3.3.5"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.13"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"5.0"}],"packageName":"AttributedString","products":[{"name":"AttributedString","targets":["AttributedString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AttributedString","name":"AttributedString"}],"toolsVersion":"5.3"}},"version":"3.3.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.13"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"5.0"}],"packageName":"AttributedString","products":[{"name":"AttributedString","targets":["AttributedString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AttributedString","name":"AttributedString"}],"toolsVersion":"5.3"}},"version":"3.3.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.13"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"5.0"}],"packageName":"AttributedString","products":[{"name":"AttributedString","targets":["AttributedString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AttributedString","name":"AttributedString"}],"toolsVersion":"5.3"}},"version":"2.2.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.13"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"5.0"}],"packageName":"AttributedString","products":[{"name":"AttributedString","targets":["AttributedString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AttributedString","name":"AttributedString"}],"toolsVersion":"5.3"}},"version":"2.2.1"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.13"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"5.0"}],"packageName":"AttributedString","products":[{"name":"AttributedString","targets":["AttributedString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AttributedString","name":"AttributedString"}],"toolsVersion":"5.2"}},"version":"2.2.0"}]},{"keywords":["popup","swiftui","swiftui-components","swiftui-framework","toast"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/exyte/PopupView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/exyte/PopupView/master/README.md","summary":"Toasts and popups library written with SwiftUI","url":"https://github.com/exyte/PopupView","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"PopupView","products":[{"name":"PopupView","targets":["PopupView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PopupView","name":"PopupView"}],"toolsVersion":"5.3"}},"summary":"","version":"2.0.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"PopupView","products":[{"name":"PopupView","targets":["PopupView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PopupView","name":"PopupView"}],"toolsVersion":"5.3"}},"summary":"","version":"2.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"PopupView","products":[{"name":"PopupView","targets":["PopupView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PopupView","name":"PopupView"}],"toolsVersion":"5.3"}},"summary":"","version":"1.3.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"tvos","version":"13.0"}],"packageName":"PopupView","products":[{"name":"PopupView","targets":["PopupView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PopupView","name":"PopupView"}],"toolsVersion":"5.1"}},"summary":"","version":"1.3.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"watchos","version":"6.0"},{"name":"tvos","version":"13.0"}],"packageName":"PopupView","products":[{"name":"PopupView","targets":["PopupView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PopupView","name":"PopupView"}],"toolsVersion":"5.1"}},"summary":"","version":"1.2.1"}]},{"keywords":["concurrency","coredata","coredata-swift","ios","ios-swift","macos","orm","swift","swift-concurrency"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/prisma-ai/Sworm/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/prisma-ai/Sworm/main/README.md","summary":"CoreData based Swift ORM","url":"https://github.com/prisma-ai/Sworm","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"}],"packageName":"Sworm","products":[{"name":"Sworm","targets":["Sworm"],"type":{"library":["automatic"]}},{"name":"SwormTools","targets":["SwormTools"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sworm","name":"Sworm"},{"moduleName":"SwormTools","name":"SwormTools"}],"toolsVersion":"5.7"}},"summary":"","version":"1.3.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"}],"packageName":"Sworm","products":[{"name":"Sworm","targets":["Sworm"],"type":{"library":["automatic"]}},{"name":"SwormTools","targets":["SwormTools"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sworm","name":"Sworm"},{"moduleName":"SwormTools","name":"SwormTools"}],"toolsVersion":"5.5"}},"summary":"","version":"1.2.2"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"}],"packageName":"Sworm","products":[{"name":"Sworm","targets":["Sworm"],"type":{"library":["automatic"]}},{"name":"SwormTools","targets":["SwormTools"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Sworm","name":"Sworm"},{"moduleName":"SwormTools","name":"SwormTools"}],"toolsVersion":"5.5"}},"summary":"","version":"1.2.1"}]},{"keywords":["cloudkit","coredata","icloud","ios","realmswift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/mentrena/SyncKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/mentrena/SyncKit/master/README.md","summary":"Automatic CloudKit synchronization","url":"https://github.com/mentrena/SyncKit","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"3.0"}],"packageName":"SyncKit","products":[{"name":"SyncKit/CoreData","targets":["SyncKit/CoreData"],"type":{"library":["automatic"]}},{"name":"SyncKit/Realm","targets":["SyncKit/Realm"],"type":{"library":["automatic"]}},{"name":"SyncKit/RealmSwift","targets":["SyncKit/RealmSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SyncKit_CoreData","name":"SyncKit/CoreData"},{"moduleName":"SyncKit_Realm","name":"SyncKit/Realm"},{"moduleName":"SyncKit_RealmSwift","name":"SyncKit/RealmSwift"}],"toolsVersion":"5.3"}},"version":"1.3.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"3.0"}],"packageName":"SyncKit","products":[{"name":"SyncKit/CoreData","targets":["SyncKit/CoreData"],"type":{"library":["automatic"]}},{"name":"SyncKit/Realm","targets":["SyncKit/Realm"],"type":{"library":["automatic"]}},{"name":"SyncKit/RealmSwift","targets":["SyncKit/RealmSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SyncKit_CoreData","name":"SyncKit/CoreData"},{"moduleName":"SyncKit_Realm","name":"SyncKit/Realm"},{"moduleName":"SyncKit_RealmSwift","name":"SyncKit/RealmSwift"}],"toolsVersion":"5.3"}},"version":"1.3.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"3.0"}],"packageName":"SyncKit","products":[{"name":"SyncKit/CoreData","targets":["SyncKit/CoreData"],"type":{"library":["automatic"]}},{"name":"SyncKit/Realm","targets":["SyncKit/Realm"],"type":{"library":["automatic"]}},{"name":"SyncKit/RealmSwift","targets":["SyncKit/RealmSwift"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SyncKit_CoreData","name":"SyncKit/CoreData"},{"moduleName":"SyncKit_Realm","name":"SyncKit/Realm"},{"moduleName":"SyncKit_RealmSwift","name":"SyncKit/RealmSwift"}],"toolsVersion":"5.3"}},"version":"1.3.0"}]},{"keywords":["carthage","cocoapods","forms","hacktoberfest","ios","ios-forms","ios-ui","swift","swift-library","uitableview","validations"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/xmartlabs/Eureka/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/xmartlabs/Eureka/master/README.md","summary":"Elegant iOS form builder in Swift","url":"https://github.com/xmartlabs/Eureka","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Eureka","products":[{"name":"Eureka","targets":["Eureka"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Eureka","name":"Eureka"}],"toolsVersion":"5.0"}},"version":"5.4.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Eureka","products":[{"name":"Eureka","targets":["Eureka"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Eureka","name":"Eureka"}],"toolsVersion":"5.0"}},"version":"5.3.6"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"Eureka","products":[{"name":"Eureka","targets":["Eureka"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Eureka","name":"Eureka"}],"toolsVersion":"5.0"}},"version":"5.3.5"}]},{"keywords":["ios","macos","swift","swift-package","swiftui","whatsnew"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/SvenTiigi/WhatsNewKit/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SvenTiigi/WhatsNewKit/main/README.md","summary":"Showcase your awesome new app features 📱","url":"https://github.com/SvenTiigi/WhatsNewKit","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"}],"packageName":"WhatsNewKit","products":[{"name":"WhatsNewKit","targets":["WhatsNewKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WhatsNewKit","name":"WhatsNewKit"}],"toolsVersion":"5.3"}},"version":"2.0.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"}],"packageName":"WhatsNewKit","products":[{"name":"WhatsNewKit","targets":["WhatsNewKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WhatsNewKit","name":"WhatsNewKit"}],"toolsVersion":"5.3"}},"version":"2.0.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"11.0"}],"packageName":"WhatsNewKit","products":[{"name":"WhatsNewKit","targets":["WhatsNewKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WhatsNewKit","name":"WhatsNewKit"}],"toolsVersion":"5.3"}},"version":"2.0.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"WhatsNewKit","products":[{"name":"WhatsNewKit","targets":["WhatsNewKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WhatsNewKit","name":"WhatsNewKit"}],"toolsVersion":"5.0"}},"summary":"1.3.7 (fastlane)","version":"1.3.7"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"WhatsNewKit","products":[{"name":"WhatsNewKit","targets":["WhatsNewKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WhatsNewKit","name":"WhatsNewKit"}],"toolsVersion":"5.0"}},"summary":"1.3.6 (fastlane)","version":"1.3.6"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"WhatsNewKit","products":[{"name":"WhatsNewKit","targets":["WhatsNewKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"WhatsNewKit","name":"WhatsNewKit"}],"toolsVersion":"5.0"}},"summary":"1.3.5 (fastlane)","version":"1.3.5"}]},{"keywords":["cocoapods","imagescrollview","photo-viewer","scrollable-features","swift","zoomable"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/huynguyencong/ImageScrollView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/huynguyencong/ImageScrollView/master/README.md","summary":"Scrollable and zoomable image view for iOS in Swift","url":"https://github.com/huynguyencong/ImageScrollView","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"ImageScrollView","products":[{"name":"ImageScrollView","targets":["ImageScrollView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ImageScrollView","name":"ImageScrollView"}],"toolsVersion":"5.2"}},"summary":"","version":"1.9.3"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"ImageScrollView","products":[{"name":"ImageScrollView","targets":["ImageScrollView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ImageScrollView","name":"ImageScrollView"}],"toolsVersion":"5.2"}},"summary":"","version":"1.9.2"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"ImageScrollView","products":[{"name":"ImageScrollView","targets":["ImageScrollView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ImageScrollView","name":"ImageScrollView"}],"toolsVersion":"5.2"}},"summary":"","version":"1.9.1"}]},{"keywords":["drag","ios","swift","swipe","tableview","uikit","uitableview","uitableviewcell"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/SwipeCellKit/SwipeCellKit/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SwipeCellKit/SwipeCellKit/develop/README.md","summary":"Swipeable UITableViewCell/UICollectionViewCell based on the stock Mail.app, implemented in Swift.","url":"https://github.com/SwipeCellKit/SwipeCellKit","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"SwipeCellKit","products":[{"name":"SwipeCellKit","targets":["SwipeCellKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwipeCellKit","name":"SwipeCellKit"}],"toolsVersion":"5.0"}},"version":"2.7.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"SwipeCellKit","products":[{"name":"SwipeCellKit","targets":["SwipeCellKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwipeCellKit","name":"SwipeCellKit"}],"toolsVersion":"5.0"}},"version":"2.7.0"}]},{"keywords":["userdefaults"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ddddxxx/GenericID/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ddddxxx/GenericID/master/README.md","summary":"A Swift extension to use string-based API in a type-safe way.","url":"https://github.com/ddddxxx/GenericID","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"GenericID","products":[{"name":"GenericID","targets":["GenericID"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"GenericID","name":"GenericID"}],"toolsVersion":"5.2"}},"version":"v0.7.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"GenericID","products":[{"name":"GenericID","targets":["GenericID"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"GenericID","name":"GenericID"}],"toolsVersion":"5.2"}},"version":"v0.6.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"GenericID","products":[{"name":"GenericID","targets":["GenericID"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"GenericID","name":"GenericID"}],"toolsVersion":"5.0"}},"summary":"","version":"v0.5.2"}]},{"keywords":["async","combine","event","publisher","reactive","rx","subscriber"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/cx-org/CombineX/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/cx-org/CombineX/master/README.md","summary":"Open source implementation of Apple's Combine","url":"https://github.com/cx-org/CombineX","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"packageName":"CombineX","products":[{"name":"CombineX","targets":["CombineX","CXFoundation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CXFoundation","name":"CXFoundation"},{"moduleName":"CombineX","name":"CombineX"}],"toolsVersion":"5.2"}},"version":"0.4.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"CombineX","products":[{"name":"CXShim","targets":["CXShim"],"type":{"library":["automatic"]}},{"name":"CXTest","targets":["CXTest"],"type":{"library":["automatic"]}},{"name":"CombineX","targets":["CombineX","CXFoundation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CXFoundation","name":"CXFoundation"},{"moduleName":"CXShim","name":"CXShim"},{"moduleName":"CXTest","name":"CXTest"},{"moduleName":"CombineX","name":"CombineX"}],"toolsVersion":"5.2"}},"version":"0.3.2"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"CombineX","products":[{"name":"CXShim","targets":["CXShim"],"type":{"library":["automatic"]}},{"name":"CXTest","targets":["CXTest"],"type":{"library":["automatic"]}},{"name":"CombineX","targets":["CombineX","CXFoundation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CXFoundation","name":"CXFoundation"},{"moduleName":"CXShim","name":"CXShim"},{"moduleName":"CXTest","name":"CXTest"},{"moduleName":"CombineX","name":"CombineX"}],"toolsVersion":"5.2"}},"version":"0.3.1"}]},{"keywords":["corefoundation","coregraphics","coretext","imageio","iokit"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ddddxxx/SwiftCF/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ddddxxx/SwiftCF/master/README.md","summary":"Use CoreFoundation based framework in Swift painlessly.","url":"https://github.com/ddddxxx/SwiftCF","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"SwiftCF","products":[{"name":"SwiftCF","targets":["SwiftCF","CoreGraphicsExt","CoreTextExt","IOKitExt","ImageIOExt","AccessibilityExt"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AccessibilityExt","name":"AccessibilityExt"},{"moduleName":"CoreGraphicsExt","name":"CoreGraphicsExt"},{"moduleName":"CoreTextExt","name":"CoreTextExt"},{"moduleName":"IOKitExt","name":"IOKitExt"},{"moduleName":"ImageIOExt","name":"ImageIOExt"},{"moduleName":"SwiftCF","name":"SwiftCF"}],"toolsVersion":"5.1"}},"version":"v0.2.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"SwiftCF","products":[{"name":"SwiftCF","targets":["SwiftCF","CoreGraphicsExt","CoreTextExt","IOKitExt","ImageIOExt","AccessibilityExt"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AccessibilityExt","name":"AccessibilityExt"},{"moduleName":"CoreGraphicsExt","name":"CoreGraphicsExt"},{"moduleName":"CoreTextExt","name":"CoreTextExt"},{"moduleName":"IOKitExt","name":"IOKitExt"},{"moduleName":"ImageIOExt","name":"ImageIOExt"},{"moduleName":"SwiftCF","name":"SwiftCF"}],"toolsVersion":"5.1"}},"version":"v0.2.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"SwiftCF","products":[{"name":"SwiftCF","targets":["SwiftCF","CoreGraphicsExt","CoreTextExt","IOKitExt","ImageIOExt","AccessibilityExt"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AccessibilityExt","name":"AccessibilityExt"},{"moduleName":"CoreGraphicsExt","name":"CoreGraphicsExt"},{"moduleName":"CoreTextExt","name":"CoreTextExt"},{"moduleName":"IOKitExt","name":"IOKitExt"},{"moduleName":"ImageIOExt","name":"ImageIOExt"},{"moduleName":"SwiftCF","name":"SwiftCF"}],"toolsVersion":"5.1"}},"version":"v0.1.6"}]},{"keywords":["swift","syntactic-sugar"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/devxoul/Then/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/devxoul/Then/master/README.md","summary":"✨ Super sweet syntactic sugar for Swift initializers","url":"https://github.com/devxoul/Then","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"Then","products":[{"name":"Then","targets":["Then"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Then","name":"Then"}],"toolsVersion":"5.0"}},"version":"3.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"Then","products":[{"name":"Then","targets":["Then"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Then","name":"Then"}],"toolsVersion":"5.0"}},"version":"2.7.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"Then","products":[{"name":"Then","targets":["Then"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Then","name":"Then"}],"toolsVersion":"5.0"}},"version":"2.6.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"Then","products":[{"name":"Then","targets":["Then"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Then","name":"Then"}],"toolsVersion":"5.0"}},"version":"2.5.0"}]},{"keywords":["cocoa","generic","reusable","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/devxoul/ReusableKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/devxoul/ReusableKit/master/README.md","summary":"Generic reusables for UICollectionView and UITableView","url":"https://github.com/devxoul/ReusableKit","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"}],"packageName":"ReusableKit","products":[{"name":"ReusableKit","targets":["ReusableKit"],"type":{"library":["automatic"]}},{"name":"RxReusableKit","targets":["RxReusableKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReusableKit","name":"ReusableKit"},{"moduleName":"RxReusableKit","name":"RxReusableKit"}],"toolsVersion":"5.0"}},"version":"3.0.0"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"ReusableKit","products":[{"name":"ReusableKit","targets":["ReusableKit"],"type":{"library":["automatic"]}},{"name":"RxReusableKit","targets":["RxReusableKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReusableKit","name":"ReusableKit"},{"moduleName":"RxReusableKit","name":"RxReusableKit"}],"toolsVersion":"4.2"}},"version":"2.1.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"ReusableKit","products":[{"name":"ReusableKit","targets":["ReusableKit"],"type":{"library":["automatic"]}},{"name":"RxReusableKit","targets":["RxReusableKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReusableKit","name":"ReusableKit"},{"moduleName":"RxReusableKit","name":"RxReusableKit"}],"toolsVersion":"4.0"}},"version":"2.0.1"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"ReusableKit","products":[{"name":"ReusableKit","targets":["ReusableKit"],"type":{"library":["automatic"]}},{"name":"RxReusableKit","targets":["RxReusableKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"ReusableKit","name":"ReusableKit"},{"moduleName":"RxReusableKit","name":"RxReusableKit"}],"toolsVersion":"4.0"}},"version":"2.0.0"}]},{"keywords":["category","categoryview","collectionview","indicator","page","pagecontrol","paging","pagingview","scrollview","segment","segmented","segmentedcontrol","segmentedview","split","swift","switch","uipagecontrol","uipageviewcontroller","uisplitviewcontroller"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/pujiaxin33/JXSegmentedView/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/pujiaxin33/JXSegmentedView/master/README.md","summary":"A powerful and easy to use segmented view (segmentedcontrol, pagingview, pagerview, pagecontrol, categoryview) (腾讯新闻、今日头条、QQ音乐、网易云音乐、京东、爱奇艺、腾讯视频、淘宝、天猫、简书、微博等所有主流APP分类切换滚动视图)","url":"https://github.com/pujiaxin33/JXSegmentedView","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"JXSegmentedView","products":[{"name":"JXSegmentedView","targets":["JXSegmentedView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JXSegmentedView","name":"JXSegmentedView"}],"toolsVersion":"5.1"}},"summary":"","version":"1.3.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"JXSegmentedView","products":[{"name":"JXSegmentedView","targets":["JXSegmentedView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JXSegmentedView","name":"JXSegmentedView"}],"toolsVersion":"5.1"}},"version":"1.2.7"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"JXSegmentedView","products":[{"name":"JXSegmentedView","targets":["JXSegmentedView"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JXSegmentedView","name":"JXSegmentedView"}],"toolsVersion":"5.1"}},"version":"1.2.6"}]},{"keywords":["functionbuilder","nsattributedstring","swift5-1","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ethanhuang13/NSAttributedStringBuilder/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/ethanhuang13/NSAttributedStringBuilder/master/README.md","summary":"Composing NSAttributedString with SwiftUI-style syntax","url":"https://github.com/ethanhuang13/NSAttributedStringBuilder","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"NSAttributedStringBuilder","products":[{"name":"NSAttributedStringBuilder","targets":["NSAttributedStringBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NSAttributedStringBuilder","name":"NSAttributedStringBuilder"}],"toolsVersion":"5.1"}},"version":"0.4.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"NSAttributedStringBuilder","products":[{"name":"NSAttributedStringBuilder","targets":["NSAttributedStringBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NSAttributedStringBuilder","name":"NSAttributedStringBuilder"}],"toolsVersion":"5.1"}},"summary":"","version":"0.3.3"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"NSAttributedStringBuilder","products":[{"name":"NSAttributedStringBuilder","targets":["NSAttributedStringBuilder"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"NSAttributedStringBuilder","name":"NSAttributedStringBuilder"}],"toolsVersion":"5.1"}},"summary":"","version":"0.3.2"}]},{"keywords":["carthage","closures","cocoapods","convenience-methods","datasource","delegation","kvo","swift","uibutton","uicollectionview","uicontrol","uigesturerecognizer","uiimagepickercontroller","uipickerview","uiscrollview","uitableview","uitextfield","uiview"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/vhesener/Closures/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/vhesener/Closures/master/README.md","summary":"Swifty closures for UIKit and Foundation","url":"https://github.com/vhesener/Closures","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"Closures","products":[{"name":"Closures","targets":["Closures"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Closures","name":"Closures"}],"toolsVersion":"5.0"}},"version":"0.7.0"}]},{"keywords":["extension","swift"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/JoanKing/JKSwiftExtension/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/JoanKing/JKSwiftExtension/master/README.md","summary":"Swift常用扩展、组件、协议，方便项目快速搭建，提供完整清晰的Demo示例，不断的完善中...... ","url":"https://github.com/JoanKing/JKSwiftExtension","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"JKSwiftExtension","products":[{"name":"JKSwiftExtension","targets":["JKSwiftExtension"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JKSwiftExtension","name":"JKSwiftExtension"}],"toolsVersion":"5.5"}},"summary":"UIFont扩展的优化和NSAttributedString扩展增加测试用例","version":"2.2.6"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"JKSwiftExtension","products":[{"name":"JKSwiftExtension","targets":["JKSwiftExtension"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JKSwiftExtension","name":"JKSwiftExtension"}],"toolsVersion":"5.5"}},"version":"2.2.5"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"JKSwiftExtension","products":[{"name":"JKSwiftExtension","targets":["JKSwiftExtension"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JKSwiftExtension","name":"JKSwiftExtension"}],"toolsVersion":"5.5"}},"summary":"新增JKCircleProgressView圆形进度条","version":"2.2.4"}]},{"keywords":["attributedstring","auto-layout","dynamic-type","nsattributedstring","swift","swift-library","text","text-formatting","typography","xml-parsing"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/malcommac/SwiftRichString/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/malcommac/SwiftRichString/master/README.md","summary":"👩‍🎨 Elegant Attributed String composition in Swift sauce","url":"https://github.com/malcommac/SwiftRichString","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"SwiftRichString","products":[{"name":"SwiftRichString","targets":["SwiftRichString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftRichString","name":"SwiftRichString"}],"toolsVersion":"5.3"}},"version":"4.0.0-alpha-6"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"SwiftRichString","products":[{"name":"SwiftRichString","targets":["SwiftRichString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftRichString","name":"SwiftRichString"}],"toolsVersion":"5.3"}},"version":"4.0.0-alpha-5"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"SwiftRichString","products":[{"name":"SwiftRichString","targets":["SwiftRichString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftRichString","name":"SwiftRichString"}],"toolsVersion":"5.3"}},"version":"4.0.0-alpha-4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"SwiftRichString","products":[{"name":"SwiftRichString","targets":["SwiftRichString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftRichString","name":"SwiftRichString"}],"toolsVersion":"5.1"}},"summary":"3.7.2","version":"3.7.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"SwiftRichString","products":[{"name":"SwiftRichString","targets":["SwiftRichString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftRichString","name":"SwiftRichString"}],"toolsVersion":"5.1"}},"summary":"3.7.1","version":"3.7.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"SwiftRichString","products":[{"name":"SwiftRichString","targets":["SwiftRichString"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftRichString","name":"SwiftRichString"}],"toolsVersion":"5.1"}},"summary":"3.7.0","version":"3.7.0"}]},{"keywords":["ios","macos","svg","swift","tvos"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/mchoe/SwiftSVG/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/mchoe/SwiftSVG/master/README.md","summary":"A simple, performant, and lightweight SVG parser","url":"https://github.com/mchoe/SwiftSVG","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"}],"packageName":"SwiftSVG","products":[{"name":"SwiftSVG","targets":["SwiftSVG"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftSVG","name":"SwiftSVG"}],"toolsVersion":"5.0"}},"summary":"v2.3.2","version":"v2.3.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"}],"packageName":"SwiftSVG","products":[{"name":"SwiftSVG","targets":["SwiftSVG"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftSVG","name":"SwiftSVG"}],"toolsVersion":"5.0"}},"version":"v2.3.1"}]},{"keywords":["ios","nsuserdefaults","swift","swifty"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/sunshinejr/SwiftyUserDefaults/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/sunshinejr/SwiftyUserDefaults/master/README.md","summary":"Modern Swift API for NSUserDefaults","url":"https://github.com/sunshinejr/SwiftyUserDefaults","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"SwiftyUserDefaults","products":[{"name":"SwiftyUserDefaults","targets":["SwiftyUserDefaults"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyUserDefaults","name":"SwiftyUserDefaults"}],"toolsVersion":"5.0"}},"version":"5.3.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"SwiftyUserDefaults","products":[{"name":"SwiftyUserDefaults","targets":["SwiftyUserDefaults"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyUserDefaults","name":"SwiftyUserDefaults"}],"toolsVersion":"5.0"}},"version":"5.2.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.11"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"SwiftyUserDefaults","products":[{"name":"SwiftyUserDefaults","targets":["SwiftyUserDefaults"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyUserDefaults","name":"SwiftyUserDefaults"}],"toolsVersion":"5.0"}},"version":"5.1.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"SwiftyUserDefaults","products":[{"name":"SwiftyUserDefaults","targets":["SwiftyUserDefaults"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyUserDefaults","name":"SwiftyUserDefaults"}],"toolsVersion":"4.0"}},"version":"4.0.0"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"SwiftyUserDefaults","products":[{"name":"SwiftyUserDefaults","targets":["SwiftyUserDefaults"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyUserDefaults","name":"SwiftyUserDefaults"}],"toolsVersion":"4.0"}},"version":"4.0.0-beta.2"},{"defaultToolsVersion":"4.0","manifests":{"4.0":{"packageName":"SwiftyUserDefaults","products":[{"name":"SwiftyUserDefaults","targets":["SwiftyUserDefaults"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyUserDefaults","name":"SwiftyUserDefaults"}],"toolsVersion":"4.0"}},"version":"4.0.0-beta.1"}]},{"keywords":["attributedstring","color","compatibility","control-flow","framework","library","macos","progressbar","scroll","swift","swift-package-manager","swiftui","textview","toolbar"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/SwiftUIX/SwiftUIX/master/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/SwiftUIX/SwiftUIX/master/README.md","summary":"Extensions and additions to the standard SwiftUI library.","url":"https://github.com/SwiftUIX/SwiftUIX","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"SwiftUIX","products":[{"name":"SwiftUIX","targets":["SwiftUIX"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIX","name":"SwiftUIX"}],"toolsVersion":"5.5"}},"summary":"","version":"0.1.3"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"SwiftUIX","products":[{"name":"SwiftUIX","targets":["SwiftUIX"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIX","name":"SwiftUIX"}],"toolsVersion":"5.5"}},"summary":"","version":"0.1.2"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"watchos","version":"6.0"}],"packageName":"SwiftUIX","products":[{"name":"SwiftUIX","targets":["SwiftUIX"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIX","name":"SwiftUIX"}],"toolsVersion":"5.5"}},"summary":"","version":"0.1.1"}]},{"keywords":["autocomplete-search","cllocationmanager","geocoding-library","ibeacon","location-services","location-tracker","locationtracking","swift-library"],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/malcommac/SwiftLocation/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/malcommac/SwiftLocation/master/README.md","summary":"🛰 CoreLocation Made Easy - Efficient & Easy Location Tracker, IP Location, Gecoder, Geofence, Autocomplete, Beacon Ranging, Broadcaster and Visits Monitoring","url":"https://github.com/malcommac/SwiftLocation","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"11.0"},{"name":"ios","version":"11.0"}],"packageName":"SwiftLocation","products":[{"name":"SwiftLocation","targets":["SwiftLocation"],"type":{"library":["automatic"]}},{"name":"SwiftLocation-Dynamic","targets":["SwiftLocation"],"type":{"library":["dynamic"]}},{"name":"SwiftLocationBeaconBroadcaster","targets":["SwiftLocationBeaconBroadcaster"],"type":{"library":["automatic"]}},{"name":"SwiftLocationBeaconBroadcaster.Dynamic","targets":["SwiftLocationBeaconBroadcaster"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"SwiftLocation","name":"SwiftLocation"},{"moduleName":"SwiftLocationBeaconBroadcaster","name":"SwiftLocationBeaconBroadcaster"}],"toolsVersion":"5.3"}},"summary":"5.1.0","version":"5.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"11.0"},{"name":"ios","version":"11.0"}],"packageName":"SwiftLocation","products":[{"name":"SwiftLocation","targets":["SwiftLocation"],"type":{"library":["automatic"]}},{"name":"SwiftLocation-Dynamic","targets":["SwiftLocation"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"SwiftLocation","name":"SwiftLocation"}],"toolsVersion":"5.3"}},"summary":"5.0.3","version":"5.0.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"11.0"},{"name":"ios","version":"11.0"}],"packageName":"SwiftLocation","products":[{"name":"SwiftLocation","targets":["SwiftLocation"],"type":{"library":["automatic"]}},{"name":"SwiftLocation-Dynamic","targets":["SwiftLocation"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"SwiftLocation","name":"SwiftLocation"}],"toolsVersion":"5.3"}},"summary":"5.0.2","version":"5.0.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.3"}],"packageName":"SwiftLocation","products":[{"name":"SwiftLocation","targets":["SwiftLocation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftLocation","name":"SwiftLocation"}],"toolsVersion":"5.0"}},"summary":"4.2.0","version":"4.2.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"SwiftLocation","products":[{"name":"SwiftLocation","targets":["SwiftLocation"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftLocation","name":"SwiftLocation"}],"toolsVersion":"5.0"}},"summary":"4.1.0","version":"4.1.0"}]},{"keywords":["objc","promises","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/mxcl/PromiseKit/v6/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/mxcl/PromiseKit/v6/README.md","summary":"Promises for Swift & ObjC.","url":"https://github.com/mxcl/PromiseKit","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"PromiseKit","products":[{"name":"PMKCloudKit","targets":["PMKCloudKit"],"type":{"library":["automatic"]}},{"name":"PMKCoreLocation","targets":["PMKCoreLocation"],"type":{"library":["automatic"]}},{"name":"PMKFoundation","targets":["PMKFoundation"],"type":{"library":["automatic"]}},{"name":"PMKHealthKit","targets":["PMKHealthKit"],"type":{"library":["automatic"]}},{"name":"PMKHomeKit","targets":["PMKHomeKit"],"type":{"library":["automatic"]}},{"name":"PMKMapKit","targets":["PMKMapKit"],"type":{"library":["automatic"]}},{"name":"PMKPhotos","targets":["PMKPhotos"],"type":{"library":["automatic"]}},{"name":"PMKStoreKit","targets":["PMKStoreKit"],"type":{"library":["automatic"]}},{"name":"PromiseKit","targets":["PromiseKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PMKCloudKit","name":"PMKCloudKit"},{"moduleName":"PMKCoreLocation","name":"PMKCoreLocation"},{"moduleName":"PMKFoundation","name":"PMKFoundation"},{"moduleName":"PMKHealthKit","name":"PMKHealthKit"},{"moduleName":"PMKHomeKit","name":"PMKHomeKit"},{"moduleName":"PMKMapKit","name":"PMKMapKit"},{"moduleName":"PMKPhotos","name":"PMKPhotos"},{"moduleName":"PMKStoreKit","name":"PMKStoreKit"},{"moduleName":"PromiseKit","name":"PromiseKit"}],"toolsVersion":"5.3"}},"version":"7.0.0-rc2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"PromiseKit","products":[{"name":"PMKCloudKit","targets":["PMKCloudKit"],"type":{"library":["automatic"]}},{"name":"PMKCoreLocation","targets":["PMKCoreLocation"],"type":{"library":["automatic"]}},{"name":"PMKFoundation","targets":["PMKFoundation"],"type":{"library":["automatic"]}},{"name":"PMKHealthKit","targets":["PMKHealthKit"],"type":{"library":["automatic"]}},{"name":"PMKHomeKit","targets":["PMKHomeKit"],"type":{"library":["automatic"]}},{"name":"PMKMapKit","targets":["PMKMapKit"],"type":{"library":["automatic"]}},{"name":"PMKPhotos","targets":["PMKPhotos"],"type":{"library":["automatic"]}},{"name":"PMKStoreKit","targets":["PMKStoreKit"],"type":{"library":["automatic"]}},{"name":"PromiseKit","targets":["PromiseKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PMKCloudKit","name":"PMKCloudKit"},{"moduleName":"PMKCoreLocation","name":"PMKCoreLocation"},{"moduleName":"PMKFoundation","name":"PMKFoundation"},{"moduleName":"PMKHealthKit","name":"PMKHealthKit"},{"moduleName":"PMKHomeKit","name":"PMKHomeKit"},{"moduleName":"PMKMapKit","name":"PMKMapKit"},{"moduleName":"PMKPhotos","name":"PMKPhotos"},{"moduleName":"PMKStoreKit","name":"PMKStoreKit"},{"moduleName":"PromiseKit","name":"PromiseKit"}],"toolsVersion":"5.3"}},"version":"7.0.0-rc1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"2.0"}],"packageName":"PromiseKit","products":[{"name":"PromiseKit","targets":["PromiseKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PromiseKit","name":"PromiseKit"}],"toolsVersion":"5.0"}},"version":"7.0.0-alpha3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"PromiseKit","products":[{"name":"PromiseKit","targets":["PromiseKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PromiseKit","name":"PromiseKit"}],"toolsVersion":"5.3"}},"version":"6.20.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"PromiseKit","products":[{"name":"PromiseKit","targets":["PromiseKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PromiseKit","name":"PromiseKit"}],"toolsVersion":"5.3"}},"version":"6.19.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"2.0"}],"packageName":"PromiseKit","products":[{"name":"PromiseKit","targets":["PromiseKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PromiseKit","name":"PromiseKit"}],"toolsVersion":"5.3"}},"version":"6.18.1"}]},{"keywords":["actionsheet","alert","alertviewcontroller","banner","dark-modes","entry","messages","modalview","notification","popup","swift","swift4","swiftentrykit","uialertcontroller","uiwindow"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/huri000/SwiftEntryKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/huri000/SwiftEntryKit/master/README.md","summary":"SwiftEntryKit is a presentation library for iOS. It can be used to easily display overlays within your iOS apps.","url":"https://github.com/huri000/SwiftEntryKit","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"SwiftEntryKit","products":[{"name":"SwiftEntryKit","targets":["SwiftEntryKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftEntryKit","name":"SwiftEntryKit"}],"toolsVersion":"5.0"}},"summary":"","version":"2.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"SwiftEntryKit","products":[{"name":"SwiftEntryKit","targets":["SwiftEntryKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftEntryKit","name":"SwiftEntryKit"}],"toolsVersion":"5.0"}},"summary":"","version":"1.2.7"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"SwiftEntryKit","products":[{"name":"SwiftEntryKit","targets":["SwiftEntryKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftEntryKit","name":"SwiftEntryKit"}],"toolsVersion":"5.0"}},"summary":"","version":"1.2.6"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"SwiftEntryKit","products":[{"name":"SwiftEntryKit","targets":["SwiftEntryKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftEntryKit","name":"SwiftEntryKit"}],"toolsVersion":"5.0"}},"version":"1.2.5"}]},{"keywords":["apple-tv","ios","logging","macos","server-side-swift","swift","swift-framework","swift4","swift5","swiftybeaver-platform","vapor"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/SwiftyBeaver/SwiftyBeaver/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SwiftyBeaver/SwiftyBeaver/master/README.md","summary":"Convenient & secure logging during development & release in Swift 4 & 5","url":"https://github.com/SwiftyBeaver/SwiftyBeaver","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"SwiftyBeaver","products":[{"name":"SwiftyBeaver","targets":["SwiftyBeaver"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyBeaver","name":"SwiftyBeaver"}],"toolsVersion":"5.0"}},"version":"1.9.6"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"SwiftyBeaver","products":[{"name":"SwiftyBeaver","targets":["SwiftyBeaver"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyBeaver","name":"SwiftyBeaver"}],"toolsVersion":"5.0"}},"summary":"fixes file rotation issue","version":"1.9.5"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"SwiftyBeaver","products":[{"name":"SwiftyBeaver","targets":["SwiftyBeaver"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyBeaver","name":"SwiftyBeaver"}],"toolsVersion":"5.0"}},"summary":"Logfile rotation and Xcode 12.5 fixes","version":"1.9.4"}]},{"keywords":["apple","iap","in-app-purchase","in-app-receipt","ios","macos","swift-3","swift-language","tvos"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/bizz84/SwiftyStoreKit/master/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/bizz84/SwiftyStoreKit/master/README.md","summary":"Lightweight In App Purchases Swift framework for iOS 8.0+, tvOS 9.0+ and macOS 10.10+ ⛺","url":"https://github.com/bizz84/SwiftyStoreKit","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"6.2"}],"packageName":"SwiftyStoreKit","products":[{"name":"SwiftyStoreKit","targets":["SwiftyStoreKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyStoreKit","name":"SwiftyStoreKit"}],"toolsVersion":"5.0"}},"version":"0.16.4"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"6.2"}],"packageName":"SwiftyStoreKit","products":[{"name":"SwiftyStoreKit","targets":["SwiftyStoreKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyStoreKit","name":"SwiftyStoreKit"}],"toolsVersion":"5.0"}},"version":"0.16.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"6.2"}],"packageName":"SwiftyStoreKit","products":[{"name":"SwiftyStoreKit","targets":["SwiftyStoreKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftyStoreKit","name":"SwiftyStoreKit"}],"toolsVersion":"5.0"}},"version":"0.16.2"}]},{"keywords":["ble","bluetooth","bluetooth-library","bluetooth-low-energy","corebluetooth","discover-services","emits","peripherals","rssi","rxswift","scans","swift","swift-library"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/Polidea/RxBluetoothKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Polidea/RxBluetoothKit/master/README.md","summary":"iOS & OSX Bluetooth library for RxSwift","url":"https://github.com/Polidea/RxBluetoothKit","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"9.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"}],"packageName":"RxBluetoothKit","products":[{"name":"RxBluetoothKit","targets":["RxBluetoothKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxBluetoothKit","name":"RxBluetoothKit"}],"toolsVersion":"5.0"}},"version":"6.0.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"RxBluetoothKit","products":[{"name":"RxBluetoothKit","targets":["RxBluetoothKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxBluetoothKit","name":"RxBluetoothKit"}],"toolsVersion":"5.0"}},"version":"5.3.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"RxBluetoothKit","products":[{"name":"RxBluetoothKit","targets":["RxBluetoothKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxBluetoothKit","name":"RxBluetoothKit"}],"toolsVersion":"5.0"}},"version":"5.2.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"RxBluetoothKit","products":[{"name":"RxBluetoothKit","targets":["RxBluetoothKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxBluetoothKit","name":"RxBluetoothKit"}],"toolsVersion":"5.0"}},"version":"5.2.0"}]},{"keywords":["core-data","coredata","ios","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/jessesquires/JSQCoreDataKit/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/jessesquires/JSQCoreDataKit/main/README.md","summary":"A swifter Core Data stack","url":"https://github.com/jessesquires/JSQCoreDataKit","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"},{"name":"macos","version":"10.12"}],"packageName":"JSQCoreDataKit","products":[{"name":"JSQCoreDataKit","targets":["JSQCoreDataKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JSQCoreDataKit","name":"JSQCoreDataKit"}],"toolsVersion":"5.3"}},"version":"9.0.3"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"11.0"},{"name":"tvos","version":"11.0"},{"name":"watchos","version":"4.0"},{"name":"macos","version":"10.12"}],"packageName":"JSQCoreDataKit","products":[{"name":"JSQCoreDataKit","targets":["JSQCoreDataKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"JSQCoreDataKit","name":"JSQCoreDataKit"}],"toolsVersion":"5.2"}},"version":"9.0.2"}]},{"keywords":["apple-silicon","filter","gpgpu","gpu","image","image-processing","ios","maccatalyst","macos","metal","multimedia","opengl","real-time","rendering","tvos","video","video-processing"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/MetalPetal/MetalPetal/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/MetalPetal/MetalPetal/master/README.md","summary":"A GPU accelerated image and video processing framework built on Metal.","url":"https://github.com/MetalPetal/MetalPetal","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"13.0"}],"packageName":"MetalPetal","products":[{"name":"MetalPetal","targets":["MetalPetal"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MetalPetal","name":"MetalPetal"}],"toolsVersion":"5.1"}},"version":"1.25.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"13.0"}],"packageName":"MetalPetal","products":[{"name":"MetalPetal","targets":["MetalPetal"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MetalPetal","name":"MetalPetal"}],"toolsVersion":"5.1"}},"version":"1.25.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.13"},{"name":"ios","version":"11.0"},{"name":"tvos","version":"13.0"}],"packageName":"MetalPetal","products":[{"name":"MetalPetal","targets":["MetalPetal"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MetalPetal","name":"MetalPetal"}],"toolsVersion":"5.1"}},"version":"1.24.2"}]},{"keywords":["hacktoberfest","ios","swift","swift5","uifont"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Nirma/UIFontComplete/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Nirma/UIFontComplete/main/README.md","summary":"Font management (System & Custom) for iOS and tvOS","url":"https://github.com/Nirma/UIFontComplete","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"UIFontComplete","products":[{"name":"UIFontComplete","targets":["UIFontComplete"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIFontComplete","name":"UIFontComplete"}],"toolsVersion":"5.1"}},"version":"6.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"UIFontComplete","products":[{"name":"UIFontComplete","targets":["UIFontComplete"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIFontComplete","name":"UIFontComplete"}],"toolsVersion":"5.1"}},"version":"6.0.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"}],"packageName":"UIFontComplete","products":[{"name":"UIFontComplete","targets":["UIFontComplete"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIFontComplete","name":"UIFontComplete"}],"toolsVersion":"5.1"}},"version":"5.0.0"}]},{"keywords":["functional","ios","observer","reactive","reactivex","rxswift","swift","unidirectional"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/ReactiveX/RxSwift/main/LICENSE.md"},"readmeURL":"https://raw.githubusercontent.com/ReactiveX/RxSwift/main/README.md","summary":"Reactive Programming in Swift","url":"https://github.com/ReactiveX/RxSwift","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"9.0"},{"name":"macos","version":"10.10"},{"name":"watchos","version":"3.0"},{"name":"tvos","version":"9.0"}],"packageName":"RxSwift","products":[{"name":"RxBlocking","targets":["RxBlocking"],"type":{"library":["automatic"]}},{"name":"RxBlocking-Dynamic","targets":["RxBlocking"],"type":{"library":["dynamic"]}},{"name":"RxCocoa","targets":["RxCocoa"],"type":{"library":["automatic"]}},{"name":"RxCocoa-Dynamic","targets":["RxCocoa"],"type":{"library":["dynamic"]}},{"name":"RxRelay","targets":["RxRelay"],"type":{"library":["automatic"]}},{"name":"RxRelay-Dynamic","targets":["RxRelay"],"type":{"library":["dynamic"]}},{"name":"RxSwift","targets":["RxSwift"],"type":{"library":["automatic"]}},{"name":"RxSwift-Dynamic","targets":["RxSwift"],"type":{"library":["dynamic"]}},{"name":"RxTest","targets":["RxTest"],"type":{"library":["automatic"]}},{"name":"RxTest-Dynamic","targets":["RxTest"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"RxBlocking","name":"RxBlocking"},{"moduleName":"RxCocoa","name":"RxCocoa"},{"moduleName":"RxRelay","name":"RxRelay"},{"moduleName":"RxSwift","name":"RxSwift"},{"moduleName":"RxTest","name":"RxTest"}],"toolsVersion":"5.1"}},"version":"6.5.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"RxSwift","products":[{"name":"RxBlocking","targets":["RxBlocking"],"type":{"library":["automatic"]}},{"name":"RxCocoa","targets":["RxCocoa"],"type":{"library":["automatic"]}},{"name":"RxRelay","targets":["RxRelay"],"type":{"library":["automatic"]}},{"name":"RxSwift","targets":["RxSwift"],"type":{"library":["automatic"]}},{"name":"RxTest","targets":["RxTest"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxBlocking","name":"RxBlocking"},{"moduleName":"RxCocoa","name":"RxCocoa"},{"moduleName":"RxRelay","name":"RxRelay"},{"moduleName":"RxSwift","name":"RxSwift"},{"moduleName":"RxTest","name":"RxTest"}],"toolsVersion":"5.1"}},"version":"6.2.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"RxSwift","products":[{"name":"RxBlocking","targets":["RxBlocking"],"type":{"library":["automatic"]}},{"name":"RxCocoa","targets":["RxCocoa"],"type":{"library":["automatic"]}},{"name":"RxRelay","targets":["RxRelay"],"type":{"library":["automatic"]}},{"name":"RxSwift","targets":["RxSwift"],"type":{"library":["automatic"]}},{"name":"RxTest","targets":["RxTest"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxBlocking","name":"RxBlocking"},{"moduleName":"RxCocoa","name":"RxCocoa"},{"moduleName":"RxRelay","name":"RxRelay"},{"moduleName":"RxSwift","name":"RxSwift"},{"moduleName":"RxTest","name":"RxTest"}],"toolsVersion":"5.1"}},"version":"6.1.0"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxSwift","products":[{"name":"RxBlocking","targets":["RxBlocking"],"type":{"library":["automatic"]}},{"name":"RxCocoa","targets":["RxCocoa"],"type":{"library":["automatic"]}},{"name":"RxRelay","targets":["RxRelay"],"type":{"library":["automatic"]}},{"name":"RxSwift","targets":["RxSwift"],"type":{"library":["automatic"]}},{"name":"RxTest","targets":["RxTest"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxBlocking","name":"RxBlocking"},{"moduleName":"RxCocoa","name":"RxCocoa"},{"moduleName":"RxRelay","name":"RxRelay"},{"moduleName":"RxSwift","name":"RxSwift"},{"moduleName":"RxTest","name":"RxTest"}],"toolsVersion":"5.0"}},"version":"5.1.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxSwift","products":[{"name":"RxBlocking","targets":["RxBlocking"],"type":{"library":["automatic"]}},{"name":"RxCocoa","targets":["RxCocoa"],"type":{"library":["automatic"]}},{"name":"RxRelay","targets":["RxRelay"],"type":{"library":["automatic"]}},{"name":"RxSwift","targets":["RxSwift"],"type":{"library":["automatic"]}},{"name":"RxTest","targets":["RxTest"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxBlocking","name":"RxBlocking"},{"moduleName":"RxCocoa","name":"RxCocoa"},{"moduleName":"RxRelay","name":"RxRelay"},{"moduleName":"RxSwift","name":"RxSwift"},{"moduleName":"RxTest","name":"RxTest"}],"toolsVersion":"5.0"}},"version":"5.1.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"macos","version":"10.10"},{"name":"ios","version":"8.0"},{"name":"tvos","version":"9.0"},{"name":"watchos","version":"3.0"}],"packageName":"RxSwift","products":[{"name":"RxBlocking","targets":["RxBlocking"],"type":{"library":["automatic"]}},{"name":"RxCocoa","targets":["RxCocoa"],"type":{"library":["automatic"]}},{"name":"RxRelay","targets":["RxRelay"],"type":{"library":["automatic"]}},{"name":"RxSwift","targets":["RxSwift"],"type":{"library":["automatic"]}},{"name":"RxTest","targets":["RxTest"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"RxBlocking","name":"RxBlocking"},{"moduleName":"RxCocoa","name":"RxCocoa"},{"moduleName":"RxRelay","name":"RxRelay"},{"moduleName":"RxSwift","name":"RxSwift"},{"moduleName":"RxTest","name":"RxTest"}],"toolsVersion":"5.0"}},"version":"5.1.1"}]},{"keywords":["capture","crop-image","drawing","editor","gif","ios","multiple-photos","swift5","uiimagepickercontroller","video"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/AnyImageKit/AnyImageKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/AnyImageKit/AnyImageKit/master/README.md","summary":"A toolbox for pick/edit/capture photo or video. Written in Swift. ","url":"https://github.com/AnyImageKit/AnyImageKit","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"AnyImageKit","products":[{"name":"AnyImageKit","targets":["AnyImageKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AnyImageKit","name":"AnyImageKit"}],"toolsVersion":"5.3"}},"summary":"","version":"0.15.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"AnyImageKit","products":[{"name":"AnyImageKit","targets":["AnyImageKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AnyImageKit","name":"AnyImageKit"}],"toolsVersion":"5.3"}},"summary":"","version":"0.15.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"AnyImageKit","products":[{"name":"AnyImageKit","targets":["AnyImageKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AnyImageKit","name":"AnyImageKit"}],"toolsVersion":"5.3"}},"summary":"","version":"0.14.6"}]},{"keywords":["collection","container","deque","dequeue","hash","ordered-dictionary","ordered-set","queue","sequence"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/apple/swift-collections/main/LICENSE.txt"},"readmeURL":"https://raw.githubusercontent.com/apple/swift-collections/main/README.md","summary":"Commonly used data structures for Swift","url":"https://github.com/apple/swift-collections","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"packageName":"swift-collections","products":[{"name":"Collections","targets":["Collections"],"type":{"library":["automatic"]}},{"name":"DequeModule","targets":["DequeModule"],"type":{"library":["automatic"]}},{"name":"OrderedCollections","targets":["OrderedCollections"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Collections","name":"Collections"},{"moduleName":"DequeModule","name":"DequeModule"},{"moduleName":"OrderedCollections","name":"OrderedCollections"}],"toolsVersion":"5.5"}},"version":"1.0.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"swift-collections","products":[{"name":"Collections","targets":["Collections"],"type":{"library":["automatic"]}},{"name":"DequeModule","targets":["DequeModule"],"type":{"library":["automatic"]}},{"name":"OrderedCollections","targets":["OrderedCollections"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Collections","name":"Collections"},{"moduleName":"DequeModule","name":"DequeModule"},{"moduleName":"OrderedCollections","name":"OrderedCollections"}],"toolsVersion":"5.3"}},"version":"1.0.3"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"swift-collections","products":[{"name":"Collections","targets":["Collections"],"type":{"library":["automatic"]}},{"name":"DequeModule","targets":["DequeModule"],"type":{"library":["automatic"]}},{"name":"OrderedCollections","targets":["OrderedCollections"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Collections","name":"Collections"},{"moduleName":"DequeModule","name":"DequeModule"},{"moduleName":"OrderedCollections","name":"OrderedCollections"}],"toolsVersion":"5.3"}},"version":"1.0.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"swift-collections","products":[{"name":"Collections","targets":["Collections"],"type":{"library":["automatic"]}},{"name":"DequeModule","targets":["DequeModule"],"type":{"library":["automatic"]}},{"name":"OrderedCollections","targets":["OrderedCollections"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Collections","name":"Collections"},{"moduleName":"DequeModule","name":"DequeModule"},{"moduleName":"OrderedCollections","name":"OrderedCollections"}],"toolsVersion":"5.3"}},"version":"0.0.7"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"swift-collections","products":[{"name":"Collections","targets":["Collections"],"type":{"library":["automatic"]}},{"name":"DequeModule","targets":["DequeModule"],"type":{"library":["automatic"]}},{"name":"OrderedCollections","targets":["OrderedCollections"],"type":{"library":["automatic"]}},{"name":"swift-collections-benchmark","targets":["swift-collections-benchmark"],"type":{"executable":null}}],"targets":[{"moduleName":"Collections","name":"Collections"},{"moduleName":"DequeModule","name":"DequeModule"},{"moduleName":"OrderedCollections","name":"OrderedCollections"},{"moduleName":"swift_collections_benchmark","name":"swift-collections-benchmark"}],"toolsVersion":"5.3"}},"version":"0.0.5"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"packageName":"swift-collections","products":[{"name":"Collections","targets":["Collections"],"type":{"library":["automatic"]}},{"name":"DequeModule","targets":["DequeModule"],"type":{"library":["automatic"]}},{"name":"OrderedCollections","targets":["OrderedCollections"],"type":{"library":["automatic"]}},{"name":"swift-collections-benchmark","targets":["swift-collections-benchmark"],"type":{"executable":null}}],"targets":[{"moduleName":"Collections","name":"Collections"},{"moduleName":"DequeModule","name":"DequeModule"},{"moduleName":"OrderedCollections","name":"OrderedCollections"},{"moduleName":"swift_collections_benchmark","name":"swift-collections-benchmark"}],"toolsVersion":"5.3"}},"version":"0.0.4"}]},{"keywords":["algorithm","iterator","itertools"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/apple/swift-algorithms/main/LICENSE.txt"},"readmeURL":"https://raw.githubusercontent.com/apple/swift-algorithms/main/README.md","summary":"Commonly used sequence and collection algorithms for Swift","url":"https://github.com/apple/swift-algorithms","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"swift-algorithms","products":[{"name":"Algorithms","targets":["Algorithms"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Algorithms","name":"Algorithms"}],"toolsVersion":"5.1"}},"version":"1.0.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"swift-algorithms","products":[{"name":"Algorithms","targets":["Algorithms"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Algorithms","name":"Algorithms"}],"toolsVersion":"5.1"}},"version":"0.2.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"swift-algorithms","products":[{"name":"Algorithms","targets":["Algorithms"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Algorithms","name":"Algorithms"}],"toolsVersion":"5.1"}},"version":"0.2.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"swift-algorithms","products":[{"name":"Algorithms","targets":["Algorithms"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Algorithms","name":"Algorithms"}],"toolsVersion":"5.1"}},"version":"0.1.1"}]},{"keywords":["animation","animations","carthage","custom-transitions","hero","ios","ios-animation","ios-framework","ios-lib","ios-swift","ios-transition","layout","material-design","swift","swiftpm","transition-animation","xcode"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/HeroTransitions/Hero/develop/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/HeroTransitions/Hero/develop/README.md","summary":"Elegant transition library for iOS & tvOS","url":"https://github.com/HeroTransitions/Hero","versions":[{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"tvos","version":"10.0"},{"name":"ios","version":"10.0"}],"packageName":"Hero","products":[{"name":"Hero","targets":["Hero"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Hero","name":"Hero"}],"toolsVersion":"5.0"}},"summary":"- [#717](https://github.com/HeroTransitions/Hero/issues/717) - [#734](https://github.com/HeroTransitions/Hero/issues/734) - [#735](https://github.com/HeroTransitions/Hero/issues/735) - [#736](https://github.com/HeroTransitions/Hero/issues/736) - [#739](https://github.com/HeroTransitions/Hero/issues/739) - [#740](https://github.com/HeroTransitions/Hero/issues/740) Fix build warings in XCode 13.4.1 c30a7a867d3bc420e90ad276d9bf12287628ce87 - [#742](https://github.com/HeroTransitions/Hero/issues/742) Add `anchorPoint` support for transitioning a76e9f6dbeefb530743994634d37235e59401911","version":"1.6.2"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"tvos","version":"10.0"},{"name":"ios","version":"10.0"}],"packageName":"Hero","products":[{"name":"Hero","targets":["Hero"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"Hero","name":"Hero"}],"toolsVersion":"5.0"}},"summary":"Release 1.6.1","version":"1.6.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"minimumPlatformVersions":[{"name":"tvos","version":"10.0"},{"name":"ios","version":"10.0"}],"packageName":"Hero","products":[{"name":"Hero","targets":["Hero"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"Hero","name":"Hero"}],"toolsVersion":"5.0"}},"summary":"1.6.0 Release","version":"1.6.0"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: JieHui Lai","organization":"JieHui Lai","organizationalUnit":"D5Q73692VW","userID":"D5Q73692VW"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGZFRDQ0JGMmdBd0lCQWdJUUJ6TjQrUGlNTGhjU0p0ZER6YnlvOHpBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSXpNREV5T0RBMk5EQTBNMW9YRFRJME1ERXlPREEyTkRBME1sb3dnWUl4R2pBWUJnb0praWFKay9Jc1pBRUJEQXBFTlZFM016WTVNbFpYTVMwd0t3WURWUVFERENSVGQybG1kQ0JRWVdOcllXZGxJRU52Ykd4bFkzUnBiMjQ2SUVwcFpVaDFhU0JNWVdreEV6QVJCZ05WQkFzTUNrUTFVVGN6TmpreVZsY3hFekFSQmdOVkJBb01Da3BwWlVoMWFTQk1ZV2t4Q3pBSkJnTlZCQVlUQWtOT01JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMlBneTQ0empGMk9EbjRGRytUNkxNaEFwT0ozd1NSSEs2V3R3SkVmaUdIUkR0dmRqalFsWTA4dFpFaklzMGsyT20rNzh1RGVRVWNZNmNHYnRsQjRHY2NxNVhMazN1dnpVaUJReG1JVDhTMC9IcEJNdXYrdVBLMUduYXhmRHQ2V0h3bjdRZHZuYjZGK0pheERPb2JwaGdHRk4wL25LZnUrN1pwMzJmWmM0eTFiZm16aWZpek5HV2Z3bE1GYVpsKzJQSWdEdTBaOHEzVXNrcVZXZWJLNm5GKy91VkgzeGZzZHN5TkZZYlRPdHZyTFRRamxyR0lPWEJlOTBOTE1wUFF6SVMrQ1FmUFJkYnc3N3dvNVQyWDkvdFpSMkdTUTVFV091RFJyWTZVT21QVGpDY0FCVDRBQ1R5T2Q0a1o5aXpCYS9nZkRJMGZ4S2huckZSN21tY2RTalZRSURBUUFCbzRJQjhUQ0NBZTB3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFKL3NBVmtQbXZaQXFTRXJrbUtHTU1sK3luc2pCQkJnZ3JCZ0VGQlFjQkFRUTFNRE13TVFZSUt3WUJCUVVITUFHR0pXaDBkSEE2THk5dlkzTndMbUZ3Y0d4bExtTnZiUzl2WTNOd01ETXRkM2RrY21jek1Ua3dnZ0VlQmdOVkhTQUVnZ0VWTUlJQkVUQ0NBUTBHQ1NxR1NJYjNZMlFGQVRDQi96Q0J3d1lJS3dZQkJRVUhBZ0l3Z2JZTWdiTlNaV3hwWVc1alpTQnZiaUIwYUdseklHTmxjblJwWm1sallYUmxJR0o1SUdGdWVTQndZWEowZVNCaGMzTjFiV1Z6SUdGalkyVndkR0Z1WTJVZ2IyWWdkR2hsSUhSb1pXNGdZWEJ3YkdsallXSnNaU0J6ZEdGdVpHRnlaQ0IwWlhKdGN5QmhibVFnWTI5dVpHbDBhVzl1Y3lCdlppQjFjMlVzSUdObGNuUnBabWxqWVhSbElIQnZiR2xqZVNCaGJtUWdZMlZ5ZEdsbWFXTmhkR2x2YmlCd2NtRmpkR2xqWlNCemRHRjBaVzFsYm5SekxqQTNCZ2dyQmdFRkJRY0NBUllyYUhSMGNITTZMeTkzZDNjdVlYQndiR1V1WTI5dEwyTmxjblJwWm1sallYUmxZWFYwYUc5eWFYUjVMekFXQmdOVkhTVUJBZjhFRERBS0JnZ3JCZ0VGQlFjREF6QWRCZ05WSFE0RUZnUVVldkxMcE9XcnRlMjd4U2xkS3FTY1lzd3pOc1F3RGdZRFZSMFBBUUgvQkFRREFnZUFNQkFHQ2lxR1NJYjNZMlFHQVNNRUFnVUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFoWGFlYjhkWDJTSTdxYitqQ0lDOVFWMFJUcmNqQkJqVm9KQzNpRFFybklneXF0d0ZqYmtKQVBZRlhBTVBUdTFKVzdKV0JNdmV5SjByWWpnSSt1ajVKWDZiUWlLRllDc2tlZSswMEUrMTA5T3RLY2c3WFdQeW95d0Z5ZEQ2UHR6enQ3Z05lWDYrU3ZXSmZNRGpob2dHZU55aDQ5WUZOSFo3Y003cjhINzZZRzE0OVQrOWcxL0gxeGV2Uit6VnFsT1AxTnBDK2RHZm5TcUd6K29GVmcwMkJndGZlQU91c1NyY2R2TW1XaHhUR0dUZjBMeXVGaTF4WEhrZGhHSjhXd3RNdWpCZ01tMk8wcnp5TUZBNXd3RGxTMXA1ZGgwZ0V5azlibXNJdnpwTGFNUWJ6MEgwa0V0bzk5NlpJM21pRmIzQ1p3U25vbHNHeGhHTmVZa0J6RmovRCIKICBdCn0..2OIf-RjpjjE_LrylZjzcKS_P60IAXXHm42E9YbObES7kHzdNGRec37uZ3XndPIWiuyKOIwteroyTy9pwq2mZyzoxZsYYNkEuISKnQJBPhXsNIvzWMGvSkvhVSlPFc5_maC3SwHMLQETdhCeTLHfY8timBVM36jjsu7Ft5oXpcSp_EO7iIjtpfoCz0pr1sNLzIfCw2Cq-DDcfNTCkwRFSAHEIf-D7CV-r8VarDhSA2tMpiS5eqt8PLaL3XJBo6KGrTd16c8OHqwRY5QgWF24xozxQJpru75LadJZ4SdOK8dQoQqhYhypcDKdDJd9Hbab2aYP1R_lHmQEnxFFTTQggQw"}}